/* tslint:disable */
/* eslint-disable */
/**
 * ST2-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResidenceAbroadNewModel
 */
export interface ResidenceAbroadNewModel {
    /**
     * 
     * @type {number}
     * @memberof ResidenceAbroadNewModel
     */
    countryId?: number;
    /**
     * 
     * @type {Date}
     * @memberof ResidenceAbroadNewModel
     */
    dateFrom?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ResidenceAbroadNewModel
     */
    dateTo?: Date;
    /**
     * 
     * @type {string}
     * @memberof ResidenceAbroadNewModel
     */
    purposeOfStay?: string | null;
}

export function ResidenceAbroadNewModelFromJSON(json: any): ResidenceAbroadNewModel {
    return ResidenceAbroadNewModelFromJSONTyped(json, false);
}

export function ResidenceAbroadNewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResidenceAbroadNewModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'countryId': !exists(json, 'countryId') ? undefined : json['countryId'],
        'dateFrom': !exists(json, 'dateFrom') ? undefined : (new Date(json['dateFrom'])),
        'dateTo': !exists(json, 'dateTo') ? undefined : (new Date(json['dateTo'])),
        'purposeOfStay': !exists(json, 'purposeOfStay') ? undefined : json['purposeOfStay'],
    };
}

export function ResidenceAbroadNewModelToJSON(value?: ResidenceAbroadNewModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'countryId': value.countryId,
        'dateFrom': value.dateFrom === undefined ? undefined : (value.dateFrom.toISOString()),
        'dateTo': value.dateTo === undefined ? undefined : (value.dateTo.toISOString()),
        'purposeOfStay': value.purposeOfStay,
    };
}


