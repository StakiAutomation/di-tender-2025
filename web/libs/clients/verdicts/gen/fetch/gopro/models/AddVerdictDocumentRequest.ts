/* tslint:disable */
/* eslint-disable */
/**
 * GoPro External Integration REST Services - API version 1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddVerdictDocumentRequest
 */
export interface AddVerdictDocumentRequest {
    /**
     * Record ID of the immediate parent.
     * Matches both container case in GoPro and verdict ID from the custom table.
     * @type {string}
     * @memberof AddVerdictDocumentRequest
     */
    verdictID?: string;
    /**
     * Subject/title of the new document
     * @type {string}
     * @memberof AddVerdictDocumentRequest
     */
    subject?: string;
    /**
     * File name of the document
     * @type {string}
     * @memberof AddVerdictDocumentRequest
     */
    fileName?: string;
    /**
     * Binary content that will be uploaed. Represented as Base64 encoded string
     * @type {string}
     * @memberof AddVerdictDocumentRequest
     */
    content?: string;
}

export function AddVerdictDocumentRequestFromJSON(json: any): AddVerdictDocumentRequest {
    return AddVerdictDocumentRequestFromJSONTyped(json, false);
}

export function AddVerdictDocumentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddVerdictDocumentRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'verdictID': !exists(json, 'verdictID') ? undefined : json['verdictID'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'content': !exists(json, 'content') ? undefined : json['content'],
    };
}

export function AddVerdictDocumentRequestToJSON(value?: AddVerdictDocumentRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'verdictID': value.verdictID,
        'subject': value.subject,
        'fileName': value.fileName,
        'content': value.content,
    };
}


