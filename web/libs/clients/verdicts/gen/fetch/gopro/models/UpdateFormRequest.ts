/* tslint:disable */
/* eslint-disable */
/**
 * GoPro External Integration REST Services - API version 1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LinkedContact,
    LinkedContactFromJSON,
    LinkedContactFromJSONTyped,
    LinkedContactToJSON,
    Metadata,
    MetadataFromJSON,
    MetadataFromJSONTyped,
    MetadataToJSON,
} from './';

/**
 * UpdateForm method request structure
 * @export
 * @interface UpdateFormRequest
 */
export interface UpdateFormRequest {
    /**
     * Record id of target form
     * @type {string}
     * @memberof UpdateFormRequest
     */
    formID?: string;
    /**
     * Form name
     * @type {string}
     * @memberof UpdateFormRequest
     */
    name?: string;
    /**
     * 
     * @type {LinkedContact}
     * @memberof UpdateFormRequest
     */
    contact?: LinkedContact;
    /**
     * List of keywords
     * @type {Array<string>}
     * @memberof UpdateFormRequest
     */
    keywords?: Array<string>;
    /**
     * Collection of associated metadata values with definitions
     * @type {Array<Metadata>}
     * @memberof UpdateFormRequest
     */
    metadata?: Array<Metadata>;
    /**
     * Flag to control full overwriting of properties
     * When true - all properties are cleared and reset with the new value. Missing properties will be cleared to empty/default value(s). Object should be retrieved first before updating
     * When false - only passed arguments will be updated.
     * @type {boolean}
     * @memberof UpdateFormRequest
     */
    overwrite?: boolean;
}

export function UpdateFormRequestFromJSON(json: any): UpdateFormRequest {
    return UpdateFormRequestFromJSONTyped(json, false);
}

export function UpdateFormRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateFormRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'formID': !exists(json, 'formID') ? undefined : json['formID'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'contact': !exists(json, 'contact') ? undefined : LinkedContactFromJSON(json['contact']),
        'keywords': !exists(json, 'keywords') ? undefined : json['keywords'],
        'metadata': !exists(json, 'metadata') ? undefined : ((json['metadata'] as Array<any>).map(MetadataFromJSON)),
        'overwrite': !exists(json, 'overwrite') ? undefined : json['overwrite'],
    };
}

export function UpdateFormRequestToJSON(value?: UpdateFormRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'formID': value.formID,
        'name': value.name,
        'contact': LinkedContactToJSON(value.contact),
        'keywords': value.keywords,
        'metadata': value.metadata === undefined ? undefined : ((value.metadata as Array<any>).map(MetadataToJSON)),
        'overwrite': value.overwrite,
    };
}


