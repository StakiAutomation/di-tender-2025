/* tslint:disable */
/* eslint-disable */
/**
 * GoPro External Integration REST Services - API version 1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LinkedContact,
    LinkedContactFromJSON,
    LinkedContactFromJSONTyped,
    LinkedContactToJSON,
    Metadata,
    MetadataFromJSON,
    MetadataFromJSONTyped,
    MetadataToJSON,
} from './';

/**
 * CreateForm method request structure
 * @export
 * @interface CreateFormRequest
 */
export interface CreateFormRequest {
    /**
     * Case number or record ID of the top parent case
     * @type {string}
     * @memberof CreateFormRequest
     */
    caseNumber?: string;
    /**
     * Record ID of the immediate parent under which will be placed the form. When this is not the top case then <seealso cref="P:GoPro.EIR.Requests.CreateFormRequest.CaseNumber" /> is required
     * @type {string}
     * @memberof CreateFormRequest
     */
    parentID?: string;
    /**
     * Form template specified by name
     * @type {string}
     * @memberof CreateFormRequest
     */
    template?: string;
    /**
     * Name of custom form
     * @type {string}
     * @memberof CreateFormRequest
     */
    name?: string;
    /**
     * 
     * @type {LinkedContact}
     * @memberof CreateFormRequest
     */
    contact?: LinkedContact;
    /**
     * Keywords
     * @type {Array<string>}
     * @memberof CreateFormRequest
     */
    keywords?: Array<string>;
    /**
     * List of metadata values
     * @type {Array<Metadata>}
     * @memberof CreateFormRequest
     */
    metadata?: Array<Metadata>;
}

export function CreateFormRequestFromJSON(json: any): CreateFormRequest {
    return CreateFormRequestFromJSONTyped(json, false);
}

export function CreateFormRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateFormRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'caseNumber': !exists(json, 'caseNumber') ? undefined : json['caseNumber'],
        'parentID': !exists(json, 'parentID') ? undefined : json['parentID'],
        'template': !exists(json, 'template') ? undefined : json['template'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'contact': !exists(json, 'contact') ? undefined : LinkedContactFromJSON(json['contact']),
        'keywords': !exists(json, 'keywords') ? undefined : json['keywords'],
        'metadata': !exists(json, 'metadata') ? undefined : ((json['metadata'] as Array<any>).map(MetadataFromJSON)),
    };
}

export function CreateFormRequestToJSON(value?: CreateFormRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'caseNumber': value.caseNumber,
        'parentID': value.parentID,
        'template': value.template,
        'name': value.name,
        'contact': LinkedContactToJSON(value.contact),
        'keywords': value.keywords,
        'metadata': value.metadata === undefined ? undefined : ((value.metadata as Array<any>).map(MetadataToJSON)),
    };
}


