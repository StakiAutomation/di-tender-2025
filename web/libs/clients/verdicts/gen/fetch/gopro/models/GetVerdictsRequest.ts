/* tslint:disable */
/* eslint-disable */
/**
 * GoPro External Integration REST Services - API version 1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetVerdictsRequest
 */
export interface GetVerdictsRequest {
    /**
     * 
     * @type {string}
     * @memberof GetVerdictsRequest
     */
    searchTerm?: string;
    /**
     * 
     * @type {string}
     * @memberof GetVerdictsRequest
     */
    courtLevel?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof GetVerdictsRequest
     */
    caseCategories?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof GetVerdictsRequest
     */
    caseTypes?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof GetVerdictsRequest
     */
    caseNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof GetVerdictsRequest
     */
    title?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof GetVerdictsRequest
     */
    keywords?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof GetVerdictsRequest
     */
    laws?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof GetVerdictsRequest
     */
    dateFrom?: string;
    /**
     * 
     * @type {string}
     * @memberof GetVerdictsRequest
     */
    dateTo?: string;
    /**
     * 
     * @type {string}
     * @memberof GetVerdictsRequest
     */
    orderBy?: string;
    /**
     * 
     * @type {number}
     * @memberof GetVerdictsRequest
     */
    pageNumber?: number;
    /**
     * 
     * @type {number}
     * @memberof GetVerdictsRequest
     */
    itemsPerPage?: number;
}

export function GetVerdictsRequestFromJSON(json: any): GetVerdictsRequest {
    return GetVerdictsRequestFromJSONTyped(json, false);
}

export function GetVerdictsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetVerdictsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'searchTerm': !exists(json, 'searchTerm') ? undefined : json['searchTerm'],
        'courtLevel': !exists(json, 'courtLevel') ? undefined : json['courtLevel'],
        'caseCategories': !exists(json, 'caseCategories') ? undefined : json['caseCategories'],
        'caseTypes': !exists(json, 'caseTypes') ? undefined : json['caseTypes'],
        'caseNumber': !exists(json, 'caseNumber') ? undefined : json['caseNumber'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'keywords': !exists(json, 'keywords') ? undefined : json['keywords'],
        'laws': !exists(json, 'laws') ? undefined : json['laws'],
        'dateFrom': !exists(json, 'dateFrom') ? undefined : json['dateFrom'],
        'dateTo': !exists(json, 'dateTo') ? undefined : json['dateTo'],
        'orderBy': !exists(json, 'orderBy') ? undefined : json['orderBy'],
        'pageNumber': !exists(json, 'pageNumber') ? undefined : json['pageNumber'],
        'itemsPerPage': !exists(json, 'itemsPerPage') ? undefined : json['itemsPerPage'],
    };
}

export function GetVerdictsRequestToJSON(value?: GetVerdictsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'searchTerm': value.searchTerm,
        'courtLevel': value.courtLevel,
        'caseCategories': value.caseCategories,
        'caseTypes': value.caseTypes,
        'caseNumber': value.caseNumber,
        'title': value.title,
        'keywords': value.keywords,
        'laws': value.laws,
        'dateFrom': value.dateFrom,
        'dateTo': value.dateTo,
        'orderBy': value.orderBy,
        'pageNumber': value.pageNumber,
        'itemsPerPage': value.itemsPerPage,
    };
}


