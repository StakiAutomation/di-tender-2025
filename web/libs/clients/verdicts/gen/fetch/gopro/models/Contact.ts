/* tslint:disable */
/* eslint-disable */
/**
 * GoPro External Integration REST Services - API version 1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Contact data model
 * @export
 * @interface Contact
 */
export interface Contact {
    /**
     * GoPro record ID of the company represented by this person
     * @type {string}
     * @memberof Contact
     */
    companyID?: string;
    /**
     * Role of this contact relation
     * @type {string}
     * @memberof Contact
     */
    contactRole?: string;
    /**
     * First name of contact person
     * @type {string}
     * @memberof Contact
     */
    firstName?: string;
    /**
     * Middle name of contact person
     * @type {string}
     * @memberof Contact
     */
    middleName?: string;
    /**
     * Surname of contact person
     * @type {string}
     * @memberof Contact
     */
    lastName?: string;
    /**
     * Job title
     * @type {string}
     * @memberof Contact
     */
    jobTitle?: string;
    /**
     * Unique record ID (a GUID) of the client
     * @type {string}
     * @memberof Contact
     */
    id?: string;
    /**
     * National identification number
     * @type {string}
     * @memberof Contact
     */
    idNumber?: string;
    /**
     * Street address of the client
     * @type {string}
     * @memberof Contact
     */
    address?: string;
    /**
     * Postal code
     * @type {string}
     * @memberof Contact
     */
    postCode?: string;
    /**
     * City
     * @type {string}
     * @memberof Contact
     */
    city?: string;
    /**
     * Country name
     * @type {string}
     * @memberof Contact
     */
    country?: string;
    /**
     * Primary language used
     * @type {string}
     * @memberof Contact
     */
    language?: string;
    /**
     * Mobile phone number
     * @type {string}
     * @memberof Contact
     */
    mobilePhone?: string;
    /**
     * Home phone number
     * @type {string}
     * @memberof Contact
     */
    homePhone?: string;
    /**
     * Work phone number
     * @type {string}
     * @memberof Contact
     */
    workPhone?: string;
    /**
     * Fax number
     * @type {string}
     * @memberof Contact
     */
    faxNumber?: string;
    /**
     * Email address
     * @type {string}
     * @memberof Contact
     */
    email?: string;
    /**
     * GoPro status of the client
     * @type {string}
     * @memberof Contact
     */
    statusName?: string;
}

export function ContactFromJSON(json: any): Contact {
    return ContactFromJSONTyped(json, false);
}

export function ContactFromJSONTyped(json: any, ignoreDiscriminator: boolean): Contact {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'companyID': !exists(json, 'companyID') ? undefined : json['companyID'],
        'contactRole': !exists(json, 'contactRole') ? undefined : json['contactRole'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'middleName': !exists(json, 'middleName') ? undefined : json['middleName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'jobTitle': !exists(json, 'jobTitle') ? undefined : json['jobTitle'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'idNumber': !exists(json, 'idNumber') ? undefined : json['idNumber'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'postCode': !exists(json, 'postCode') ? undefined : json['postCode'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'language': !exists(json, 'language') ? undefined : json['language'],
        'mobilePhone': !exists(json, 'mobilePhone') ? undefined : json['mobilePhone'],
        'homePhone': !exists(json, 'homePhone') ? undefined : json['homePhone'],
        'workPhone': !exists(json, 'workPhone') ? undefined : json['workPhone'],
        'faxNumber': !exists(json, 'faxNumber') ? undefined : json['faxNumber'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'statusName': !exists(json, 'statusName') ? undefined : json['statusName'],
    };
}

export function ContactToJSON(value?: Contact | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'companyID': value.companyID,
        'contactRole': value.contactRole,
        'firstName': value.firstName,
        'middleName': value.middleName,
        'lastName': value.lastName,
        'jobTitle': value.jobTitle,
        'id': value.id,
        'idNumber': value.idNumber,
        'address': value.address,
        'postCode': value.postCode,
        'city': value.city,
        'country': value.country,
        'language': value.language,
        'mobilePhone': value.mobilePhone,
        'homePhone': value.homePhone,
        'workPhone': value.workPhone,
        'faxNumber': value.faxNumber,
        'email': value.email,
        'statusName': value.statusName,
    };
}


