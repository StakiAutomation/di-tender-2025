/* tslint:disable */
/* eslint-disable */
/**
 * RLS driver licence Rest API
 * RESTFul services for driver licences. Programmed in .NET 8
 *
 * The version of the OpenAPI document: 5.0
 * Contact: tmd@tmd.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Practice permit DTO
 * @export
 * @interface PracticePermitDto
 */
export interface PracticePermitDto {
    /**
     * The student
     * @type {string}
     * @memberof PracticePermitDto
     */
    student?: string | null;
    /**
     * The instructor
     * @type {string}
     * @memberof PracticePermitDto
     */
    instructor?: string | null;
    /**
     * Is the record OK
     * @type {boolean}
     * @memberof PracticePermitDto
     */
    isOk?: boolean;
    /**
     * Error code, if any
     * @type {string}
     * @memberof PracticePermitDto
     */
    errorCode?: string | null;
}

export function PracticePermitDtoFromJSON(json: any): PracticePermitDto {
    return PracticePermitDtoFromJSONTyped(json, false);
}

export function PracticePermitDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PracticePermitDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'student': !exists(json, 'student') ? undefined : json['student'],
        'instructor': !exists(json, 'instructor') ? undefined : json['instructor'],
        'isOk': !exists(json, 'isOk') ? undefined : json['isOk'],
        'errorCode': !exists(json, 'errorCode') ? undefined : json['errorCode'],
    };
}

export function PracticePermitDtoToJSON(value?: PracticePermitDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'student': value.student,
        'instructor': value.instructor,
        'isOk': value.isOk,
        'errorCode': value.errorCode,
    };
}


