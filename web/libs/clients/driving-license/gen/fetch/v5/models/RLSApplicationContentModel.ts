/* tslint:disable */
/* eslint-disable */
/**
 * RLS driver licence Rest API
 * RESTFul services for driver licences. Programmed in .NET 8
 *
 * The version of the OpenAPI document: 5.0
 * Contact: tmd@tmd.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * RLS Application content
 * @export
 * @interface RLSApplicationContentModel
 */
export interface RLSApplicationContentModel {
    /**
     * File name
     * @type {string}
     * @memberof RLSApplicationContentModel
     */
    fileName?: string | null;
    /**
     * File extension
     * @type {string}
     * @memberof RLSApplicationContentModel
     */
    fileExtension?: string | null;
    /**
     * Content type
     * @type {string}
     * @memberof RLSApplicationContentModel
     */
    contentType?: string | null;
    /**
     * Content data
     * @type {string}
     * @memberof RLSApplicationContentModel
     */
    content?: string | null;
    /**
     * File description
     * @type {string}
     * @memberof RLSApplicationContentModel
     */
    description?: string | null;
}

export function RLSApplicationContentModelFromJSON(json: any): RLSApplicationContentModel {
    return RLSApplicationContentModelFromJSONTyped(json, false);
}

export function RLSApplicationContentModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): RLSApplicationContentModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'fileExtension': !exists(json, 'fileExtension') ? undefined : json['fileExtension'],
        'contentType': !exists(json, 'contentType') ? undefined : json['contentType'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function RLSApplicationContentModelToJSON(value?: RLSApplicationContentModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fileName': value.fileName,
        'fileExtension': value.fileExtension,
        'contentType': value.contentType,
        'content': value.content,
        'description': value.description,
    };
}


