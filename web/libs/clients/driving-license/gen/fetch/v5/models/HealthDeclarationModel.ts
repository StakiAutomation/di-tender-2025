/* tslint:disable */
/* eslint-disable */
/**
 * RLS driver licence Rest API
 * RESTFul services for driver licences. Programmed in .NET 8
 *
 * The version of the OpenAPI document: 5.0
 * Contact: tmd@tmd.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Health declaration when applying for driver's license
 * @export
 * @interface HealthDeclarationModel
 */
export interface HealthDeclarationModel {
    /**
     * Is person disabled
     * @type {boolean}
     * @memberof HealthDeclarationModel
     */
    isDisabled?: boolean | null;
    /**
     * Has person diabetes
     * @type {boolean}
     * @memberof HealthDeclarationModel
     */
    hasDiabetes?: boolean | null;
    /**
     * Has person Epilepsy
     * @type {boolean}
     * @memberof HealthDeclarationModel
     */
    hasEpilepsy?: boolean | null;
    /**
     * Is person alcoholic
     * @type {boolean}
     * @memberof HealthDeclarationModel
     */
    isAlcoholic?: boolean | null;
    /**
     * Does person have a heart disease
     * @type {boolean}
     * @memberof HealthDeclarationModel
     */
    hasHeartDisease?: boolean | null;
    /**
     * Has person mental illness
     * @type {boolean}
     * @memberof HealthDeclarationModel
     */
    hasMentalIllness?: boolean | null;
    /**
     * Has person other diseases
     * @type {boolean}
     * @memberof HealthDeclarationModel
     */
    hasOtherDiseases?: boolean | null;
    /**
     * Does person use medical drugs
     * @type {boolean}
     * @memberof HealthDeclarationModel
     */
    usesMedicalDrugs?: boolean | null;
    /**
     * Does person use contact glasses
     * @type {boolean}
     * @memberof HealthDeclarationModel
     */
    usesContactGlasses?: boolean | null;
    /**
     * Does person have reduced peripheral vision
     * @type {boolean}
     * @memberof HealthDeclarationModel
     */
    hasReducedPeripheralVision?: boolean | null;
}

export function HealthDeclarationModelFromJSON(json: any): HealthDeclarationModel {
    return HealthDeclarationModelFromJSONTyped(json, false);
}

export function HealthDeclarationModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthDeclarationModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isDisabled': !exists(json, 'isDisabled') ? undefined : json['isDisabled'],
        'hasDiabetes': !exists(json, 'hasDiabetes') ? undefined : json['hasDiabetes'],
        'hasEpilepsy': !exists(json, 'hasEpilepsy') ? undefined : json['hasEpilepsy'],
        'isAlcoholic': !exists(json, 'isAlcoholic') ? undefined : json['isAlcoholic'],
        'hasHeartDisease': !exists(json, 'hasHeartDisease') ? undefined : json['hasHeartDisease'],
        'hasMentalIllness': !exists(json, 'hasMentalIllness') ? undefined : json['hasMentalIllness'],
        'hasOtherDiseases': !exists(json, 'hasOtherDiseases') ? undefined : json['hasOtherDiseases'],
        'usesMedicalDrugs': !exists(json, 'usesMedicalDrugs') ? undefined : json['usesMedicalDrugs'],
        'usesContactGlasses': !exists(json, 'usesContactGlasses') ? undefined : json['usesContactGlasses'],
        'hasReducedPeripheralVision': !exists(json, 'hasReducedPeripheralVision') ? undefined : json['hasReducedPeripheralVision'],
    };
}

export function HealthDeclarationModelToJSON(value?: HealthDeclarationModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isDisabled': value.isDisabled,
        'hasDiabetes': value.hasDiabetes,
        'hasEpilepsy': value.hasEpilepsy,
        'isAlcoholic': value.isAlcoholic,
        'hasHeartDisease': value.hasHeartDisease,
        'hasMentalIllness': value.hasMentalIllness,
        'hasOtherDiseases': value.hasOtherDiseases,
        'usesMedicalDrugs': value.usesMedicalDrugs,
        'usesContactGlasses': value.usesContactGlasses,
        'hasReducedPeripheralVision': value.hasReducedPeripheralVision,
    };
}


