/* tslint:disable */
/* eslint-disable */
/**
 * RLS driver licence Rest API
 * RESTFul services for driver licences. Programmed in .NET 8
 *
 * The version of the OpenAPI document: 5.0
 * Contact: tmd@tmd.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HealthDeclarationModel,
    HealthDeclarationModelFromJSON,
    HealthDeclarationModelFromJSONTyped,
    HealthDeclarationModelToJSON,
} from './';

/**
 * Post new temporary license
 * @export
 * @interface PostTemporaryLicenseWithHealthDeclaration
 */
export interface PostTemporaryLicenseWithHealthDeclaration {
    /**
     * Publishing authority
     * @type {number}
     * @memberof PostTemporaryLicenseWithHealthDeclaration
     */
    authority: number;
    /**
     * Does person need to present health certificate
     * @type {boolean}
     * @memberof PostTemporaryLicenseWithHealthDeclaration
     */
    bringsHealthCertificate: boolean;
    /**
     * Applicant will bring new photo for license
     * @type {boolean}
     * @memberof PostTemporaryLicenseWithHealthDeclaration
     */
    bringNewPhoto: boolean;
    /**
     * Applicant has asked to send license in mail
     * @type {boolean}
     * @memberof PostTemporaryLicenseWithHealthDeclaration
     */
    sendLicenseInMail: boolean;
    /**
     * Address to send license to
     * @type {string}
     * @memberof PostTemporaryLicenseWithHealthDeclaration
     */
    sendToAddress?: string | null;
    /**
     * Social security number for driving teachser
     * @type {string}
     * @memberof PostTemporaryLicenseWithHealthDeclaration
     */
    instructorSSN: string;
    /**
     * Applicant email
     * @type {string}
     * @memberof PostTemporaryLicenseWithHealthDeclaration
     */
    email?: string | null;
    /**
     * Applicant mobile number
     * @type {string}
     * @memberof PostTemporaryLicenseWithHealthDeclaration
     */
    gsm?: string | null;
    /**
     * 
     * @type {HealthDeclarationModel}
     * @memberof PostTemporaryLicenseWithHealthDeclaration
     */
    healthDeclaration?: HealthDeclarationModel;
}

export function PostTemporaryLicenseWithHealthDeclarationFromJSON(json: any): PostTemporaryLicenseWithHealthDeclaration {
    return PostTemporaryLicenseWithHealthDeclarationFromJSONTyped(json, false);
}

export function PostTemporaryLicenseWithHealthDeclarationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostTemporaryLicenseWithHealthDeclaration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authority': json['authority'],
        'bringsHealthCertificate': json['bringsHealthCertificate'],
        'bringNewPhoto': json['bringNewPhoto'],
        'sendLicenseInMail': json['sendLicenseInMail'],
        'sendToAddress': !exists(json, 'sendToAddress') ? undefined : json['sendToAddress'],
        'instructorSSN': json['instructorSSN'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'gsm': !exists(json, 'gsm') ? undefined : json['gsm'],
        'healthDeclaration': !exists(json, 'healthDeclaration') ? undefined : HealthDeclarationModelFromJSON(json['healthDeclaration']),
    };
}

export function PostTemporaryLicenseWithHealthDeclarationToJSON(value?: PostTemporaryLicenseWithHealthDeclaration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'authority': value.authority,
        'bringsHealthCertificate': value.bringsHealthCertificate,
        'bringNewPhoto': value.bringNewPhoto,
        'sendLicenseInMail': value.sendLicenseInMail,
        'sendToAddress': value.sendToAddress,
        'instructorSSN': value.instructorSSN,
        'email': value.email,
        'gsm': value.gsm,
        'healthDeclaration': HealthDeclarationModelToJSON(value.healthDeclaration),
    };
}


