/* tslint:disable */
/* eslint-disable */
/**
 * RLS driver licence Rest API
 * RESTFul services for driver licences. Programmed in ASP.NET Core 3 API 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tmd@tmd.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Entity for picture
 * @export
 * @interface Myndir
 */
export interface Myndir {
    /**
     * Picture id
     * @type {number}
     * @memberof Myndir
     */
    id?: number;
    /**
     * Person id number
     * @type {string}
     * @memberof Myndir
     */
    kennitala?: string | null;
    /**
     * Date registered
     * @type {Date}
     * @memberof Myndir
     */
    skrad?: Date;
    /**
     * Image
     * @type {string}
     * @memberof Myndir
     */
    mynd?: string | null;
    /**
     * Quality
     * @type {number}
     * @memberof Myndir
     */
    gaedi?: number;
    /**
     * Belongs to what program
     * @type {number}
     * @memberof Myndir
     */
    forrit?: number;
    /**
     * Type of image
     * @type {number}
     * @memberof Myndir
     */
    tegund?: number;
}

export function MyndirFromJSON(json: any): Myndir {
    return MyndirFromJSONTyped(json, false);
}

export function MyndirFromJSONTyped(json: any, ignoreDiscriminator: boolean): Myndir {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'kennitala': !exists(json, 'kennitala') ? undefined : json['kennitala'],
        'skrad': !exists(json, 'skrad') ? undefined : (new Date(json['skrad'])),
        'mynd': !exists(json, 'mynd') ? undefined : json['mynd'],
        'gaedi': !exists(json, 'gaedi') ? undefined : json['gaedi'],
        'forrit': !exists(json, 'forrit') ? undefined : json['forrit'],
        'tegund': !exists(json, 'tegund') ? undefined : json['tegund'],
    };
}

export function MyndirToJSON(value?: Myndir | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'kennitala': value.kennitala,
        'skrad': value.skrad === undefined ? undefined : (value.skrad.toISOString()),
        'mynd': value.mynd,
        'gaedi': value.gaedi,
        'forrit': value.forrit,
        'tegund': value.tegund,
    };
}


