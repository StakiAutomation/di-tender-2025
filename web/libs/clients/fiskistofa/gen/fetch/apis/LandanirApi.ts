/* tslint:disable */
/* eslint-disable */
/**
 * Gagnaveita Fiskistofu
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: olafur.palmi.gudnason@fiskistofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    LondunDTO,
    LondunDTOFromJSON,
    LondunDTOToJSON,
} from '../models';

export interface V1LandanirDagsetningarGetRequest {
    dagsFra: Date;
    dagsTil: Date;
}

export interface V1LandanirSeljendurSeljandikennitalaDagsetningarGetRequest {
    seljandikennitala: string;
    dagsFra: Date;
    dagsTil: Date;
}

export interface V1LandanirSkipnumerSkipnumerGetRequest {
    skipnumer: number;
}

/**
 * 
 */
export class LandanirApi extends runtime.BaseAPI {

    /**
     * Sækir gögn um landanir út frá dagsetningum.
     */
    async v1LandanirDagsetningarGetRaw(requestParameters: V1LandanirDagsetningarGetRequest): Promise<runtime.ApiResponse<Array<LondunDTO>>> {
        if (requestParameters.dagsFra === null || requestParameters.dagsFra === undefined) {
            throw new runtime.RequiredError('dagsFra','Required parameter requestParameters.dagsFra was null or undefined when calling v1LandanirDagsetningarGet.');
        }

        if (requestParameters.dagsTil === null || requestParameters.dagsTil === undefined) {
            throw new runtime.RequiredError('dagsTil','Required parameter requestParameters.dagsTil was null or undefined when calling v1LandanirDagsetningarGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.dagsFra !== undefined) {
            queryParameters['DagsFra'] = (requestParameters.dagsFra as any).toISOString();
        }

        if (requestParameters.dagsTil !== undefined) {
            queryParameters['DagsTil'] = (requestParameters.dagsTil as any).toISOString();
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/landanir/dagsetningar`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(LondunDTOFromJSON));
    }

    /**
     * Sækir gögn um landanir út frá dagsetningum.
     */
    async v1LandanirDagsetningarGet(requestParameters: V1LandanirDagsetningarGetRequest): Promise<Array<LondunDTO>> {
        const response = await this.v1LandanirDagsetningarGetRaw(requestParameters);
        return await response.value();
    }

    /**
     * Sækir gögn um landanir út frá kennitölu seljanda og dagsetningum.
     */
    async v1LandanirSeljendurSeljandikennitalaDagsetningarGetRaw(requestParameters: V1LandanirSeljendurSeljandikennitalaDagsetningarGetRequest): Promise<runtime.ApiResponse<Array<LondunDTO>>> {
        if (requestParameters.seljandikennitala === null || requestParameters.seljandikennitala === undefined) {
            throw new runtime.RequiredError('seljandikennitala','Required parameter requestParameters.seljandikennitala was null or undefined when calling v1LandanirSeljendurSeljandikennitalaDagsetningarGet.');
        }

        if (requestParameters.dagsFra === null || requestParameters.dagsFra === undefined) {
            throw new runtime.RequiredError('dagsFra','Required parameter requestParameters.dagsFra was null or undefined when calling v1LandanirSeljendurSeljandikennitalaDagsetningarGet.');
        }

        if (requestParameters.dagsTil === null || requestParameters.dagsTil === undefined) {
            throw new runtime.RequiredError('dagsTil','Required parameter requestParameters.dagsTil was null or undefined when calling v1LandanirSeljendurSeljandikennitalaDagsetningarGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.dagsFra !== undefined) {
            queryParameters['DagsFra'] = (requestParameters.dagsFra as any).toISOString();
        }

        if (requestParameters.dagsTil !== undefined) {
            queryParameters['DagsTil'] = (requestParameters.dagsTil as any).toISOString();
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/landanir/seljendur/{seljandikennitala}/dagsetningar`.replace(`{${"seljandikennitala"}}`, encodeURIComponent(String(requestParameters.seljandikennitala))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(LondunDTOFromJSON));
    }

    /**
     * Sækir gögn um landanir út frá kennitölu seljanda og dagsetningum.
     */
    async v1LandanirSeljendurSeljandikennitalaDagsetningarGet(requestParameters: V1LandanirSeljendurSeljandikennitalaDagsetningarGetRequest): Promise<Array<LondunDTO>> {
        const response = await this.v1LandanirSeljendurSeljandikennitalaDagsetningarGetRaw(requestParameters);
        return await response.value();
    }

    /**
     * Sækir gögn um landanir útfrá skipanúmeri.
     */
    async v1LandanirSkipnumerSkipnumerGetRaw(requestParameters: V1LandanirSkipnumerSkipnumerGetRequest): Promise<runtime.ApiResponse<Array<LondunDTO>>> {
        if (requestParameters.skipnumer === null || requestParameters.skipnumer === undefined) {
            throw new runtime.RequiredError('skipnumer','Required parameter requestParameters.skipnumer was null or undefined when calling v1LandanirSkipnumerSkipnumerGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/landanir/skipnumer/{skipnumer}`.replace(`{${"skipnumer"}}`, encodeURIComponent(String(requestParameters.skipnumer))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(LondunDTOFromJSON));
    }

    /**
     * Sækir gögn um landanir útfrá skipanúmeri.
     */
    async v1LandanirSkipnumerSkipnumerGet(requestParameters: V1LandanirSkipnumerSkipnumerGetRequest): Promise<Array<LondunDTO>> {
        const response = await this.v1LandanirSkipnumerSkipnumerGetRaw(requestParameters);
        return await response.value();
    }

}
