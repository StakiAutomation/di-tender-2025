/* tslint:disable */
/* eslint-disable */
/**
 * Gagnaveita Fiskistofu
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: olafur.palmi.gudnason@fiskistofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AflamarkSkipsBreytingar,
    AflamarkSkipsBreytingarFromJSON,
    AflamarkSkipsBreytingarToJSON,
    AflamarkSkipsBreyttDTO,
    AflamarkSkipsBreyttDTOFromJSON,
    AflamarkSkipsBreyttDTOToJSON,
    AflamarkSkipsKvotaParams,
    AflamarkSkipsKvotaParamsFromJSON,
    AflamarkSkipsKvotaParamsToJSON,
    AflamarkSkipsKvotaParamsDTO,
    AflamarkSkipsKvotaParamsDTOFromJSON,
    AflamarkSkipsKvotaParamsDTOToJSON,
    AflamarkSkipsUpphafDTO,
    AflamarkSkipsUpphafDTOFromJSON,
    AflamarkSkipsUpphafDTOToJSON,
    AflamarkSkipsUpphafDeilistofnDTO,
    AflamarkSkipsUpphafDeilistofnDTOFromJSON,
    AflamarkSkipsUpphafDeilistofnDTOToJSON,
    AflamarkTegundirByTimabilDTO,
    AflamarkTegundirByTimabilDTOFromJSON,
    AflamarkTegundirByTimabilDTOToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

export interface V1StadaskipsKvotategundirAlmanaksarArGetRequest {
    ar: string;
}

export interface V1StadaskipsKvotategundirFiskveidiarFiskveidiarGetRequest {
    fiskveidiar: string;
}

export interface V1StadaskipsSkipnumerAlmanaksarArDeilistofnarBreyttPostRequest {
    skipnumer: number;
    ar: string;
    aflamarkSkipsBreytingar: AflamarkSkipsBreytingar;
}

export interface V1StadaskipsSkipnumerAlmanaksarArDeilistofnarGetRequest {
    skipnumer: number;
    ar: string;
}

export interface V1StadaskipsSkipnumerFiskveidiarFiskveidiarBreyttPostRequest {
    skipnumer: number;
    fiskveidiar: string;
    aflamarkSkipsBreytingar: AflamarkSkipsBreytingar;
}

export interface V1StadaskipsSkipnumerFiskveidiarFiskveidiarGetRequest {
    skipnumer: number;
    fiskveidiar: string;
}

export interface V1StadaskipsSkipnumerFiskveidiarFiskveidiarKvotiBreyttPostRequest {
    skipnumer: number;
    fiskveidiar: string;
    aflamarkSkipsKvotaParams: AflamarkSkipsKvotaParams;
}

/**
 * 
 */
export class StadaSkipsApi extends runtime.BaseAPI {

    /**
     * Sækir gögn um kvótategundir sem falla undir reikning samkvæmt almanaksári.
     */
    async v1StadaskipsKvotategundirAlmanaksarArGetRaw(requestParameters: V1StadaskipsKvotategundirAlmanaksarArGetRequest): Promise<runtime.ApiResponse<Array<AflamarkTegundirByTimabilDTO>>> {
        if (requestParameters.ar === null || requestParameters.ar === undefined) {
            throw new runtime.RequiredError('ar','Required parameter requestParameters.ar was null or undefined when calling v1StadaskipsKvotategundirAlmanaksarArGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/stadaskips/kvotategundir/almanaksar/{ar}`.replace(`{${"ar"}}`, encodeURIComponent(String(requestParameters.ar))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(AflamarkTegundirByTimabilDTOFromJSON));
    }

    /**
     * Sækir gögn um kvótategundir sem falla undir reikning samkvæmt almanaksári.
     */
    async v1StadaskipsKvotategundirAlmanaksarArGet(requestParameters: V1StadaskipsKvotategundirAlmanaksarArGetRequest): Promise<Array<AflamarkTegundirByTimabilDTO>> {
        const response = await this.v1StadaskipsKvotategundirAlmanaksarArGetRaw(requestParameters);
        return await response.value();
    }

    /**
     * Sækir gögn um kvótategundir sem falla undir reikning samkvæmt fiskveiðiári.
     */
    async v1StadaskipsKvotategundirFiskveidiarFiskveidiarGetRaw(requestParameters: V1StadaskipsKvotategundirFiskveidiarFiskveidiarGetRequest): Promise<runtime.ApiResponse<Array<AflamarkTegundirByTimabilDTO>>> {
        if (requestParameters.fiskveidiar === null || requestParameters.fiskveidiar === undefined) {
            throw new runtime.RequiredError('fiskveidiar','Required parameter requestParameters.fiskveidiar was null or undefined when calling v1StadaskipsKvotategundirFiskveidiarFiskveidiarGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/stadaskips/kvotategundir/fiskveidiar/{fiskveidiar}`.replace(`{${"fiskveidiar"}}`, encodeURIComponent(String(requestParameters.fiskveidiar))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(AflamarkTegundirByTimabilDTOFromJSON));
    }

    /**
     * Sækir gögn um kvótategundir sem falla undir reikning samkvæmt fiskveiðiári.
     */
    async v1StadaskipsKvotategundirFiskveidiarFiskveidiarGet(requestParameters: V1StadaskipsKvotategundirFiskveidiarFiskveidiarGetRequest): Promise<Array<AflamarkTegundirByTimabilDTO>> {
        const response = await this.v1StadaskipsKvotategundirFiskveidiarFiskveidiarGetRaw(requestParameters);
        return await response.value();
    }

    /**
     * Skilar breyttum gögnum um deilistofna skips og ýmsum tilfærslum út frá breytingum, skipaskrárnúmeri og ártali.
     */
    async v1StadaskipsSkipnumerAlmanaksarArDeilistofnarBreyttPostRaw(requestParameters: V1StadaskipsSkipnumerAlmanaksarArDeilistofnarBreyttPostRequest): Promise<runtime.ApiResponse<AflamarkSkipsBreyttDTO>> {
        if (requestParameters.skipnumer === null || requestParameters.skipnumer === undefined) {
            throw new runtime.RequiredError('skipnumer','Required parameter requestParameters.skipnumer was null or undefined when calling v1StadaskipsSkipnumerAlmanaksarArDeilistofnarBreyttPost.');
        }

        if (requestParameters.ar === null || requestParameters.ar === undefined) {
            throw new runtime.RequiredError('ar','Required parameter requestParameters.ar was null or undefined when calling v1StadaskipsSkipnumerAlmanaksarArDeilistofnarBreyttPost.');
        }

        if (requestParameters.aflamarkSkipsBreytingar === null || requestParameters.aflamarkSkipsBreytingar === undefined) {
            throw new runtime.RequiredError('aflamarkSkipsBreytingar','Required parameter requestParameters.aflamarkSkipsBreytingar was null or undefined when calling v1StadaskipsSkipnumerAlmanaksarArDeilistofnarBreyttPost.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/stadaskips/{skipnumer}/almanaksar/{ar}/deilistofnar/breytt`.replace(`{${"skipnumer"}}`, encodeURIComponent(String(requestParameters.skipnumer))).replace(`{${"ar"}}`, encodeURIComponent(String(requestParameters.ar))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AflamarkSkipsBreytingarToJSON(requestParameters.aflamarkSkipsBreytingar),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AflamarkSkipsBreyttDTOFromJSON(jsonValue));
    }

    /**
     * Skilar breyttum gögnum um deilistofna skips og ýmsum tilfærslum út frá breytingum, skipaskrárnúmeri og ártali.
     */
    async v1StadaskipsSkipnumerAlmanaksarArDeilistofnarBreyttPost(requestParameters: V1StadaskipsSkipnumerAlmanaksarArDeilistofnarBreyttPostRequest): Promise<AflamarkSkipsBreyttDTO> {
        const response = await this.v1StadaskipsSkipnumerAlmanaksarArDeilistofnarBreyttPostRaw(requestParameters);
        return await response.value();
    }

    /**
     * Sækir gögn um deilistofna skips og ýmsum tilfærslum út frá skipaskrárnúmeri og ártali.
     */
    async v1StadaskipsSkipnumerAlmanaksarArDeilistofnarGetRaw(requestParameters: V1StadaskipsSkipnumerAlmanaksarArDeilistofnarGetRequest): Promise<runtime.ApiResponse<AflamarkSkipsUpphafDeilistofnDTO>> {
        if (requestParameters.skipnumer === null || requestParameters.skipnumer === undefined) {
            throw new runtime.RequiredError('skipnumer','Required parameter requestParameters.skipnumer was null or undefined when calling v1StadaskipsSkipnumerAlmanaksarArDeilistofnarGet.');
        }

        if (requestParameters.ar === null || requestParameters.ar === undefined) {
            throw new runtime.RequiredError('ar','Required parameter requestParameters.ar was null or undefined when calling v1StadaskipsSkipnumerAlmanaksarArDeilistofnarGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/stadaskips/{skipnumer}/almanaksar/{ar}/deilistofnar`.replace(`{${"skipnumer"}}`, encodeURIComponent(String(requestParameters.skipnumer))).replace(`{${"ar"}}`, encodeURIComponent(String(requestParameters.ar))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AflamarkSkipsUpphafDeilistofnDTOFromJSON(jsonValue));
    }

    /**
     * Sækir gögn um deilistofna skips og ýmsum tilfærslum út frá skipaskrárnúmeri og ártali.
     */
    async v1StadaskipsSkipnumerAlmanaksarArDeilistofnarGet(requestParameters: V1StadaskipsSkipnumerAlmanaksarArDeilistofnarGetRequest): Promise<AflamarkSkipsUpphafDeilistofnDTO> {
        const response = await this.v1StadaskipsSkipnumerAlmanaksarArDeilistofnarGetRaw(requestParameters);
        return await response.value();
    }

    /**
     * Skilar breyttum gögnum um aflamark skips og ýmsum tilfærslum út frá breytingum, skipaskrárnúmeri og tímabili.
     */
    async v1StadaskipsSkipnumerFiskveidiarFiskveidiarBreyttPostRaw(requestParameters: V1StadaskipsSkipnumerFiskveidiarFiskveidiarBreyttPostRequest): Promise<runtime.ApiResponse<AflamarkSkipsBreyttDTO>> {
        if (requestParameters.skipnumer === null || requestParameters.skipnumer === undefined) {
            throw new runtime.RequiredError('skipnumer','Required parameter requestParameters.skipnumer was null or undefined when calling v1StadaskipsSkipnumerFiskveidiarFiskveidiarBreyttPost.');
        }

        if (requestParameters.fiskveidiar === null || requestParameters.fiskveidiar === undefined) {
            throw new runtime.RequiredError('fiskveidiar','Required parameter requestParameters.fiskveidiar was null or undefined when calling v1StadaskipsSkipnumerFiskveidiarFiskveidiarBreyttPost.');
        }

        if (requestParameters.aflamarkSkipsBreytingar === null || requestParameters.aflamarkSkipsBreytingar === undefined) {
            throw new runtime.RequiredError('aflamarkSkipsBreytingar','Required parameter requestParameters.aflamarkSkipsBreytingar was null or undefined when calling v1StadaskipsSkipnumerFiskveidiarFiskveidiarBreyttPost.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/stadaskips/{skipnumer}/fiskveidiar/{fiskveidiar}/breytt`.replace(`{${"skipnumer"}}`, encodeURIComponent(String(requestParameters.skipnumer))).replace(`{${"fiskveidiar"}}`, encodeURIComponent(String(requestParameters.fiskveidiar))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AflamarkSkipsBreytingarToJSON(requestParameters.aflamarkSkipsBreytingar),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AflamarkSkipsBreyttDTOFromJSON(jsonValue));
    }

    /**
     * Skilar breyttum gögnum um aflamark skips og ýmsum tilfærslum út frá breytingum, skipaskrárnúmeri og tímabili.
     */
    async v1StadaskipsSkipnumerFiskveidiarFiskveidiarBreyttPost(requestParameters: V1StadaskipsSkipnumerFiskveidiarFiskveidiarBreyttPostRequest): Promise<AflamarkSkipsBreyttDTO> {
        const response = await this.v1StadaskipsSkipnumerFiskveidiarFiskveidiarBreyttPostRaw(requestParameters);
        return await response.value();
    }

    /**
     * Sækir gögn um aflamark skips og ýmsar tilfærslur afla út frá skipaskrárnúmeri og tímabili.
     */
    async v1StadaskipsSkipnumerFiskveidiarFiskveidiarGetRaw(requestParameters: V1StadaskipsSkipnumerFiskveidiarFiskveidiarGetRequest): Promise<runtime.ApiResponse<AflamarkSkipsUpphafDTO>> {
        if (requestParameters.skipnumer === null || requestParameters.skipnumer === undefined) {
            throw new runtime.RequiredError('skipnumer','Required parameter requestParameters.skipnumer was null or undefined when calling v1StadaskipsSkipnumerFiskveidiarFiskveidiarGet.');
        }

        if (requestParameters.fiskveidiar === null || requestParameters.fiskveidiar === undefined) {
            throw new runtime.RequiredError('fiskveidiar','Required parameter requestParameters.fiskveidiar was null or undefined when calling v1StadaskipsSkipnumerFiskveidiarFiskveidiarGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/stadaskips/{skipnumer}/fiskveidiar/{fiskveidiar}`.replace(`{${"skipnumer"}}`, encodeURIComponent(String(requestParameters.skipnumer))).replace(`{${"fiskveidiar"}}`, encodeURIComponent(String(requestParameters.fiskveidiar))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AflamarkSkipsUpphafDTOFromJSON(jsonValue));
    }

    /**
     * Sækir gögn um aflamark skips og ýmsar tilfærslur afla út frá skipaskrárnúmeri og tímabili.
     */
    async v1StadaskipsSkipnumerFiskveidiarFiskveidiarGet(requestParameters: V1StadaskipsSkipnumerFiskveidiarFiskveidiarGetRequest): Promise<AflamarkSkipsUpphafDTO> {
        const response = await this.v1StadaskipsSkipnumerFiskveidiarFiskveidiarGetRaw(requestParameters);
        return await response.value();
    }

    /**
     * Skilar breyttum gögnum um kvótareiknisdálka eftir því hverju er óskað eftir að breyta.
     */
    async v1StadaskipsSkipnumerFiskveidiarFiskveidiarKvotiBreyttPostRaw(requestParameters: V1StadaskipsSkipnumerFiskveidiarFiskveidiarKvotiBreyttPostRequest): Promise<runtime.ApiResponse<AflamarkSkipsKvotaParamsDTO>> {
        if (requestParameters.skipnumer === null || requestParameters.skipnumer === undefined) {
            throw new runtime.RequiredError('skipnumer','Required parameter requestParameters.skipnumer was null or undefined when calling v1StadaskipsSkipnumerFiskveidiarFiskveidiarKvotiBreyttPost.');
        }

        if (requestParameters.fiskveidiar === null || requestParameters.fiskveidiar === undefined) {
            throw new runtime.RequiredError('fiskveidiar','Required parameter requestParameters.fiskveidiar was null or undefined when calling v1StadaskipsSkipnumerFiskveidiarFiskveidiarKvotiBreyttPost.');
        }

        if (requestParameters.aflamarkSkipsKvotaParams === null || requestParameters.aflamarkSkipsKvotaParams === undefined) {
            throw new runtime.RequiredError('aflamarkSkipsKvotaParams','Required parameter requestParameters.aflamarkSkipsKvotaParams was null or undefined when calling v1StadaskipsSkipnumerFiskveidiarFiskveidiarKvotiBreyttPost.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/stadaskips/{skipnumer}/fiskveidiar/{fiskveidiar}/kvoti/breytt`.replace(`{${"skipnumer"}}`, encodeURIComponent(String(requestParameters.skipnumer))).replace(`{${"fiskveidiar"}}`, encodeURIComponent(String(requestParameters.fiskveidiar))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AflamarkSkipsKvotaParamsToJSON(requestParameters.aflamarkSkipsKvotaParams),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AflamarkSkipsKvotaParamsDTOFromJSON(jsonValue));
    }

    /**
     * Skilar breyttum gögnum um kvótareiknisdálka eftir því hverju er óskað eftir að breyta.
     */
    async v1StadaskipsSkipnumerFiskveidiarFiskveidiarKvotiBreyttPost(requestParameters: V1StadaskipsSkipnumerFiskveidiarFiskveidiarKvotiBreyttPostRequest): Promise<AflamarkSkipsKvotaParamsDTO> {
        const response = await this.v1StadaskipsSkipnumerFiskveidiarFiskveidiarKvotiBreyttPostRaw(requestParameters);
        return await response.value();
    }

}
