/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HUXELSAPICommonPatentModelsAgent,
    HUXELSAPICommonPatentModelsAgentFromJSON,
    HUXELSAPICommonPatentModelsAgentFromJSONTyped,
    HUXELSAPICommonPatentModelsAgentToJSON,
    HUXELSAPICommonPatentModelsInventor,
    HUXELSAPICommonPatentModelsInventorFromJSON,
    HUXELSAPICommonPatentModelsInventorFromJSONTyped,
    HUXELSAPICommonPatentModelsInventorToJSON,
    HUXELSAPICommonPatentModelsOwner,
    HUXELSAPICommonPatentModelsOwnerFromJSON,
    HUXELSAPICommonPatentModelsOwnerFromJSONTyped,
    HUXELSAPICommonPatentModelsOwnerToJSON,
    HUXELSAPICommonPatentModelsPatentApplicationAttachment,
    HUXELSAPICommonPatentModelsPatentApplicationAttachmentFromJSON,
    HUXELSAPICommonPatentModelsPatentApplicationAttachmentFromJSONTyped,
    HUXELSAPICommonPatentModelsPatentApplicationAttachmentToJSON,
    HUXELSAPICommonPatentModelsPriority,
    HUXELSAPICommonPatentModelsPriorityFromJSON,
    HUXELSAPICommonPatentModelsPriorityFromJSONTyped,
    HUXELSAPICommonPatentModelsPriorityToJSON,
} from './';

/**
 * 
 * @export
 * @interface HUXELSAPICommonPatentModelsPatentApplication
 */
export interface HUXELSAPICommonPatentModelsPatentApplication {
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    patentName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    applicationNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    patentNameInOrgLanguage?: string | null;
    /**
     * 
     * @type {number}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    numberOfClaims?: number;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    referenceNumber?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    applicationInEOLF?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    pctDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    pctApplicationNumber?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    applicantHasGainedRights?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    applicationBy88gr?: boolean;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    orginalApplicationNumber?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    applicationAppliesToBiologicalElement?: boolean;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsOwner>}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    owners?: Array<HUXELSAPICommonPatentModelsOwner> | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsInventor>}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    inventors?: Array<HUXELSAPICommonPatentModelsInventor> | null;
    /**
     * 
     * @type {HUXELSAPICommonPatentModelsAgent}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    agent?: HUXELSAPICommonPatentModelsAgent;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsPriority>}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    priorities?: Array<HUXELSAPICommonPatentModelsPriority> | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsPatentApplicationAttachment>}
     * @memberof HUXELSAPICommonPatentModelsPatentApplication
     */
    attachments?: Array<HUXELSAPICommonPatentModelsPatentApplicationAttachment> | null;
}

export function HUXELSAPICommonPatentModelsPatentApplicationFromJSON(json: any): HUXELSAPICommonPatentModelsPatentApplication {
    return HUXELSAPICommonPatentModelsPatentApplicationFromJSONTyped(json, false);
}

export function HUXELSAPICommonPatentModelsPatentApplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): HUXELSAPICommonPatentModelsPatentApplication {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'patentName': !exists(json, 'patentName') ? undefined : json['patentName'],
        'applicationNumber': !exists(json, 'applicationNumber') ? undefined : json['applicationNumber'],
        'patentNameInOrgLanguage': !exists(json, 'patentNameInOrgLanguage') ? undefined : json['patentNameInOrgLanguage'],
        'numberOfClaims': !exists(json, 'numberOfClaims') ? undefined : json['numberOfClaims'],
        'referenceNumber': !exists(json, 'referenceNumber') ? undefined : json['referenceNumber'],
        'applicationInEOLF': !exists(json, 'applicationInEOLF') ? undefined : json['applicationInEOLF'],
        'pctDate': !exists(json, 'pctDate') ? undefined : (json['pctDate'] === null ? null : new Date(json['pctDate'])),
        'pctApplicationNumber': !exists(json, 'pctApplicationNumber') ? undefined : json['pctApplicationNumber'],
        'applicantHasGainedRights': !exists(json, 'applicantHasGainedRights') ? undefined : json['applicantHasGainedRights'],
        'applicationBy88gr': !exists(json, 'applicationBy88gr') ? undefined : json['applicationBy88gr'],
        'orginalApplicationNumber': !exists(json, 'orginalApplicationNumber') ? undefined : json['orginalApplicationNumber'],
        'applicationAppliesToBiologicalElement': !exists(json, 'applicationAppliesToBiologicalElement') ? undefined : json['applicationAppliesToBiologicalElement'],
        'owners': !exists(json, 'owners') ? undefined : (json['owners'] === null ? null : (json['owners'] as Array<any>).map(HUXELSAPICommonPatentModelsOwnerFromJSON)),
        'inventors': !exists(json, 'inventors') ? undefined : (json['inventors'] === null ? null : (json['inventors'] as Array<any>).map(HUXELSAPICommonPatentModelsInventorFromJSON)),
        'agent': !exists(json, 'agent') ? undefined : HUXELSAPICommonPatentModelsAgentFromJSON(json['agent']),
        'priorities': !exists(json, 'priorities') ? undefined : (json['priorities'] === null ? null : (json['priorities'] as Array<any>).map(HUXELSAPICommonPatentModelsPriorityFromJSON)),
        'attachments': !exists(json, 'attachments') ? undefined : (json['attachments'] === null ? null : (json['attachments'] as Array<any>).map(HUXELSAPICommonPatentModelsPatentApplicationAttachmentFromJSON)),
    };
}

export function HUXELSAPICommonPatentModelsPatentApplicationToJSON(value?: HUXELSAPICommonPatentModelsPatentApplication | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'patentName': value.patentName,
        'applicationNumber': value.applicationNumber,
        'patentNameInOrgLanguage': value.patentNameInOrgLanguage,
        'numberOfClaims': value.numberOfClaims,
        'referenceNumber': value.referenceNumber,
        'applicationInEOLF': value.applicationInEOLF,
        'pctDate': value.pctDate === undefined ? undefined : (value.pctDate === null ? null : value.pctDate.toISOString()),
        'pctApplicationNumber': value.pctApplicationNumber,
        'applicantHasGainedRights': value.applicantHasGainedRights,
        'applicationBy88gr': value.applicationBy88gr,
        'orginalApplicationNumber': value.orginalApplicationNumber,
        'applicationAppliesToBiologicalElement': value.applicationAppliesToBiologicalElement,
        'owners': value.owners === undefined ? undefined : (value.owners === null ? null : (value.owners as Array<any>).map(HUXELSAPICommonPatentModelsOwnerToJSON)),
        'inventors': value.inventors === undefined ? undefined : (value.inventors === null ? null : (value.inventors as Array<any>).map(HUXELSAPICommonPatentModelsInventorToJSON)),
        'agent': HUXELSAPICommonPatentModelsAgentToJSON(value.agent),
        'priorities': value.priorities === undefined ? undefined : (value.priorities === null ? null : (value.priorities as Array<any>).map(HUXELSAPICommonPatentModelsPriorityToJSON)),
        'attachments': value.attachments === undefined ? undefined : (value.attachments === null ? null : (value.attachments as Array<any>).map(HUXELSAPICommonPatentModelsPatentApplicationAttachmentToJSON)),
    };
}


