/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HUXELSAPIv2ControllersCategory
 */
export interface HUXELSAPIv2ControllersCategory {
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPIv2ControllersCategory
     */
    number?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPIv2ControllersCategory
     */
    description?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPIv2ControllersCategory
     */
    dropCategory?: boolean;
}

export function HUXELSAPIv2ControllersCategoryFromJSON(json: any): HUXELSAPIv2ControllersCategory {
    return HUXELSAPIv2ControllersCategoryFromJSONTyped(json, false);
}

export function HUXELSAPIv2ControllersCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): HUXELSAPIv2ControllersCategory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'number': !exists(json, 'number') ? undefined : json['number'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'dropCategory': !exists(json, 'dropCategory') ? undefined : json['dropCategory'],
    };
}

export function HUXELSAPIv2ControllersCategoryToJSON(value?: HUXELSAPIv2ControllersCategory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'number': value.number,
        'description': value.description,
        'dropCategory': value.dropCategory,
    };
}


