/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HUXELSAPIGazetteCoreGazetteModelsChangeLog
 */
export interface HUXELSAPIGazetteCoreGazetteModelsChangeLog {
    /**
     * 
     * @type {number}
     * @memberof HUXELSAPIGazetteCoreGazetteModelsChangeLog
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPIGazetteCoreGazetteModelsChangeLog
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPIGazetteCoreGazetteModelsChangeLog
     */
    type?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPIGazetteCoreGazetteModelsChangeLog
     */
    changeDate?: Date | null;
}

export function HUXELSAPIGazetteCoreGazetteModelsChangeLogFromJSON(json: any): HUXELSAPIGazetteCoreGazetteModelsChangeLog {
    return HUXELSAPIGazetteCoreGazetteModelsChangeLogFromJSONTyped(json, false);
}

export function HUXELSAPIGazetteCoreGazetteModelsChangeLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): HUXELSAPIGazetteCoreGazetteModelsChangeLog {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'changeDate': !exists(json, 'changeDate') ? undefined : (json['changeDate'] === null ? null : new Date(json['changeDate'])),
    };
}

export function HUXELSAPIGazetteCoreGazetteModelsChangeLogToJSON(value?: HUXELSAPIGazetteCoreGazetteModelsChangeLog | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'description': value.description,
        'type': value.type,
        'changeDate': value.changeDate === undefined ? undefined : (value.changeDate === null ? null : value.changeDate.toISOString()),
    };
}


