/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InternalClientTermInfo
 */
export interface InternalClientTermInfo {
    /**
     * 
     * @type {string}
     * @memberof InternalClientTermInfo
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InternalClientTermInfo
     */
    name?: string | null;
    /**
     * 
     * @type {InternalClientTermInfo}
     * @memberof InternalClientTermInfo
     */
    parent?: InternalClientTermInfo;
    /**
     * 
     * @type {Array<InternalClientTermInfo>}
     * @memberof InternalClientTermInfo
     */
    children?: Array<InternalClientTermInfo> | null;
    /**
     * 
     * @type {string}
     * @memberof InternalClientTermInfo
     */
    url?: string | null;
}

export function InternalClientTermInfoFromJSON(json: any): InternalClientTermInfo {
    return InternalClientTermInfoFromJSONTyped(json, false);
}

export function InternalClientTermInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalClientTermInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'parent': !exists(json, 'parent') ? undefined : InternalClientTermInfoFromJSON(json['parent']),
        'children': !exists(json, 'children') ? undefined : (json['children'] === null ? null : (json['children'] as Array<any>).map(InternalClientTermInfoFromJSON)),
        'url': !exists(json, 'url') ? undefined : json['url'],
    };
}

export function InternalClientTermInfoToJSON(value?: InternalClientTermInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'parent': InternalClientTermInfoToJSON(value.parent),
        'children': value.children === undefined ? undefined : (value.children === null ? null : (value.children as Array<any>).map(InternalClientTermInfoToJSON)),
        'url': value.url,
    };
}


