/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SharePointAPITrademarkTypes
 */
export interface SharePointAPITrademarkTypes {
    /**
     * 
     * @type {string}
     * @memberof SharePointAPITrademarkTypes
     */
    title?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof SharePointAPITrademarkTypes
     */
    text?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SharePointAPITrademarkTypes
     */
    image?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SharePointAPITrademarkTypes
     */
    movement?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SharePointAPITrademarkTypes
     */
    sound?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SharePointAPITrademarkTypes
     */
    descriptionRequired?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof SharePointAPITrademarkTypes
     */
    format?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SharePointAPITrademarkTypes
     */
    webAPIValue?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SharePointAPITrademarkTypes
     */
    termStoreValue?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SharePointAPITrademarkTypes
     */
    tmViewValue?: string | null;
}

export function SharePointAPITrademarkTypesFromJSON(json: any): SharePointAPITrademarkTypes {
    return SharePointAPITrademarkTypesFromJSONTyped(json, false);
}

export function SharePointAPITrademarkTypesFromJSONTyped(json: any, ignoreDiscriminator: boolean): SharePointAPITrademarkTypes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'movement': !exists(json, 'movement') ? undefined : json['movement'],
        'sound': !exists(json, 'sound') ? undefined : json['sound'],
        'descriptionRequired': !exists(json, 'descriptionRequired') ? undefined : json['descriptionRequired'],
        'format': !exists(json, 'format') ? undefined : json['format'],
        'webAPIValue': !exists(json, 'webAPIValue') ? undefined : json['webAPIValue'],
        'termStoreValue': !exists(json, 'termStoreValue') ? undefined : json['termStoreValue'],
        'tmViewValue': !exists(json, 'tmViewValue') ? undefined : json['tmViewValue'],
    };
}

export function SharePointAPITrademarkTypesToJSON(value?: SharePointAPITrademarkTypes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'text': value.text,
        'image': value.image,
        'movement': value.movement,
        'sound': value.sound,
        'descriptionRequired': value.descriptionRequired,
        'format': value.format,
        'webAPIValue': value.webAPIValue,
        'termStoreValue': value.termStoreValue,
        'tmViewValue': value.tmViewValue,
    };
}


