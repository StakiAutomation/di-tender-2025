/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HUXELSAPICommonTMApplicationModelsGoodsServicesDescription,
    HUXELSAPICommonTMApplicationModelsGoodsServicesDescriptionFromJSON,
    HUXELSAPICommonTMApplicationModelsGoodsServicesDescriptionFromJSONTyped,
    HUXELSAPICommonTMApplicationModelsGoodsServicesDescriptionToJSON,
    HUXELSAPICommonTrademarkModelsAgents,
    HUXELSAPICommonTrademarkModelsAgentsFromJSON,
    HUXELSAPICommonTrademarkModelsAgentsFromJSONTyped,
    HUXELSAPICommonTrademarkModelsAgentsToJSON,
    HUXELSAPICommonTrademarkModelsCategories,
    HUXELSAPICommonTrademarkModelsCategoriesFromJSON,
    HUXELSAPICommonTrademarkModelsCategoriesFromJSONTyped,
    HUXELSAPICommonTrademarkModelsCategoriesToJSON,
    HUXELSAPICommonTrademarkModelsDiary,
    HUXELSAPICommonTrademarkModelsDiaryFromJSON,
    HUXELSAPICommonTrademarkModelsDiaryFromJSONTyped,
    HUXELSAPICommonTrademarkModelsDiaryToJSON,
    HUXELSAPICommonTrademarkModelsMedia,
    HUXELSAPICommonTrademarkModelsMediaFromJSON,
    HUXELSAPICommonTrademarkModelsMediaFromJSONTyped,
    HUXELSAPICommonTrademarkModelsMediaToJSON,
    HUXELSAPICommonTrademarkModelsObservation,
    HUXELSAPICommonTrademarkModelsObservationFromJSON,
    HUXELSAPICommonTrademarkModelsObservationFromJSONTyped,
    HUXELSAPICommonTrademarkModelsObservationToJSON,
    HUXELSAPICommonTrademarkModelsOwners,
    HUXELSAPICommonTrademarkModelsOwnersFromJSON,
    HUXELSAPICommonTrademarkModelsOwnersFromJSONTyped,
    HUXELSAPICommonTrademarkModelsOwnersToJSON,
    HUXELSAPICommonTrademarkModelsPriority,
    HUXELSAPICommonTrademarkModelsPriorityFromJSON,
    HUXELSAPICommonTrademarkModelsPriorityFromJSONTyped,
    HUXELSAPICommonTrademarkModelsPriorityToJSON,
} from './';

/**
 * 
 * @export
 * @interface HUXELSAPICommonTrademarkModelsTrademarks
 */
export interface HUXELSAPICommonTrademarkModelsTrademarks {
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    text?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    applicationNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    registrationNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    status?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    detailStatus?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    statusEN?: string | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonTrademarkModelsOwners>}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    markOwners?: Array<HUXELSAPICommonTrademarkModelsOwners> | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonTrademarkModelsCategories>}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    markCategories?: Array<HUXELSAPICommonTrademarkModelsCategories> | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonTrademarkModelsDiary>}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    markDiary?: Array<HUXELSAPICommonTrademarkModelsDiary> | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonTrademarkModelsObservation>}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    markObservations?: Array<HUXELSAPICommonTrademarkModelsObservation> | null;
    /**
     * 
     * @type {HUXELSAPICommonTrademarkModelsAgents}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    markAgent?: HUXELSAPICommonTrademarkModelsAgents;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    imagePath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    orginalImagePath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    applicationDate?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    dateExpires?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    dateRegistration?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    dateInternationalRegistration?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    mpNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    vmid?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    dateModified?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    dateEftiraTilnefningar?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    isFelagamerki?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    isColorMark?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    skradVegnaMarkadsfestu?: boolean;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    useLimitedTo?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    dateUnRegistered?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    datePublished?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    dateRenewed?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    imageCategories?: string | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonTrademarkModelsPriority>}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    priority?: Array<HUXELSAPICommonTrademarkModelsPriority> | null;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    is3DMark?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    deleted?: boolean;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    description?: string | null;
    /**
     * 
     * @type {HUXELSAPICommonTrademarkModelsMedia}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    media?: HUXELSAPICommonTrademarkModelsMedia;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    certificationMark?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    canRenew?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    canRenewWithResumption?: boolean;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    inspectorName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    inspectorSSN?: string | null;
    /**
     * 
     * @type {HUXELSAPICommonTMApplicationModelsGoodsServicesDescription}
     * @memberof HUXELSAPICommonTrademarkModelsTrademarks
     */
    goodServicesDescription?: HUXELSAPICommonTMApplicationModelsGoodsServicesDescription;
}

export function HUXELSAPICommonTrademarkModelsTrademarksFromJSON(json: any): HUXELSAPICommonTrademarkModelsTrademarks {
    return HUXELSAPICommonTrademarkModelsTrademarksFromJSONTyped(json, false);
}

export function HUXELSAPICommonTrademarkModelsTrademarksFromJSONTyped(json: any, ignoreDiscriminator: boolean): HUXELSAPICommonTrademarkModelsTrademarks {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'text': !exists(json, 'text') ? undefined : json['text'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'applicationNumber': !exists(json, 'applicationNumber') ? undefined : json['applicationNumber'],
        'registrationNumber': !exists(json, 'registrationNumber') ? undefined : json['registrationNumber'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'detailStatus': !exists(json, 'detailStatus') ? undefined : json['detailStatus'],
        'statusEN': !exists(json, 'statusEN') ? undefined : json['statusEN'],
        'markOwners': !exists(json, 'markOwners') ? undefined : (json['markOwners'] === null ? null : (json['markOwners'] as Array<any>).map(HUXELSAPICommonTrademarkModelsOwnersFromJSON)),
        'markCategories': !exists(json, 'markCategories') ? undefined : (json['markCategories'] === null ? null : (json['markCategories'] as Array<any>).map(HUXELSAPICommonTrademarkModelsCategoriesFromJSON)),
        'markDiary': !exists(json, 'markDiary') ? undefined : (json['markDiary'] === null ? null : (json['markDiary'] as Array<any>).map(HUXELSAPICommonTrademarkModelsDiaryFromJSON)),
        'markObservations': !exists(json, 'markObservations') ? undefined : (json['markObservations'] === null ? null : (json['markObservations'] as Array<any>).map(HUXELSAPICommonTrademarkModelsObservationFromJSON)),
        'markAgent': !exists(json, 'markAgent') ? undefined : HUXELSAPICommonTrademarkModelsAgentsFromJSON(json['markAgent']),
        'imagePath': !exists(json, 'imagePath') ? undefined : json['imagePath'],
        'orginalImagePath': !exists(json, 'orginalImagePath') ? undefined : json['orginalImagePath'],
        'applicationDate': !exists(json, 'applicationDate') ? undefined : json['applicationDate'],
        'dateExpires': !exists(json, 'dateExpires') ? undefined : json['dateExpires'],
        'dateRegistration': !exists(json, 'dateRegistration') ? undefined : json['dateRegistration'],
        'dateInternationalRegistration': !exists(json, 'dateInternationalRegistration') ? undefined : json['dateInternationalRegistration'],
        'mpNumber': !exists(json, 'mpNumber') ? undefined : json['mpNumber'],
        'vmid': !exists(json, 'vmid') ? undefined : json['vmid'],
        'dateModified': !exists(json, 'dateModified') ? undefined : json['dateModified'],
        'dateEftiraTilnefningar': !exists(json, 'dateEftiraTilnefningar') ? undefined : json['dateEftiraTilnefningar'],
        'isFelagamerki': !exists(json, 'isFelagamerki') ? undefined : json['isFelagamerki'],
        'isColorMark': !exists(json, 'isColorMark') ? undefined : json['isColorMark'],
        'skradVegnaMarkadsfestu': !exists(json, 'skradVegnaMarkadsfestu') ? undefined : json['skradVegnaMarkadsfestu'],
        'useLimitedTo': !exists(json, 'useLimitedTo') ? undefined : json['useLimitedTo'],
        'dateUnRegistered': !exists(json, 'dateUnRegistered') ? undefined : json['dateUnRegistered'],
        'datePublished': !exists(json, 'datePublished') ? undefined : json['datePublished'],
        'dateRenewed': !exists(json, 'dateRenewed') ? undefined : json['dateRenewed'],
        'imageCategories': !exists(json, 'imageCategories') ? undefined : json['imageCategories'],
        'priority': !exists(json, 'priority') ? undefined : (json['priority'] === null ? null : (json['priority'] as Array<any>).map(HUXELSAPICommonTrademarkModelsPriorityFromJSON)),
        'is3DMark': !exists(json, 'is3DMark') ? undefined : json['is3DMark'],
        'deleted': !exists(json, 'deleted') ? undefined : json['deleted'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'media': !exists(json, 'media') ? undefined : HUXELSAPICommonTrademarkModelsMediaFromJSON(json['media']),
        'certificationMark': !exists(json, 'certificationMark') ? undefined : json['certificationMark'],
        'canRenew': !exists(json, 'canRenew') ? undefined : json['canRenew'],
        'canRenewWithResumption': !exists(json, 'canRenewWithResumption') ? undefined : json['canRenewWithResumption'],
        'inspectorName': !exists(json, 'inspectorName') ? undefined : json['inspectorName'],
        'inspectorSSN': !exists(json, 'inspectorSSN') ? undefined : json['inspectorSSN'],
        'goodServicesDescription': !exists(json, 'goodServicesDescription') ? undefined : HUXELSAPICommonTMApplicationModelsGoodsServicesDescriptionFromJSON(json['goodServicesDescription']),
    };
}

export function HUXELSAPICommonTrademarkModelsTrademarksToJSON(value?: HUXELSAPICommonTrademarkModelsTrademarks | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'text': value.text,
        'type': value.type,
        'applicationNumber': value.applicationNumber,
        'registrationNumber': value.registrationNumber,
        'status': value.status,
        'detailStatus': value.detailStatus,
        'statusEN': value.statusEN,
        'markOwners': value.markOwners === undefined ? undefined : (value.markOwners === null ? null : (value.markOwners as Array<any>).map(HUXELSAPICommonTrademarkModelsOwnersToJSON)),
        'markCategories': value.markCategories === undefined ? undefined : (value.markCategories === null ? null : (value.markCategories as Array<any>).map(HUXELSAPICommonTrademarkModelsCategoriesToJSON)),
        'markDiary': value.markDiary === undefined ? undefined : (value.markDiary === null ? null : (value.markDiary as Array<any>).map(HUXELSAPICommonTrademarkModelsDiaryToJSON)),
        'markObservations': value.markObservations === undefined ? undefined : (value.markObservations === null ? null : (value.markObservations as Array<any>).map(HUXELSAPICommonTrademarkModelsObservationToJSON)),
        'markAgent': HUXELSAPICommonTrademarkModelsAgentsToJSON(value.markAgent),
        'imagePath': value.imagePath,
        'orginalImagePath': value.orginalImagePath,
        'applicationDate': value.applicationDate,
        'dateExpires': value.dateExpires,
        'dateRegistration': value.dateRegistration,
        'dateInternationalRegistration': value.dateInternationalRegistration,
        'mpNumber': value.mpNumber,
        'vmid': value.vmid,
        'dateModified': value.dateModified,
        'dateEftiraTilnefningar': value.dateEftiraTilnefningar,
        'isFelagamerki': value.isFelagamerki,
        'isColorMark': value.isColorMark,
        'skradVegnaMarkadsfestu': value.skradVegnaMarkadsfestu,
        'useLimitedTo': value.useLimitedTo,
        'dateUnRegistered': value.dateUnRegistered,
        'datePublished': value.datePublished,
        'dateRenewed': value.dateRenewed,
        'imageCategories': value.imageCategories,
        'priority': value.priority === undefined ? undefined : (value.priority === null ? null : (value.priority as Array<any>).map(HUXELSAPICommonTrademarkModelsPriorityToJSON)),
        'is3DMark': value.is3DMark,
        'deleted': value.deleted,
        'description': value.description,
        'media': HUXELSAPICommonTrademarkModelsMediaToJSON(value.media),
        'certificationMark': value.certificationMark,
        'canRenew': value.canRenew,
        'canRenewWithResumption': value.canRenewWithResumption,
        'inspectorName': value.inspectorName,
        'inspectorSSN': value.inspectorSSN,
        'goodServicesDescription': HUXELSAPICommonTMApplicationModelsGoodsServicesDescriptionToJSON(value.goodServicesDescription),
    };
}


