/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HUXELSAPICommonPatentModelsPatentIS
 */
export interface HUXELSAPICommonPatentModelsPatentIS {
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatentIS
     */
    applicationNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatentIS
     */
    registrationNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatentIS
     */
    patentName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatentIS
     */
    patentNameInOrgLanguage?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatentIS
     */
    applicationDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatentIS
     */
    statusText?: string | null;
}

export function HUXELSAPICommonPatentModelsPatentISFromJSON(json: any): HUXELSAPICommonPatentModelsPatentIS {
    return HUXELSAPICommonPatentModelsPatentISFromJSONTyped(json, false);
}

export function HUXELSAPICommonPatentModelsPatentISFromJSONTyped(json: any, ignoreDiscriminator: boolean): HUXELSAPICommonPatentModelsPatentIS {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'applicationNumber': !exists(json, 'applicationNumber') ? undefined : json['applicationNumber'],
        'registrationNumber': !exists(json, 'registrationNumber') ? undefined : json['registrationNumber'],
        'patentName': !exists(json, 'patentName') ? undefined : json['patentName'],
        'patentNameInOrgLanguage': !exists(json, 'patentNameInOrgLanguage') ? undefined : json['patentNameInOrgLanguage'],
        'applicationDate': !exists(json, 'applicationDate') ? undefined : (new Date(json['applicationDate'])),
        'statusText': !exists(json, 'statusText') ? undefined : json['statusText'],
    };
}

export function HUXELSAPICommonPatentModelsPatentISToJSON(value?: HUXELSAPICommonPatentModelsPatentIS | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'applicationNumber': value.applicationNumber,
        'registrationNumber': value.registrationNumber,
        'patentName': value.patentName,
        'patentNameInOrgLanguage': value.patentNameInOrgLanguage,
        'applicationDate': value.applicationDate === undefined ? undefined : (value.applicationDate.toISOString()),
        'statusText': value.statusText,
    };
}


