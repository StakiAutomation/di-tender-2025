/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HUXELSAPICommonPatentModelsAgent,
    HUXELSAPICommonPatentModelsAgentFromJSON,
    HUXELSAPICommonPatentModelsAgentFromJSONTyped,
    HUXELSAPICommonPatentModelsAgentToJSON,
    HUXELSAPICommonPatentModelsAnnualFees,
    HUXELSAPICommonPatentModelsAnnualFeesFromJSON,
    HUXELSAPICommonPatentModelsAnnualFeesFromJSONTyped,
    HUXELSAPICommonPatentModelsAnnualFeesToJSON,
    HUXELSAPICommonPatentModelsOwner,
    HUXELSAPICommonPatentModelsOwnerFromJSON,
    HUXELSAPICommonPatentModelsOwnerFromJSONTyped,
    HUXELSAPICommonPatentModelsOwnerToJSON,
} from './';

/**
 * 
 * @export
 * @interface HUXELSAPICommonPatentModelsSPC
 */
export interface HUXELSAPICommonPatentModelsSPC {
    /**
     * 
     * @type {number}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    spcNumber?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    applicationDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    product?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    medicineName?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    medicineForChildren?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    maxDuration?: Date;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    status?: string | null;
    /**
     * 
     * @type {HUXELSAPICommonPatentModelsAgent}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    spcAgent?: HUXELSAPICommonPatentModelsAgent;
    /**
     * 
     * @type {number}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    agent?: number;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    icelandicMarketingAuthorizationNumber?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    dateIcelandicMarketingAuthorization?: Date;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    foreignMarketingAuthorizationNumber?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    dateForeignMarketingAuthorization?: Date;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    grantPublishedInGazetteDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    publishedInGazetteDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    referenceNumber?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    lastModified?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    canRenew?: boolean;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    message?: string | null;
    /**
     * 
     * @type {HUXELSAPICommonPatentModelsAnnualFees}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    annualFee?: HUXELSAPICommonPatentModelsAnnualFees;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsAnnualFees>}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    annualFeeList?: Array<HUXELSAPICommonPatentModelsAnnualFees> | null;
    /**
     * 
     * @type {HUXELSAPICommonPatentModelsAnnualFees}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    lastAnnualFee?: HUXELSAPICommonPatentModelsAnnualFees;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    parentPatent?: string | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsOwner>}
     * @memberof HUXELSAPICommonPatentModelsSPC
     */
    owners?: Array<HUXELSAPICommonPatentModelsOwner> | null;
}

export function HUXELSAPICommonPatentModelsSPCFromJSON(json: any): HUXELSAPICommonPatentModelsSPC {
    return HUXELSAPICommonPatentModelsSPCFromJSONTyped(json, false);
}

export function HUXELSAPICommonPatentModelsSPCFromJSONTyped(json: any, ignoreDiscriminator: boolean): HUXELSAPICommonPatentModelsSPC {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'spcNumber': !exists(json, 'spcNumber') ? undefined : json['spcNumber'],
        'applicationDate': !exists(json, 'applicationDate') ? undefined : (new Date(json['applicationDate'])),
        'product': !exists(json, 'product') ? undefined : json['product'],
        'medicineName': !exists(json, 'medicineName') ? undefined : json['medicineName'],
        'medicineForChildren': !exists(json, 'medicineForChildren') ? undefined : json['medicineForChildren'],
        'maxDuration': !exists(json, 'maxDuration') ? undefined : (new Date(json['maxDuration'])),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'spcAgent': !exists(json, 'spcAgent') ? undefined : HUXELSAPICommonPatentModelsAgentFromJSON(json['spcAgent']),
        'agent': !exists(json, 'agent') ? undefined : json['agent'],
        'icelandicMarketingAuthorizationNumber': !exists(json, 'icelandicMarketingAuthorizationNumber') ? undefined : json['icelandicMarketingAuthorizationNumber'],
        'dateIcelandicMarketingAuthorization': !exists(json, 'dateIcelandicMarketingAuthorization') ? undefined : (new Date(json['dateIcelandicMarketingAuthorization'])),
        'foreignMarketingAuthorizationNumber': !exists(json, 'foreignMarketingAuthorizationNumber') ? undefined : json['foreignMarketingAuthorizationNumber'],
        'dateForeignMarketingAuthorization': !exists(json, 'dateForeignMarketingAuthorization') ? undefined : (new Date(json['dateForeignMarketingAuthorization'])),
        'grantPublishedInGazetteDate': !exists(json, 'grant_published_in_gazette_date') ? undefined : (new Date(json['grant_published_in_gazette_date'])),
        'publishedInGazetteDate': !exists(json, 'published_in_gazette_date') ? undefined : (new Date(json['published_in_gazette_date'])),
        'referenceNumber': !exists(json, 'referenceNumber') ? undefined : json['referenceNumber'],
        'lastModified': !exists(json, 'lastModified') ? undefined : (new Date(json['lastModified'])),
        'canRenew': !exists(json, 'canRenew') ? undefined : json['canRenew'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'annualFee': !exists(json, 'annualFee') ? undefined : HUXELSAPICommonPatentModelsAnnualFeesFromJSON(json['annualFee']),
        'annualFeeList': !exists(json, 'annualFeeList') ? undefined : (json['annualFeeList'] === null ? null : (json['annualFeeList'] as Array<any>).map(HUXELSAPICommonPatentModelsAnnualFeesFromJSON)),
        'lastAnnualFee': !exists(json, 'lastAnnualFee') ? undefined : HUXELSAPICommonPatentModelsAnnualFeesFromJSON(json['lastAnnualFee']),
        'parentPatent': !exists(json, 'parentPatent') ? undefined : json['parentPatent'],
        'owners': !exists(json, 'owners') ? undefined : (json['owners'] === null ? null : (json['owners'] as Array<any>).map(HUXELSAPICommonPatentModelsOwnerFromJSON)),
    };
}

export function HUXELSAPICommonPatentModelsSPCToJSON(value?: HUXELSAPICommonPatentModelsSPC | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'spcNumber': value.spcNumber,
        'applicationDate': value.applicationDate === undefined ? undefined : (value.applicationDate.toISOString()),
        'product': value.product,
        'medicineName': value.medicineName,
        'medicineForChildren': value.medicineForChildren,
        'maxDuration': value.maxDuration === undefined ? undefined : (value.maxDuration.toISOString()),
        'status': value.status,
        'spcAgent': HUXELSAPICommonPatentModelsAgentToJSON(value.spcAgent),
        'agent': value.agent,
        'icelandicMarketingAuthorizationNumber': value.icelandicMarketingAuthorizationNumber,
        'dateIcelandicMarketingAuthorization': value.dateIcelandicMarketingAuthorization === undefined ? undefined : (value.dateIcelandicMarketingAuthorization.toISOString()),
        'foreignMarketingAuthorizationNumber': value.foreignMarketingAuthorizationNumber,
        'dateForeignMarketingAuthorization': value.dateForeignMarketingAuthorization === undefined ? undefined : (value.dateForeignMarketingAuthorization.toISOString()),
        'grant_published_in_gazette_date': value.grantPublishedInGazetteDate === undefined ? undefined : (value.grantPublishedInGazetteDate.toISOString()),
        'published_in_gazette_date': value.publishedInGazetteDate === undefined ? undefined : (value.publishedInGazetteDate.toISOString()),
        'referenceNumber': value.referenceNumber,
        'lastModified': value.lastModified === undefined ? undefined : (value.lastModified.toISOString()),
        'canRenew': value.canRenew,
        'message': value.message,
        'annualFee': HUXELSAPICommonPatentModelsAnnualFeesToJSON(value.annualFee),
        'annualFeeList': value.annualFeeList === undefined ? undefined : (value.annualFeeList === null ? null : (value.annualFeeList as Array<any>).map(HUXELSAPICommonPatentModelsAnnualFeesToJSON)),
        'lastAnnualFee': HUXELSAPICommonPatentModelsAnnualFeesToJSON(value.lastAnnualFee),
        'parentPatent': value.parentPatent,
        'owners': value.owners === undefined ? undefined : (value.owners === null ? null : (value.owners as Array<any>).map(HUXELSAPICommonPatentModelsOwnerToJSON)),
    };
}


