/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HUXELSAPICommonPatentModelsAgent,
    HUXELSAPICommonPatentModelsAgentFromJSON,
    HUXELSAPICommonPatentModelsAgentFromJSONTyped,
    HUXELSAPICommonPatentModelsAgentToJSON,
    HUXELSAPICommonPatentModelsAnnualFeeSimple,
    HUXELSAPICommonPatentModelsAnnualFeeSimpleFromJSON,
    HUXELSAPICommonPatentModelsAnnualFeeSimpleFromJSONTyped,
    HUXELSAPICommonPatentModelsAnnualFeeSimpleToJSON,
    HUXELSAPICommonPatentModelsAnnualFees,
    HUXELSAPICommonPatentModelsAnnualFeesFromJSON,
    HUXELSAPICommonPatentModelsAnnualFeesFromJSONTyped,
    HUXELSAPICommonPatentModelsAnnualFeesToJSON,
    HUXELSAPICommonPatentModelsInternalClassification,
    HUXELSAPICommonPatentModelsInternalClassificationFromJSON,
    HUXELSAPICommonPatentModelsInternalClassificationFromJSONTyped,
    HUXELSAPICommonPatentModelsInternalClassificationToJSON,
    HUXELSAPICommonPatentModelsInventor,
    HUXELSAPICommonPatentModelsInventorFromJSON,
    HUXELSAPICommonPatentModelsInventorFromJSONTyped,
    HUXELSAPICommonPatentModelsInventorToJSON,
    HUXELSAPICommonPatentModelsOwner,
    HUXELSAPICommonPatentModelsOwnerFromJSON,
    HUXELSAPICommonPatentModelsOwnerFromJSONTyped,
    HUXELSAPICommonPatentModelsOwnerToJSON,
    HUXELSAPICommonPatentModelsPCT,
    HUXELSAPICommonPatentModelsPCTFromJSON,
    HUXELSAPICommonPatentModelsPCTFromJSONTyped,
    HUXELSAPICommonPatentModelsPCTToJSON,
    HUXELSAPICommonPatentModelsPCTIS,
    HUXELSAPICommonPatentModelsPCTISFromJSON,
    HUXELSAPICommonPatentModelsPCTISFromJSONTyped,
    HUXELSAPICommonPatentModelsPCTISToJSON,
    HUXELSAPICommonPatentModelsPatentCountry,
    HUXELSAPICommonPatentModelsPatentCountryFromJSON,
    HUXELSAPICommonPatentModelsPatentCountryFromJSONTyped,
    HUXELSAPICommonPatentModelsPatentCountryToJSON,
    HUXELSAPICommonPatentModelsPriority,
    HUXELSAPICommonPatentModelsPriorityFromJSON,
    HUXELSAPICommonPatentModelsPriorityFromJSONTyped,
    HUXELSAPICommonPatentModelsPriorityToJSON,
    HUXELSAPICommonPatentModelsSPC,
    HUXELSAPICommonPatentModelsSPCFromJSON,
    HUXELSAPICommonPatentModelsSPCFromJSONTyped,
    HUXELSAPICommonPatentModelsSPCToJSON,
} from './';

/**
 * 
 * @export
 * @interface HUXELSAPICommonPatentModelsPatent
 */
export interface HUXELSAPICommonPatentModelsPatent {
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    applicationNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    epApplicationNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    registrationNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    patentName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    patentNameInOrgLanguage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    patentIcelandicName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    ownerName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    ownerHome?: string | null;
    /**
     * 
     * @type {HUXELSAPICommonPatentModelsPatentCountry}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    ownerCountry?: HUXELSAPICommonPatentModelsPatentCountry;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    expires?: Date;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    registeredDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    epDatePublication?: Date;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    epDateProvisionPublishedInGazette?: Date;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    epApplicationDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    applicationDatePublishedAsAvailable?: Date;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    maxValidDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    epDateTranslationSubmitted?: Date;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    applicationDate?: Date;
    /**
     * 
     * @type {HUXELSAPICommonPatentModelsAnnualFees}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    nextAnnualFee?: HUXELSAPICommonPatentModelsAnnualFees;
    /**
     * 
     * @type {HUXELSAPICommonPatentModelsAnnualFees}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    currentAnnualFee?: HUXELSAPICommonPatentModelsAnnualFees;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsAnnualFeeSimple>}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    annualFees?: Array<HUXELSAPICommonPatentModelsAnnualFeeSimple> | null;
    /**
     * 
     * @type {number}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    paymentDue?: number;
    /**
     * 
     * @type {number}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    applicationFee?: number;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    canRenew?: boolean;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    error?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    status?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    statusText?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    statusDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    alive?: boolean;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    epoStatus?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    dataURL?: string | null;
    /**
     * 
     * @type {HUXELSAPICommonPatentModelsAgent}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    patentAgent?: HUXELSAPICommonPatentModelsAgent;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    classificationType?: string | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsInventor>}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    inventors?: Array<HUXELSAPICommonPatentModelsInventor> | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsInternalClassification>}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    internalClassifications?: Array<HUXELSAPICommonPatentModelsInternalClassification> | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsPriority>}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    priorities?: Array<HUXELSAPICommonPatentModelsPriority> | null;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsOwner>}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    owners?: Array<HUXELSAPICommonPatentModelsOwner> | null;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    appDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    regDate?: Date;
    /**
     * 
     * @type {Array<HUXELSAPICommonPatentModelsSPC>}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    spc?: Array<HUXELSAPICommonPatentModelsSPC> | null;
    /**
     * 
     * @type {Date}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    lastModified?: Date;
    /**
     * 
     * @type {string}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    language?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    spcNumbers?: Array<string> | null;
    /**
     * 
     * @type {HUXELSAPICommonPatentModelsPCT}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    pct?: HUXELSAPICommonPatentModelsPCT;
    /**
     * 
     * @type {HUXELSAPICommonPatentModelsPCTIS}
     * @memberof HUXELSAPICommonPatentModelsPatent
     */
    pctIs?: HUXELSAPICommonPatentModelsPCTIS;
}

export function HUXELSAPICommonPatentModelsPatentFromJSON(json: any): HUXELSAPICommonPatentModelsPatent {
    return HUXELSAPICommonPatentModelsPatentFromJSONTyped(json, false);
}

export function HUXELSAPICommonPatentModelsPatentFromJSONTyped(json: any, ignoreDiscriminator: boolean): HUXELSAPICommonPatentModelsPatent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'applicationNumber': !exists(json, 'applicationNumber') ? undefined : json['applicationNumber'],
        'epApplicationNumber': !exists(json, 'epApplicationNumber') ? undefined : json['epApplicationNumber'],
        'registrationNumber': !exists(json, 'registrationNumber') ? undefined : json['registrationNumber'],
        'patentName': !exists(json, 'patentName') ? undefined : json['patentName'],
        'patentNameInOrgLanguage': !exists(json, 'patentNameInOrgLanguage') ? undefined : json['patentNameInOrgLanguage'],
        'patentIcelandicName': !exists(json, 'patentIcelandicName') ? undefined : json['patentIcelandicName'],
        'ownerName': !exists(json, 'ownerName') ? undefined : json['ownerName'],
        'ownerHome': !exists(json, 'ownerHome') ? undefined : json['ownerHome'],
        'ownerCountry': !exists(json, 'ownerCountry') ? undefined : HUXELSAPICommonPatentModelsPatentCountryFromJSON(json['ownerCountry']),
        'expires': !exists(json, 'expires') ? undefined : (new Date(json['expires'])),
        'registeredDate': !exists(json, 'registeredDate') ? undefined : (new Date(json['registeredDate'])),
        'epDatePublication': !exists(json, 'epDatePublication') ? undefined : (new Date(json['epDatePublication'])),
        'epDateProvisionPublishedInGazette': !exists(json, 'epDateProvisionPublishedInGazette') ? undefined : (new Date(json['epDateProvisionPublishedInGazette'])),
        'epApplicationDate': !exists(json, 'epApplicationDate') ? undefined : (new Date(json['epApplicationDate'])),
        'applicationDatePublishedAsAvailable': !exists(json, 'applicationDatePublishedAsAvailable') ? undefined : (new Date(json['applicationDatePublishedAsAvailable'])),
        'maxValidDate': !exists(json, 'maxValidDate') ? undefined : (new Date(json['maxValidDate'])),
        'epDateTranslationSubmitted': !exists(json, 'epDateTranslationSubmitted') ? undefined : (new Date(json['epDateTranslationSubmitted'])),
        'applicationDate': !exists(json, 'applicationDate') ? undefined : (new Date(json['applicationDate'])),
        'nextAnnualFee': !exists(json, 'nextAnnualFee') ? undefined : HUXELSAPICommonPatentModelsAnnualFeesFromJSON(json['nextAnnualFee']),
        'currentAnnualFee': !exists(json, 'currentAnnualFee') ? undefined : HUXELSAPICommonPatentModelsAnnualFeesFromJSON(json['currentAnnualFee']),
        'annualFees': !exists(json, 'annualFees') ? undefined : (json['annualFees'] === null ? null : (json['annualFees'] as Array<any>).map(HUXELSAPICommonPatentModelsAnnualFeeSimpleFromJSON)),
        'paymentDue': !exists(json, 'paymentDue') ? undefined : json['paymentDue'],
        'applicationFee': !exists(json, 'applicationFee') ? undefined : json['applicationFee'],
        'canRenew': !exists(json, 'canRenew') ? undefined : json['canRenew'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'statusText': !exists(json, 'statusText') ? undefined : json['statusText'],
        'statusDate': !exists(json, 'statusDate') ? undefined : (new Date(json['statusDate'])),
        'alive': !exists(json, 'alive') ? undefined : json['alive'],
        'epoStatus': !exists(json, 'epoStatus') ? undefined : json['epoStatus'],
        'dataURL': !exists(json, 'dataURL') ? undefined : json['dataURL'],
        'patentAgent': !exists(json, 'patentAgent') ? undefined : HUXELSAPICommonPatentModelsAgentFromJSON(json['patentAgent']),
        'classificationType': !exists(json, 'classificationType') ? undefined : json['classificationType'],
        'inventors': !exists(json, 'inventors') ? undefined : (json['inventors'] === null ? null : (json['inventors'] as Array<any>).map(HUXELSAPICommonPatentModelsInventorFromJSON)),
        'internalClassifications': !exists(json, 'internalClassifications') ? undefined : (json['internalClassifications'] === null ? null : (json['internalClassifications'] as Array<any>).map(HUXELSAPICommonPatentModelsInternalClassificationFromJSON)),
        'priorities': !exists(json, 'priorities') ? undefined : (json['priorities'] === null ? null : (json['priorities'] as Array<any>).map(HUXELSAPICommonPatentModelsPriorityFromJSON)),
        'owners': !exists(json, 'owners') ? undefined : (json['owners'] === null ? null : (json['owners'] as Array<any>).map(HUXELSAPICommonPatentModelsOwnerFromJSON)),
        'appDate': !exists(json, 'appDate') ? undefined : (new Date(json['appDate'])),
        'regDate': !exists(json, 'regDate') ? undefined : (new Date(json['regDate'])),
        'spc': !exists(json, 'spc') ? undefined : (json['spc'] === null ? null : (json['spc'] as Array<any>).map(HUXELSAPICommonPatentModelsSPCFromJSON)),
        'lastModified': !exists(json, 'lastModified') ? undefined : (new Date(json['lastModified'])),
        'language': !exists(json, 'language') ? undefined : json['language'],
        'spcNumbers': !exists(json, 'spcNumbers') ? undefined : json['spcNumbers'],
        'pct': !exists(json, 'pct') ? undefined : HUXELSAPICommonPatentModelsPCTFromJSON(json['pct']),
        'pctIs': !exists(json, 'pct_is') ? undefined : HUXELSAPICommonPatentModelsPCTISFromJSON(json['pct_is']),
    };
}

export function HUXELSAPICommonPatentModelsPatentToJSON(value?: HUXELSAPICommonPatentModelsPatent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'applicationNumber': value.applicationNumber,
        'epApplicationNumber': value.epApplicationNumber,
        'registrationNumber': value.registrationNumber,
        'patentName': value.patentName,
        'patentNameInOrgLanguage': value.patentNameInOrgLanguage,
        'patentIcelandicName': value.patentIcelandicName,
        'ownerName': value.ownerName,
        'ownerHome': value.ownerHome,
        'ownerCountry': HUXELSAPICommonPatentModelsPatentCountryToJSON(value.ownerCountry),
        'expires': value.expires === undefined ? undefined : (value.expires.toISOString()),
        'registeredDate': value.registeredDate === undefined ? undefined : (value.registeredDate.toISOString()),
        'epDatePublication': value.epDatePublication === undefined ? undefined : (value.epDatePublication.toISOString()),
        'epDateProvisionPublishedInGazette': value.epDateProvisionPublishedInGazette === undefined ? undefined : (value.epDateProvisionPublishedInGazette.toISOString()),
        'epApplicationDate': value.epApplicationDate === undefined ? undefined : (value.epApplicationDate.toISOString()),
        'applicationDatePublishedAsAvailable': value.applicationDatePublishedAsAvailable === undefined ? undefined : (value.applicationDatePublishedAsAvailable.toISOString()),
        'maxValidDate': value.maxValidDate === undefined ? undefined : (value.maxValidDate.toISOString()),
        'epDateTranslationSubmitted': value.epDateTranslationSubmitted === undefined ? undefined : (value.epDateTranslationSubmitted.toISOString()),
        'applicationDate': value.applicationDate === undefined ? undefined : (value.applicationDate.toISOString()),
        'nextAnnualFee': HUXELSAPICommonPatentModelsAnnualFeesToJSON(value.nextAnnualFee),
        'currentAnnualFee': HUXELSAPICommonPatentModelsAnnualFeesToJSON(value.currentAnnualFee),
        'annualFees': value.annualFees === undefined ? undefined : (value.annualFees === null ? null : (value.annualFees as Array<any>).map(HUXELSAPICommonPatentModelsAnnualFeeSimpleToJSON)),
        'paymentDue': value.paymentDue,
        'applicationFee': value.applicationFee,
        'canRenew': value.canRenew,
        'error': value.error,
        'status': value.status,
        'statusText': value.statusText,
        'statusDate': value.statusDate === undefined ? undefined : (value.statusDate.toISOString()),
        'alive': value.alive,
        'epoStatus': value.epoStatus,
        'dataURL': value.dataURL,
        'patentAgent': HUXELSAPICommonPatentModelsAgentToJSON(value.patentAgent),
        'classificationType': value.classificationType,
        'inventors': value.inventors === undefined ? undefined : (value.inventors === null ? null : (value.inventors as Array<any>).map(HUXELSAPICommonPatentModelsInventorToJSON)),
        'internalClassifications': value.internalClassifications === undefined ? undefined : (value.internalClassifications === null ? null : (value.internalClassifications as Array<any>).map(HUXELSAPICommonPatentModelsInternalClassificationToJSON)),
        'priorities': value.priorities === undefined ? undefined : (value.priorities === null ? null : (value.priorities as Array<any>).map(HUXELSAPICommonPatentModelsPriorityToJSON)),
        'owners': value.owners === undefined ? undefined : (value.owners === null ? null : (value.owners as Array<any>).map(HUXELSAPICommonPatentModelsOwnerToJSON)),
        'appDate': value.appDate === undefined ? undefined : (value.appDate.toISOString()),
        'regDate': value.regDate === undefined ? undefined : (value.regDate.toISOString()),
        'spc': value.spc === undefined ? undefined : (value.spc === null ? null : (value.spc as Array<any>).map(HUXELSAPICommonPatentModelsSPCToJSON)),
        'lastModified': value.lastModified === undefined ? undefined : (value.lastModified.toISOString()),
        'language': value.language,
        'spcNumbers': value.spcNumbers,
        'pct': HUXELSAPICommonPatentModelsPCTToJSON(value.pct),
        'pct_is': HUXELSAPICommonPatentModelsPCTISToJSON(value.pctIs),
    };
}


