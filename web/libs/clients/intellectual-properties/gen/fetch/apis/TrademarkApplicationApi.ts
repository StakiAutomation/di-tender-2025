/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    HUXELSAPICommonTMApplicationModelsTrademarkApplication,
    HUXELSAPICommonTMApplicationModelsTrademarkApplicationFromJSON,
    HUXELSAPICommonTMApplicationModelsTrademarkApplicationToJSON,
    HUXELSAPICommonTMApplicationModelsTrademarkCase,
    HUXELSAPICommonTMApplicationModelsTrademarkCaseFromJSON,
    HUXELSAPICommonTMApplicationModelsTrademarkCaseToJSON,
    HUXELSAPICommonTMApplicationModelsTrademarkRenewal,
    HUXELSAPICommonTMApplicationModelsTrademarkRenewalFromJSON,
    HUXELSAPICommonTMApplicationModelsTrademarkRenewalToJSON,
    SharePointAPITrademarkTypes,
    SharePointAPITrademarkTypesFromJSON,
    SharePointAPITrademarkTypesToJSON,
} from '../models';

export interface TrademarkApplicationApplicationPostRequest {
    hUXELSAPICommonTMApplicationModelsTrademarkApplication?: HUXELSAPICommonTMApplicationModelsTrademarkApplication;
}

export interface TrademarkApplicationRenewalPostRequest {
    hUXELSAPICommonTMApplicationModelsTrademarkRenewal?: HUXELSAPICommonTMApplicationModelsTrademarkRenewal;
}

export interface TrademarkApplicationSubmitCasePostRequest {
    hUXELSAPICommonTMApplicationModelsTrademarkCase?: HUXELSAPICommonTMApplicationModelsTrademarkCase;
}

/**
 * 
 */
export class TrademarkApplicationApi extends runtime.BaseAPI {

    /**
     */
    async trademarkApplicationAlltrademarktypesGetRaw(): Promise<runtime.ApiResponse<Array<SharePointAPITrademarkTypes>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/TrademarkApplication/alltrademarktypes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(SharePointAPITrademarkTypesFromJSON));
    }

    /**
     */
    async trademarkApplicationAlltrademarktypesGet(): Promise<Array<SharePointAPITrademarkTypes>> {
        const response = await this.trademarkApplicationAlltrademarktypesGetRaw();
        return await response.value();
    }

    /**
     */
    async trademarkApplicationApplicationPostRaw(requestParameters: TrademarkApplicationApplicationPostRequest): Promise<runtime.ApiResponse<string>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/TrademarkApplication/application`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: HUXELSAPICommonTMApplicationModelsTrademarkApplicationToJSON(requestParameters.hUXELSAPICommonTMApplicationModelsTrademarkApplication),
        });

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async trademarkApplicationApplicationPost(requestParameters: TrademarkApplicationApplicationPostRequest): Promise<string> {
        const response = await this.trademarkApplicationApplicationPostRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async trademarkApplicationRenewalPostRaw(requestParameters: TrademarkApplicationRenewalPostRequest): Promise<runtime.ApiResponse<string>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/TrademarkApplication/renewal`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: HUXELSAPICommonTMApplicationModelsTrademarkRenewalToJSON(requestParameters.hUXELSAPICommonTMApplicationModelsTrademarkRenewal),
        });

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async trademarkApplicationRenewalPost(requestParameters: TrademarkApplicationRenewalPostRequest): Promise<string> {
        const response = await this.trademarkApplicationRenewalPostRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async trademarkApplicationSubmitCasePostRaw(requestParameters: TrademarkApplicationSubmitCasePostRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/TrademarkApplication/SubmitCase`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: HUXELSAPICommonTMApplicationModelsTrademarkCaseToJSON(requestParameters.hUXELSAPICommonTMApplicationModelsTrademarkCase),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async trademarkApplicationSubmitCasePost(requestParameters: TrademarkApplicationSubmitCasePostRequest): Promise<void> {
        await this.trademarkApplicationSubmitCasePostRaw(requestParameters);
    }

}
