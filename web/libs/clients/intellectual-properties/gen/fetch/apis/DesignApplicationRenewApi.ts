/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface DesignApplicationRenewGetRequest {
    id?: number;
}

export interface DesignApplicationRenewIdTypeGetRequest {
    id: string;
    type: string;
    designid?: number;
}

/**
 * 
 */
export class DesignApplicationRenewApi extends runtime.BaseAPI {

    /**
     */
    async designApplicationRenewGetRaw(requestParameters: DesignApplicationRenewGetRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.id !== undefined) {
            queryParameters['id'] = requestParameters.id;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/DesignApplicationRenew`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async designApplicationRenewGet(requestParameters: DesignApplicationRenewGetRequest): Promise<void> {
        await this.designApplicationRenewGetRaw(requestParameters);
    }

    /**
     */
    async designApplicationRenewIdTypeGetRaw(requestParameters: DesignApplicationRenewIdTypeGetRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling designApplicationRenewIdTypeGet.');
        }

        if (requestParameters.type === null || requestParameters.type === undefined) {
            throw new runtime.RequiredError('type','Required parameter requestParameters.type was null or undefined when calling designApplicationRenewIdTypeGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.designid !== undefined) {
            queryParameters['designid'] = requestParameters.designid;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/DesignApplicationRenew/{id}/{type}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${"type"}}`, encodeURIComponent(String(requestParameters.type))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async designApplicationRenewIdTypeGet(requestParameters: DesignApplicationRenewIdTypeGetRequest): Promise<void> {
        await this.designApplicationRenewIdTypeGetRaw(requestParameters);
    }

}
