/* tslint:disable */
/* eslint-disable */
/**
 * Hugverkastofan WebAPI
 * Hugverkastofan WebAPI v3
 *
 * The version of the OpenAPI document: v3
 * Contact: ut@hugverk.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    HUXELSAPICommonPatentModelsSPC,
    HUXELSAPICommonPatentModelsSPCFromJSON,
    HUXELSAPICommonPatentModelsSPCToJSON,
} from '../models';

export interface SPCIdGetRequest {
    id: string;
}

/**
 * 
 */
export class SPCApi extends runtime.BaseAPI {

    /**
     */
    async sPCIdGetRaw(requestParameters: SPCIdGetRequest): Promise<runtime.ApiResponse<HUXELSAPICommonPatentModelsSPC>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling sPCIdGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/SPC/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => HUXELSAPICommonPatentModelsSPCFromJSON(jsonValue));
    }

    /**
     */
    async sPCIdGet(requestParameters: SPCIdGetRequest): Promise<HUXELSAPICommonPatentModelsSPC> {
        const response = await this.sPCIdGetRaw(requestParameters);
        return await response.value();
    }

}
