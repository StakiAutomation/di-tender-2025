/* tslint:disable */
/* eslint-disable */
/**
 * Þjónustugátt starfskerfa sýslumanna
 * Rafrænn aðgengi að gögnum og aðgerðum starfskerfis sýslumanna
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Engine,
    EngineFromJSON,
    EngineFromJSONTyped,
    EngineToJSON,
    Fishery,
    FisheryFromJSON,
    FisheryFromJSONTyped,
    FisheryToJSON,
    Identification,
    IdentificationFromJSON,
    IdentificationFromJSONTyped,
    IdentificationToJSON,
    Insurance,
    InsuranceFromJSON,
    InsuranceFromJSONTyped,
    InsuranceToJSON,
    Mainmeasurements,
    MainmeasurementsFromJSON,
    MainmeasurementsFromJSONTyped,
    MainmeasurementsToJSON,
    Owner,
    OwnerFromJSON,
    OwnerFromJSONTyped,
    OwnerToJSON,
    Seaworhiness,
    SeaworhinessFromJSON,
    SeaworhinessFromJSONTyped,
    SeaworhinessToJSON,
} from './';

/**
 * 
 * @export
 * @interface Skip
 */
export interface Skip {
    /**
     * 
     * @type {number}
     * @memberof Skip
     */
    shipRegistrationNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    name?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Skip
     */
    isOpen?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    usageType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    operationArea?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    imoNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    status?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Skip
     */
    isLegallyStaffed?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Skip
     */
    initialRegistrationDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof Skip
     */
    constructionYear?: number;
    /**
     * 
     * @type {Seaworhiness}
     * @memberof Skip
     */
    seaworhiness?: Seaworhiness | null;
    /**
     * 
     * @type {Identification}
     * @memberof Skip
     */
    identification?: Identification | null;
    /**
     * 
     * @type {Mainmeasurements}
     * @memberof Skip
     */
    mainMeasurements?: Mainmeasurements | null;
    /**
     * 
     * @type {Array<object>}
     * @memberof Skip
     */
    crew?: Array<object> | null;
    /**
     * 
     * @type {Array<Owner>}
     * @memberof Skip
     */
    owners?: Array<Owner> | null;
    /**
     * 
     * @type {Array<object>}
     * @memberof Skip
     */
    passengerPermits?: Array<object> | null;
    /**
     * 
     * @type {Array<Insurance>}
     * @memberof Skip
     */
    insurances?: Array<Insurance> | null;
    /**
     * 
     * @type {Array<Engine>}
     * @memberof Skip
     */
    engines?: Array<Engine> | null;
    /**
     * 
     * @type {Fishery}
     * @memberof Skip
     */
    fishery?: Fishery | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    constructionPlace?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    constructionStation?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    constructionCountry?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    constructionNumber?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Skip
     */
    identificationRegistrationDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Skip
     */
    changeDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    hullMaterial?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    classificationSociety?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Skip
     */
    propellerCount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Skip
     */
    auxiliaryEnginePowerKiloWatts?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    acOrDc?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    previousNameOfShip?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Skip
     */
    powerIndicator?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    otherInfo?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Skip
     */
    maxPropellerDiameter?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Skip
     */
    powerKW?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    voltage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Skip
     */
    comments?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Skip
     */
    legallyStaffed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Skip
     */
    open?: boolean;
}

export function SkipFromJSON(json: any): Skip {
    return SkipFromJSONTyped(json, false);
}

export function SkipFromJSONTyped(json: any, ignoreDiscriminator: boolean): Skip {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'shipRegistrationNumber': !exists(json, 'shipRegistrationNumber') ? undefined : json['shipRegistrationNumber'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'isOpen': !exists(json, 'isOpen') ? undefined : json['isOpen'],
        'usageType': !exists(json, 'usageType') ? undefined : json['usageType'],
        'operationArea': !exists(json, 'operationArea') ? undefined : json['operationArea'],
        'imoNumber': !exists(json, 'imoNumber') ? undefined : json['imoNumber'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'isLegallyStaffed': !exists(json, 'isLegallyStaffed') ? undefined : json['isLegallyStaffed'],
        'initialRegistrationDate': !exists(json, 'initialRegistrationDate') ? undefined : (new Date(json['initialRegistrationDate'])),
        'constructionYear': !exists(json, 'constructionYear') ? undefined : json['constructionYear'],
        'seaworhiness': !exists(json, 'seaworhiness') ? undefined : SeaworhinessFromJSON(json['seaworhiness']),
        'identification': !exists(json, 'identification') ? undefined : IdentificationFromJSON(json['identification']),
        'mainMeasurements': !exists(json, 'mainMeasurements') ? undefined : MainmeasurementsFromJSON(json['mainMeasurements']),
        'crew': !exists(json, 'crew') ? undefined : json['crew'],
        'owners': !exists(json, 'owners') ? undefined : (json['owners'] === null ? null : (json['owners'] as Array<any>).map(OwnerFromJSON)),
        'passengerPermits': !exists(json, 'passengerPermits') ? undefined : json['passengerPermits'],
        'insurances': !exists(json, 'insurances') ? undefined : (json['insurances'] === null ? null : (json['insurances'] as Array<any>).map(InsuranceFromJSON)),
        'engines': !exists(json, 'engines') ? undefined : (json['engines'] === null ? null : (json['engines'] as Array<any>).map(EngineFromJSON)),
        'fishery': !exists(json, 'fishery') ? undefined : FisheryFromJSON(json['fishery']),
        'constructionPlace': !exists(json, 'constructionPlace') ? undefined : json['constructionPlace'],
        'constructionStation': !exists(json, 'constructionStation') ? undefined : json['constructionStation'],
        'constructionCountry': !exists(json, 'constructionCountry') ? undefined : json['constructionCountry'],
        'constructionNumber': !exists(json, 'constructionNumber') ? undefined : json['constructionNumber'],
        'identificationRegistrationDate': !exists(json, 'identificationRegistrationDate') ? undefined : (new Date(json['identificationRegistrationDate'])),
        'changeDate': !exists(json, 'changeDate') ? undefined : (new Date(json['changeDate'])),
        'hullMaterial': !exists(json, 'hullMaterial') ? undefined : json['hullMaterial'],
        'classificationSociety': !exists(json, 'classificationSociety') ? undefined : json['classificationSociety'],
        'propellerCount': !exists(json, 'propellerCount') ? undefined : json['propellerCount'],
        'auxiliaryEnginePowerKiloWatts': !exists(json, 'auxiliaryEnginePowerKiloWatts') ? undefined : json['auxiliaryEnginePowerKiloWatts'],
        'acOrDc': !exists(json, 'acOrDc') ? undefined : json['acOrDc'],
        'previousNameOfShip': !exists(json, 'previousNameOfShip') ? undefined : json['previousNameOfShip'],
        'powerIndicator': !exists(json, 'powerIndicator') ? undefined : json['powerIndicator'],
        'otherInfo': !exists(json, 'otherInfo') ? undefined : json['otherInfo'],
        'maxPropellerDiameter': !exists(json, 'maxPropellerDiameter') ? undefined : json['maxPropellerDiameter'],
        'powerKW': !exists(json, 'powerKW') ? undefined : json['powerKW'],
        'voltage': !exists(json, 'voltage') ? undefined : json['voltage'],
        'comments': !exists(json, 'comments') ? undefined : json['comments'],
        'legallyStaffed': !exists(json, 'legallyStaffed') ? undefined : json['legallyStaffed'],
        'open': !exists(json, 'open') ? undefined : json['open'],
    };
}

export function SkipToJSON(value?: Skip | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shipRegistrationNumber': value.shipRegistrationNumber,
        'name': value.name,
        'isOpen': value.isOpen,
        'usageType': value.usageType,
        'operationArea': value.operationArea,
        'imoNumber': value.imoNumber,
        'status': value.status,
        'isLegallyStaffed': value.isLegallyStaffed,
        'initialRegistrationDate': value.initialRegistrationDate === undefined ? undefined : (value.initialRegistrationDate.toISOString()),
        'constructionYear': value.constructionYear,
        'seaworhiness': SeaworhinessToJSON(value.seaworhiness),
        'identification': IdentificationToJSON(value.identification),
        'mainMeasurements': MainmeasurementsToJSON(value.mainMeasurements),
        'crew': value.crew,
        'owners': value.owners === undefined ? undefined : (value.owners === null ? null : (value.owners as Array<any>).map(OwnerToJSON)),
        'passengerPermits': value.passengerPermits,
        'insurances': value.insurances === undefined ? undefined : (value.insurances === null ? null : (value.insurances as Array<any>).map(InsuranceToJSON)),
        'engines': value.engines === undefined ? undefined : (value.engines === null ? null : (value.engines as Array<any>).map(EngineToJSON)),
        'fishery': FisheryToJSON(value.fishery),
        'constructionPlace': value.constructionPlace,
        'constructionStation': value.constructionStation,
        'constructionCountry': value.constructionCountry,
        'constructionNumber': value.constructionNumber,
        'identificationRegistrationDate': value.identificationRegistrationDate === undefined ? undefined : (value.identificationRegistrationDate.toISOString()),
        'changeDate': value.changeDate === undefined ? undefined : (value.changeDate.toISOString()),
        'hullMaterial': value.hullMaterial,
        'classificationSociety': value.classificationSociety,
        'propellerCount': value.propellerCount,
        'auxiliaryEnginePowerKiloWatts': value.auxiliaryEnginePowerKiloWatts,
        'acOrDc': value.acOrDc,
        'previousNameOfShip': value.previousNameOfShip,
        'powerIndicator': value.powerIndicator,
        'otherInfo': value.otherInfo,
        'maxPropellerDiameter': value.maxPropellerDiameter,
        'powerKW': value.powerKW,
        'voltage': value.voltage,
        'comments': value.comments,
        'legallyStaffed': value.legallyStaffed,
        'open': value.open,
    };
}


