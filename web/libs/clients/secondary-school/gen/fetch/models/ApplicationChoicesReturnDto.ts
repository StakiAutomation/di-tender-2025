/* tslint:disable */
/* eslint-disable */
/**
 * MMS Island.is application API
 * API for Island.is
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApplicationChoiceStatus,
    ApplicationChoiceStatusFromJSON,
    ApplicationChoiceStatusFromJSONTyped,
    ApplicationChoiceStatusToJSON,
    LanguageDto,
    LanguageDtoFromJSON,
    LanguageDtoFromJSONTyped,
    LanguageDtoToJSON,
    ProgrammeChoiceReturnDto,
    ProgrammeChoiceReturnDtoFromJSON,
    ProgrammeChoiceReturnDtoFromJSONTyped,
    ProgrammeChoiceReturnDtoToJSON,
    SchoolSimpleDto,
    SchoolSimpleDtoFromJSON,
    SchoolSimpleDtoFromJSONTyped,
    SchoolSimpleDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface ApplicationChoicesReturnDto
 */
export interface ApplicationChoicesReturnDto {
    /**
     * Priority of the school being applied to 
     * 1 highest priority, 2 second highest priority, etc.
     * @type {number}
     * @memberof ApplicationChoicesReturnDto
     */
    priority?: number;
    /**
     * 
     * @type {SchoolSimpleDto}
     * @memberof ApplicationChoicesReturnDto
     */
    school?: SchoolSimpleDto;
    /**
     * Programme choice
     * @type {Array<ProgrammeChoiceReturnDto>}
     * @memberof ApplicationChoicesReturnDto
     */
    programmeChoices?: Array<ProgrammeChoiceReturnDto> | null;
    /**
     * 
     * @type {LanguageDto}
     * @memberof ApplicationChoicesReturnDto
     */
    thirdLanguage?: LanguageDto;
    /**
     * 
     * @type {LanguageDto}
     * @memberof ApplicationChoicesReturnDto
     */
    northernLanguage?: LanguageDto;
    /**
     * Is the student requesting dormitory.
     * @type {boolean}
     * @memberof ApplicationChoicesReturnDto
     */
    requestDormitory?: boolean;
    /**
     * The ranking of the application choice
     * @type {number}
     * @memberof ApplicationChoicesReturnDto
     */
    rank?: number;
    /**
     * 
     * @type {ApplicationChoiceStatus}
     * @memberof ApplicationChoicesReturnDto
     */
    status?: ApplicationChoiceStatus;
}

export function ApplicationChoicesReturnDtoFromJSON(json: any): ApplicationChoicesReturnDto {
    return ApplicationChoicesReturnDtoFromJSONTyped(json, false);
}

export function ApplicationChoicesReturnDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationChoicesReturnDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'school': !exists(json, 'school') ? undefined : SchoolSimpleDtoFromJSON(json['school']),
        'programmeChoices': !exists(json, 'programmeChoices') ? undefined : (json['programmeChoices'] === null ? null : (json['programmeChoices'] as Array<any>).map(ProgrammeChoiceReturnDtoFromJSON)),
        'thirdLanguage': !exists(json, 'thirdLanguage') ? undefined : LanguageDtoFromJSON(json['thirdLanguage']),
        'northernLanguage': !exists(json, 'northernLanguage') ? undefined : LanguageDtoFromJSON(json['northernLanguage']),
        'requestDormitory': !exists(json, 'requestDormitory') ? undefined : json['requestDormitory'],
        'rank': !exists(json, 'rank') ? undefined : json['rank'],
        'status': !exists(json, 'status') ? undefined : ApplicationChoiceStatusFromJSON(json['status']),
    };
}

export function ApplicationChoicesReturnDtoToJSON(value?: ApplicationChoicesReturnDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'priority': value.priority,
        'school': SchoolSimpleDtoToJSON(value.school),
        'programmeChoices': value.programmeChoices === undefined ? undefined : (value.programmeChoices === null ? null : (value.programmeChoices as Array<any>).map(ProgrammeChoiceReturnDtoToJSON)),
        'thirdLanguage': LanguageDtoToJSON(value.thirdLanguage),
        'northernLanguage': LanguageDtoToJSON(value.northernLanguage),
        'requestDormitory': value.requestDormitory,
        'rank': value.rank,
        'status': ApplicationChoiceStatusToJSON(value.status),
    };
}


