/* tslint:disable */
/* eslint-disable */
/**
 * MMS Island.is application API
 * API for Island.is
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NextOfKinDto
 */
export interface NextOfKinDto {
    /**
     * Next of kin national Id
     * @type {string}
     * @memberof NextOfKinDto
     */
    nationalId: string | null;
    /**
     * Next of kin phone number
     * @type {string}
     * @memberof NextOfKinDto
     */
    phoneNumber: string | null;
    /**
     * Name of the next of kin
     * @type {string}
     * @memberof NextOfKinDto
     */
    name: string | null;
    /**
     * Email of the next of kin
     * @type {string}
     * @memberof NextOfKinDto
     */
    email?: string | null;
    /**
     * Place of residence of the next of kin
     * @type {string}
     * @memberof NextOfKinDto
     */
    address?: string | null;
    /**
     * Postcode of the next of kin
     * @type {string}
     * @memberof NextOfKinDto
     */
    postCode?: string | null;
}

export function NextOfKinDtoFromJSON(json: any): NextOfKinDto {
    return NextOfKinDtoFromJSONTyped(json, false);
}

export function NextOfKinDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): NextOfKinDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nationalId': json['nationalId'],
        'phoneNumber': json['phoneNumber'],
        'name': json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'postCode': !exists(json, 'postCode') ? undefined : json['postCode'],
    };
}

export function NextOfKinDtoToJSON(value?: NextOfKinDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nationalId': value.nationalId,
        'phoneNumber': value.phoneNumber,
        'name': value.name,
        'email': value.email,
        'address': value.address,
        'postCode': value.postCode,
    };
}


