/* tslint:disable */
/* eslint-disable */
/**
 * MMS Island.is application API
 * API for Island.is
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApplicationChoicesReturnDto,
    ApplicationChoicesReturnDtoFromJSON,
    ApplicationChoicesReturnDtoFromJSONTyped,
    ApplicationChoicesReturnDtoToJSON,
    ApplicationStatus,
    ApplicationStatusFromJSON,
    ApplicationStatusFromJSONTyped,
    ApplicationStatusToJSON,
    AttachmentReturnDto,
    AttachmentReturnDtoFromJSON,
    AttachmentReturnDtoFromJSONTyped,
    AttachmentReturnDtoToJSON,
    CurrentApplicantStatus,
    CurrentApplicantStatusFromJSON,
    CurrentApplicantStatusFromJSONTyped,
    CurrentApplicantStatusToJSON,
    LanguageDto,
    LanguageDtoFromJSON,
    LanguageDtoFromJSONTyped,
    LanguageDtoToJSON,
    NextOfKinDto,
    NextOfKinDtoFromJSON,
    NextOfKinDtoFromJSONTyped,
    NextOfKinDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface ApplicationReturnDto
 */
export interface ApplicationReturnDto {
    /**
     * Application Id
     * @type {string}
     * @memberof ApplicationReturnDto
     */
    id?: string;
    /**
     * Application date
     * @type {Date}
     * @memberof ApplicationReturnDto
     */
    applicationDate?: Date;
    /**
     * Date created
     * @type {Date}
     * @memberof ApplicationReturnDto
     */
    createdDate?: Date;
    /**
     * Date updated
     * @type {Date}
     * @memberof ApplicationReturnDto
     */
    updatedDate?: Date;
    /**
     * 
     * @type {ApplicationStatus}
     * @memberof ApplicationReturnDto
     */
    status?: ApplicationStatus;
    /**
     * 
     * @type {LanguageDto}
     * @memberof ApplicationReturnDto
     */
    speakingLanguage?: LanguageDto;
    /**
     * List of schools being applied to
     * @type {Array<ApplicationChoicesReturnDto>}
     * @memberof ApplicationReturnDto
     */
    applicationChoices?: Array<ApplicationChoicesReturnDto> | null;
    /**
     * 
     * @type {CurrentApplicantStatus}
     * @memberof ApplicationReturnDto
     */
    currentApplicantStatus?: CurrentApplicantStatus;
    /**
     * List of attachments
     * @type {Array<AttachmentReturnDto>}
     * @memberof ApplicationReturnDto
     */
    attachments?: Array<AttachmentReturnDto> | null;
    /**
     * Reference Id to the Island.is application
     * @type {string}
     * @memberof ApplicationReturnDto
     */
    islandIsApplicationId?: string | null;
    /**
     * The national ID  of the applicant
     * @type {string}
     * @memberof ApplicationReturnDto
     */
    applicantNationalId?: string | null;
    /**
     * Applicant name
     * @type {string}
     * @memberof ApplicationReturnDto
     */
    applicantName?: string | null;
    /**
     * Applicant gender
     * @type {string}
     * @memberof ApplicationReturnDto
     */
    applicantGender?: string | null;
    /**
     * Is the applicant a freshman
     * @type {boolean}
     * @memberof ApplicationReturnDto
     */
    isFreshman?: boolean;
    /**
     * Applicant phone number
     * @type {string}
     * @memberof ApplicationReturnDto
     */
    phoneNumber?: string | null;
    /**
     * Applicant email
     * @type {string}
     * @memberof ApplicationReturnDto
     */
    email?: string | null;
    /**
     * Place of residence if other than legal home
     * @type {string}
     * @memberof ApplicationReturnDto
     */
    placeOfResidence?: string | null;
    /**
     * Postcode of residence if other than legal home
     * @type {string}
     * @memberof ApplicationReturnDto
     */
    postCode?: string | null;
    /**
     * Municipality of residence if other than legal home
     * @type {string}
     * @memberof ApplicationReturnDto
     */
    municipality?: string | null;
    /**
     * The national ID of the next of kin
     * @type {Array<NextOfKinDto>}
     * @memberof ApplicationReturnDto
     */
    nextOfKin?: Array<NextOfKinDto> | null;
    /**
     * Other information
     * @type {string}
     * @memberof ApplicationReturnDto
     */
    otherInformation?: string | null;
}

export function ApplicationReturnDtoFromJSON(json: any): ApplicationReturnDto {
    return ApplicationReturnDtoFromJSONTyped(json, false);
}

export function ApplicationReturnDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationReturnDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'applicationDate': !exists(json, 'applicationDate') ? undefined : (new Date(json['applicationDate'])),
        'createdDate': !exists(json, 'createdDate') ? undefined : (new Date(json['createdDate'])),
        'updatedDate': !exists(json, 'updatedDate') ? undefined : (new Date(json['updatedDate'])),
        'status': !exists(json, 'status') ? undefined : ApplicationStatusFromJSON(json['status']),
        'speakingLanguage': !exists(json, 'speakingLanguage') ? undefined : LanguageDtoFromJSON(json['speakingLanguage']),
        'applicationChoices': !exists(json, 'applicationChoices') ? undefined : (json['applicationChoices'] === null ? null : (json['applicationChoices'] as Array<any>).map(ApplicationChoicesReturnDtoFromJSON)),
        'currentApplicantStatus': !exists(json, 'currentApplicantStatus') ? undefined : CurrentApplicantStatusFromJSON(json['currentApplicantStatus']),
        'attachments': !exists(json, 'attachments') ? undefined : (json['attachments'] === null ? null : (json['attachments'] as Array<any>).map(AttachmentReturnDtoFromJSON)),
        'islandIsApplicationId': !exists(json, 'islandIsApplicationId') ? undefined : json['islandIsApplicationId'],
        'applicantNationalId': !exists(json, 'applicantNationalId') ? undefined : json['applicantNationalId'],
        'applicantName': !exists(json, 'applicantName') ? undefined : json['applicantName'],
        'applicantGender': !exists(json, 'applicantGender') ? undefined : json['applicantGender'],
        'isFreshman': !exists(json, 'isFreshman') ? undefined : json['isFreshman'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'placeOfResidence': !exists(json, 'placeOfResidence') ? undefined : json['placeOfResidence'],
        'postCode': !exists(json, 'postCode') ? undefined : json['postCode'],
        'municipality': !exists(json, 'municipality') ? undefined : json['municipality'],
        'nextOfKin': !exists(json, 'nextOfKin') ? undefined : (json['nextOfKin'] === null ? null : (json['nextOfKin'] as Array<any>).map(NextOfKinDtoFromJSON)),
        'otherInformation': !exists(json, 'otherInformation') ? undefined : json['otherInformation'],
    };
}

export function ApplicationReturnDtoToJSON(value?: ApplicationReturnDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'applicationDate': value.applicationDate === undefined ? undefined : (value.applicationDate.toISOString()),
        'createdDate': value.createdDate === undefined ? undefined : (value.createdDate.toISOString()),
        'updatedDate': value.updatedDate === undefined ? undefined : (value.updatedDate.toISOString()),
        'status': ApplicationStatusToJSON(value.status),
        'speakingLanguage': LanguageDtoToJSON(value.speakingLanguage),
        'applicationChoices': value.applicationChoices === undefined ? undefined : (value.applicationChoices === null ? null : (value.applicationChoices as Array<any>).map(ApplicationChoicesReturnDtoToJSON)),
        'currentApplicantStatus': CurrentApplicantStatusToJSON(value.currentApplicantStatus),
        'attachments': value.attachments === undefined ? undefined : (value.attachments === null ? null : (value.attachments as Array<any>).map(AttachmentReturnDtoToJSON)),
        'islandIsApplicationId': value.islandIsApplicationId,
        'applicantNationalId': value.applicantNationalId,
        'applicantName': value.applicantName,
        'applicantGender': value.applicantGender,
        'isFreshman': value.isFreshman,
        'phoneNumber': value.phoneNumber,
        'email': value.email,
        'placeOfResidence': value.placeOfResidence,
        'postCode': value.postCode,
        'municipality': value.municipality,
        'nextOfKin': value.nextOfKin === undefined ? undefined : (value.nextOfKin === null ? null : (value.nextOfKin as Array<any>).map(NextOfKinDtoToJSON)),
        'otherInformation': value.otherInformation,
    };
}


