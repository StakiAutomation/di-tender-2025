/* tslint:disable */
/* eslint-disable */
/**
 * MedmaeliRestAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FrambodBaseDTO
 */
export interface FrambodBaseDTO {
    /**
     * 
     * @type {number}
     * @memberof FrambodBaseDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof FrambodBaseDTO
     */
    nafn: string;
    /**
     * 
     * @type {string}
     * @memberof FrambodBaseDTO
     */
    kennitala: string;
    /**
     * 
     * @type {string}
     * @memberof FrambodBaseDTO
     */
    listabokstafur?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FrambodBaseDTO
     */
    simi?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FrambodBaseDTO
     */
    netfang?: string | null;
    /**
     * 
     * @type {number}
     * @memberof FrambodBaseDTO
     */
    medmaelasofnunID?: number;
}

export function FrambodBaseDTOFromJSON(json: any): FrambodBaseDTO {
    return FrambodBaseDTOFromJSONTyped(json, false);
}

export function FrambodBaseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): FrambodBaseDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'nafn': json['nafn'],
        'kennitala': json['kennitala'],
        'listabokstafur': !exists(json, 'listabokstafur') ? undefined : json['listabokstafur'],
        'simi': !exists(json, 'simi') ? undefined : json['simi'],
        'netfang': !exists(json, 'netfang') ? undefined : json['netfang'],
        'medmaelasofnunID': !exists(json, 'medmaelasofnunID') ? undefined : json['medmaelasofnunID'],
    };
}

export function FrambodBaseDTOToJSON(value?: FrambodBaseDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'nafn': value.nafn,
        'kennitala': value.kennitala,
        'listabokstafur': value.listabokstafur,
        'simi': value.simi,
        'netfang': value.netfang,
        'medmaelasofnunID': value.medmaelasofnunID,
    };
}


