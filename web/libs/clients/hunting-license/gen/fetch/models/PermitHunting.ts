/* tslint:disable */
/* eslint-disable */
/**
 * Forritunarskil þróunar á island.is
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@ust.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Benefit,
    BenefitFromJSON,
    BenefitFromJSONTyped,
    BenefitToJSON,
} from './';

/**
 * Hunting Permits in Iceland
 * @export
 * @interface PermitHunting
 */
export interface PermitHunting {
    /**
     * 
     * @type {string}
     * @memberof PermitHunting
     */
    readonly personid?: string;
    /**
     * 
     * @type {string}
     * @memberof PermitHunting
     */
    readonly personname?: string;
    /**
     * 
     * @type {string}
     * @memberof PermitHunting
     */
    readonly address?: string;
    /**
     * 
     * @type {string}
     * @memberof PermitHunting
     */
    readonly postalCode?: string;
    /**
     * 
     * @type {string}
     * @memberof PermitHunting
     */
    readonly postalAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof PermitHunting
     */
    readonly permitCategory?: string;
    /**
     * 
     * @type {string}
     * @memberof PermitHunting
     */
    readonly permitNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof PermitHunting
     */
    readonly permitValidity?: PermitHuntingPermitValidityEnum;
    /**
     * 
     * @type {Date}
     * @memberof PermitHunting
     */
    readonly validFrom?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PermitHunting
     */
    readonly validTo?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PermitHunting
     */
    readonly permitIssued?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof PermitHunting
     */
    permitFor?: Array<string>;
    /**
     * 
     * @type {Array<Benefit>}
     * @memberof PermitHunting
     */
    benefits?: Array<Benefit>;
    /**
     * 
     * @type {string}
     * @memberof PermitHunting
     */
    readonly permitRenewLink?: string;
    /**
     * 
     * @type {string}
     * @memberof PermitHunting
     */
    personphoto?: string;
}

export function PermitHuntingFromJSON(json: any): PermitHunting {
    return PermitHuntingFromJSONTyped(json, false);
}

export function PermitHuntingFromJSONTyped(json: any, ignoreDiscriminator: boolean): PermitHunting {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'personid': !exists(json, 'personid') ? undefined : json['personid'],
        'personname': !exists(json, 'personname') ? undefined : json['personname'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'postalCode': !exists(json, 'postal_code') ? undefined : json['postal_code'],
        'postalAddress': !exists(json, 'postal_address') ? undefined : json['postal_address'],
        'permitCategory': !exists(json, 'permit_category') ? undefined : json['permit_category'],
        'permitNumber': !exists(json, 'permit_number') ? undefined : json['permit_number'],
        'permitValidity': !exists(json, 'permit_validity') ? undefined : json['permit_validity'],
        'validFrom': !exists(json, 'valid_from') ? undefined : (new Date(json['valid_from'])),
        'validTo': !exists(json, 'valid_to') ? undefined : (new Date(json['valid_to'])),
        'permitIssued': !exists(json, 'permit_issued') ? undefined : (new Date(json['permit_issued'])),
        'permitFor': !exists(json, 'permit_for') ? undefined : json['permit_for'],
        'benefits': !exists(json, 'benefits') ? undefined : ((json['benefits'] as Array<any>).map(BenefitFromJSON)),
        'permitRenewLink': !exists(json, 'permit_renew_link') ? undefined : json['permit_renew_link'],
        'personphoto': !exists(json, 'personphoto') ? undefined : json['personphoto'],
    };
}

export function PermitHuntingToJSON(value?: PermitHunting | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'permit_for': value.permitFor,
        'benefits': value.benefits === undefined ? undefined : ((value.benefits as Array<any>).map(BenefitToJSON)),
        'personphoto': value.personphoto,
    };
}

/**
* @export
* @enum {string}
*/
export enum PermitHuntingPermitValidityEnum {
    Gildi = 'Í gildi',
    EkkiGildi = 'Ekki í gildi',
    Valid = 'Valid',
    Expired = 'Expired'
}


