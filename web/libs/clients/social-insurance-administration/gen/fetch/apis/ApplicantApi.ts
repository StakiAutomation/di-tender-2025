/* tslint:disable */
/* eslint-disable */
/**
 * TR Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    TrWebApplicationsExternalPortalsError,
    TrWebApplicationsExternalPortalsErrorFromJSON,
    TrWebApplicationsExternalPortalsErrorToJSON,
    TrWebCommonsExternalPortalsApiModelsApplicantApplicantInfoReturn,
    TrWebCommonsExternalPortalsApiModelsApplicantApplicantInfoReturnFromJSON,
    TrWebCommonsExternalPortalsApiModelsApplicantApplicantInfoReturnToJSON,
    TrWebCommonsExternalPortalsApiModelsApplicantBalanceOfEstateInputModel,
    TrWebCommonsExternalPortalsApiModelsApplicantBalanceOfEstateInputModelFromJSON,
    TrWebCommonsExternalPortalsApiModelsApplicantBalanceOfEstateInputModelToJSON,
    TrWebCommonsExternalPortalsApiModelsApplicationsIsEligibleForApplicationReturn,
    TrWebCommonsExternalPortalsApiModelsApplicationsIsEligibleForApplicationReturnFromJSON,
    TrWebCommonsExternalPortalsApiModelsApplicationsIsEligibleForApplicationReturnToJSON,
    TrWebCommonsExternalPortalsApiModelsFormBuilderApplication,
    TrWebCommonsExternalPortalsApiModelsFormBuilderApplicationFromJSON,
    TrWebCommonsExternalPortalsApiModelsFormBuilderApplicationToJSON,
    TrWebCommonsExternalPortalsApiModelsFormBuilderResultSetsApplicationResultSet,
    TrWebCommonsExternalPortalsApiModelsFormBuilderResultSetsApplicationResultSetFromJSON,
    TrWebCommonsExternalPortalsApiModelsFormBuilderResultSetsApplicationResultSetToJSON,
} from '../models';

export interface ApiProtectedV1ApplicantApplicationTypeEligibleGetRequest {
    applicationType: string;
}

export interface ApiProtectedV1ApplicantBalancePostRequest {
    trWebCommonsExternalPortalsApiModelsApplicantBalanceOfEstateInputModel?: TrWebCommonsExternalPortalsApiModelsApplicantBalanceOfEstateInputModel;
}

export interface ApiProtectedV1ApplicantOnetimepaymentPostRequest {
    trWebCommonsExternalPortalsApiModelsFormBuilderApplication?: TrWebCommonsExternalPortalsApiModelsFormBuilderApplication;
}

/**
 * 
 */
export class ApplicantApi extends runtime.BaseAPI {

    /**
     * Returns whether the logged-in user is eligible for application of the requested type
     */
    async apiProtectedV1ApplicantApplicationTypeEligibleGetRaw(requestParameters: ApiProtectedV1ApplicantApplicationTypeEligibleGetRequest): Promise<runtime.ApiResponse<TrWebCommonsExternalPortalsApiModelsApplicationsIsEligibleForApplicationReturn>> {
        if (requestParameters.applicationType === null || requestParameters.applicationType === undefined) {
            throw new runtime.RequiredError('applicationType','Required parameter requestParameters.applicationType was null or undefined when calling apiProtectedV1ApplicantApplicationTypeEligibleGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/protected/v1/Applicant/{applicationType}/eligible`.replace(`{${"applicationType"}}`, encodeURIComponent(String(requestParameters.applicationType))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => TrWebCommonsExternalPortalsApiModelsApplicationsIsEligibleForApplicationReturnFromJSON(jsonValue));
    }

    /**
     * Returns whether the logged-in user is eligible for application of the requested type
     */
    async apiProtectedV1ApplicantApplicationTypeEligibleGet(requestParameters: ApiProtectedV1ApplicantApplicationTypeEligibleGetRequest): Promise<TrWebCommonsExternalPortalsApiModelsApplicationsIsEligibleForApplicationReturn> {
        const response = await this.apiProtectedV1ApplicantApplicationTypeEligibleGetRaw(requestParameters);
        return await response.value();
    }

    /**
     * This endpoint provides the balance of the estate.
     */
    async apiProtectedV1ApplicantBalancePostRaw(requestParameters: ApiProtectedV1ApplicantBalancePostRequest): Promise<runtime.ApiResponse<number>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/protected/v1/Applicant/balance`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TrWebCommonsExternalPortalsApiModelsApplicantBalanceOfEstateInputModelToJSON(requestParameters.trWebCommonsExternalPortalsApiModelsApplicantBalanceOfEstateInputModel),
        });

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * This endpoint provides the balance of the estate.
     */
    async apiProtectedV1ApplicantBalancePost(requestParameters: ApiProtectedV1ApplicantBalancePostRequest): Promise<number> {
        const response = await this.apiProtectedV1ApplicantBalancePostRaw(requestParameters);
        return await response.value();
    }

    /**
     * Returns the currently logged-in user\'s personal and bank info
     */
    async apiProtectedV1ApplicantGetRaw(): Promise<runtime.ApiResponse<TrWebCommonsExternalPortalsApiModelsApplicantApplicantInfoReturn>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/protected/v1/Applicant`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => TrWebCommonsExternalPortalsApiModelsApplicantApplicantInfoReturnFromJSON(jsonValue));
    }

    /**
     * Returns the currently logged-in user\'s personal and bank info
     */
    async apiProtectedV1ApplicantGet(): Promise<TrWebCommonsExternalPortalsApiModelsApplicantApplicantInfoReturn> {
        const response = await this.apiProtectedV1ApplicantGetRaw();
        return await response.value();
    }

    /**
     */
    async apiProtectedV1ApplicantOnetimepaymentPostRaw(requestParameters: ApiProtectedV1ApplicantOnetimepaymentPostRequest): Promise<runtime.ApiResponse<TrWebCommonsExternalPortalsApiModelsFormBuilderResultSetsApplicationResultSet>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("Bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/protected/v1/Applicant/onetimepayment`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TrWebCommonsExternalPortalsApiModelsFormBuilderApplicationToJSON(requestParameters.trWebCommonsExternalPortalsApiModelsFormBuilderApplication),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => TrWebCommonsExternalPortalsApiModelsFormBuilderResultSetsApplicationResultSetFromJSON(jsonValue));
    }

    /**
     */
    async apiProtectedV1ApplicantOnetimepaymentPost(requestParameters: ApiProtectedV1ApplicantOnetimepaymentPostRequest): Promise<TrWebCommonsExternalPortalsApiModelsFormBuilderResultSetsApplicationResultSet> {
        const response = await this.apiProtectedV1ApplicantOnetimepaymentPostRaw(requestParameters);
        return await response.value();
    }

}
