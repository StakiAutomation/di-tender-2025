/* tslint:disable */
/* eslint-disable */
/**
 * TR Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
 */
export interface TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine {
    /**
     * The number of the income category
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    incomeCategoryNumber?: number;
    /**
     * The name of the income category
     * @type {string}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    incomeCategoryName?: string | null;
    /**
     * The code of the income type
     * @type {string}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    incomeCategoryCode?: string | null;
    /**
     * The number of the income type
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    incomeTypeNumber?: number;
    /**
     * The name of the income type in Icelandic (lífeyrissjóður, laun etc.)
     * @type {string}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    incomeTypeName?: string | null;
    /**
     * The code of the income type
     * @type {string}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    incomeTypeCode?: string | null;
    /**
     * The income amount for January
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountJan?: number;
    /**
     * The income amount for February
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountFeb?: number;
    /**
     * The income amount for March
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountMar?: number;
    /**
     * The income amount for April
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountApr?: number;
    /**
     * The income amount for May
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountMay?: number;
    /**
     * The income amount for June
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountJun?: number;
    /**
     * The income amount for July
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountJul?: number;
    /**
     * The income amount for August
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountAug?: number;
    /**
     * The income amount for September
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountSep?: number;
    /**
     * The income amount for October
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountOct?: number;
    /**
     * The income amount for November
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountNov?: number;
    /**
     * The income amount for December
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    amountDec?: number;
    /**
     * The total annual sum of this income type, ie. the amount earned per year
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    totalSum?: number;
    /**
     * A 3-letter currency code for this income type, such as ISK, EUR, USD etc.
     * @type {string}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine
     */
    currency?: string | null;
}

export function TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLineFromJSON(json: any): TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine {
    return TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLineFromJSONTyped(json, false);
}

export function TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLineFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'incomeCategoryNumber': !exists(json, 'incomeCategoryNumber') ? undefined : json['incomeCategoryNumber'],
        'incomeCategoryName': !exists(json, 'incomeCategoryName') ? undefined : json['incomeCategoryName'],
        'incomeCategoryCode': !exists(json, 'incomeCategoryCode') ? undefined : json['incomeCategoryCode'],
        'incomeTypeNumber': !exists(json, 'incomeTypeNumber') ? undefined : json['incomeTypeNumber'],
        'incomeTypeName': !exists(json, 'incomeTypeName') ? undefined : json['incomeTypeName'],
        'incomeTypeCode': !exists(json, 'incomeTypeCode') ? undefined : json['incomeTypeCode'],
        'amountJan': !exists(json, 'amountJan') ? undefined : json['amountJan'],
        'amountFeb': !exists(json, 'amountFeb') ? undefined : json['amountFeb'],
        'amountMar': !exists(json, 'amountMar') ? undefined : json['amountMar'],
        'amountApr': !exists(json, 'amountApr') ? undefined : json['amountApr'],
        'amountMay': !exists(json, 'amountMay') ? undefined : json['amountMay'],
        'amountJun': !exists(json, 'amountJun') ? undefined : json['amountJun'],
        'amountJul': !exists(json, 'amountJul') ? undefined : json['amountJul'],
        'amountAug': !exists(json, 'amountAug') ? undefined : json['amountAug'],
        'amountSep': !exists(json, 'amountSep') ? undefined : json['amountSep'],
        'amountOct': !exists(json, 'amountOct') ? undefined : json['amountOct'],
        'amountNov': !exists(json, 'amountNov') ? undefined : json['amountNov'],
        'amountDec': !exists(json, 'amountDec') ? undefined : json['amountDec'],
        'totalSum': !exists(json, 'totalSum') ? undefined : json['totalSum'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
    };
}

export function TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLineToJSON(value?: TrWebCommonsExternalPortalsApiModelsIncomePlanIncomeTypeLine | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'incomeCategoryNumber': value.incomeCategoryNumber,
        'incomeCategoryName': value.incomeCategoryName,
        'incomeCategoryCode': value.incomeCategoryCode,
        'incomeTypeNumber': value.incomeTypeNumber,
        'incomeTypeName': value.incomeTypeName,
        'incomeTypeCode': value.incomeTypeCode,
        'amountJan': value.amountJan,
        'amountFeb': value.amountFeb,
        'amountMar': value.amountMar,
        'amountApr': value.amountApr,
        'amountMay': value.amountMay,
        'amountJun': value.amountJun,
        'amountJul': value.amountJul,
        'amountAug': value.amountAug,
        'amountSep': value.amountSep,
        'amountOct': value.amountOct,
        'amountNov': value.amountNov,
        'amountDec': value.amountDec,
        'totalSum': value.totalSum,
        'currency': value.currency,
    };
}


