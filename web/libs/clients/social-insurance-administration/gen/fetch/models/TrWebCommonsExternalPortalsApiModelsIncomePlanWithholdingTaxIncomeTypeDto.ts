/* tslint:disable */
/* eslint-disable */
/**
 * TR Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
 */
export interface TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto {
    /**
     * The income type number, e.g. 5808
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    incometypenumber?: number;
    /**
     * The income type name, e.g. "Laun"
     * @type {string}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    incometype?: string | null;
    /**
     * The income type code, e.g. "21F�O"
     * @type {string}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    incometypecode?: string | null;
    /**
     * Income type category number
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    categorynumber?: number;
    /**
     * Income type category name, e.g. "Atvinnutekjur", "Fj�rmagnstekjur" etc.
     * @type {string}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    categoryname?: string | null;
    /**
     * Income type category code
     * @type {string}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    categorycode?: string | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    january?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    february?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    march?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    april?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    may?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    june?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    july?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    august?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    september?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    october?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    november?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    december?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto
     */
    total?: number | null;
}

export function TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDtoFromJSON(json: any): TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto {
    return TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDtoFromJSONTyped(json, false);
}

export function TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'incometypenumber': !exists(json, 'incometypenumber') ? undefined : json['incometypenumber'],
        'incometype': !exists(json, 'incometype') ? undefined : json['incometype'],
        'incometypecode': !exists(json, 'incometypecode') ? undefined : json['incometypecode'],
        'categorynumber': !exists(json, 'categorynumber') ? undefined : json['categorynumber'],
        'categoryname': !exists(json, 'categoryname') ? undefined : json['categoryname'],
        'categorycode': !exists(json, 'categorycode') ? undefined : json['categorycode'],
        'january': !exists(json, 'january') ? undefined : json['january'],
        'february': !exists(json, 'february') ? undefined : json['february'],
        'march': !exists(json, 'march') ? undefined : json['march'],
        'april': !exists(json, 'april') ? undefined : json['april'],
        'may': !exists(json, 'may') ? undefined : json['may'],
        'june': !exists(json, 'june') ? undefined : json['june'],
        'july': !exists(json, 'july') ? undefined : json['july'],
        'august': !exists(json, 'august') ? undefined : json['august'],
        'september': !exists(json, 'september') ? undefined : json['september'],
        'october': !exists(json, 'october') ? undefined : json['october'],
        'november': !exists(json, 'november') ? undefined : json['november'],
        'december': !exists(json, 'december') ? undefined : json['december'],
        'total': !exists(json, 'total') ? undefined : json['total'],
    };
}

export function TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDtoToJSON(value?: TrWebCommonsExternalPortalsApiModelsIncomePlanWithholdingTaxIncomeTypeDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'incometypenumber': value.incometypenumber,
        'incometype': value.incometype,
        'incometypecode': value.incometypecode,
        'categorynumber': value.categorynumber,
        'categoryname': value.categoryname,
        'categorycode': value.categorycode,
        'january': value.january,
        'february': value.february,
        'march': value.march,
        'april': value.april,
        'may': value.may,
        'june': value.june,
        'july': value.july,
        'august': value.august,
        'september': value.september,
        'october': value.october,
        'november': value.november,
        'december': value.december,
        'total': value.total,
    };
}


