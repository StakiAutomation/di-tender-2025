/* tslint:disable */
/* eslint-disable */
/**
 * Vinnuvélauppfletting
 * Vefþjónusta til þess að fletta upp á vinnuvélum.
 *
 * The version of the OpenAPI document: v1
 * Contact: ut@vinnueftirlit.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    MachineTypeDto,
    MachineTypeDtoFromJSON,
    MachineTypeDtoToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
    ValidationProblemDetails,
    ValidationProblemDetailsFromJSON,
    ValidationProblemDetailsToJSON,
} from '../models';

export interface ApiMachineTypesGetRequest {
    xCorrelationID?: string;
}

export interface ApiMachineTypesTypeByRegistrationNumberGetRequest {
    registrationNumber?: string;
    xCorrelationID?: string;
}

/**
 * 
 */
export class MachineTypesApi extends runtime.BaseAPI {

    /**
     */
    async apiMachineTypesGetRaw(requestParameters: ApiMachineTypesGetRequest): Promise<runtime.ApiResponse<Array<MachineTypeDto>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xCorrelationID !== undefined && requestParameters.xCorrelationID !== null) {
            headerParameters['X-Correlation-ID'] = String(requestParameters.xCorrelationID);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/MachineTypes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MachineTypeDtoFromJSON));
    }

    /**
     */
    async apiMachineTypesGet(requestParameters: ApiMachineTypesGetRequest): Promise<Array<MachineTypeDto>> {
        const response = await this.apiMachineTypesGetRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async apiMachineTypesTypeByRegistrationNumberGetRaw(requestParameters: ApiMachineTypesTypeByRegistrationNumberGetRequest): Promise<runtime.ApiResponse<MachineTypeDto>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.registrationNumber !== undefined) {
            queryParameters['RegistrationNumber'] = requestParameters.registrationNumber;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xCorrelationID !== undefined && requestParameters.xCorrelationID !== null) {
            headerParameters['X-Correlation-ID'] = String(requestParameters.xCorrelationID);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/MachineTypes/TypeByRegistrationNumber`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MachineTypeDtoFromJSON(jsonValue));
    }

    /**
     */
    async apiMachineTypesTypeByRegistrationNumberGet(requestParameters: ApiMachineTypesTypeByRegistrationNumberGetRequest): Promise<MachineTypeDto> {
        const response = await this.apiMachineTypesTypeByRegistrationNumberGetRaw(requestParameters);
        return await response.value();
    }

}
