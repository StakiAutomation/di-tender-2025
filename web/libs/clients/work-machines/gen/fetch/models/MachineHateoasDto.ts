/* tslint:disable */
/* eslint-disable */
/**
 * Vinnuvélauppfletting
 * Vefþjónusta til þess að fletta upp á vinnuvélum.
 *
 * The version of the OpenAPI document: v1
 * Contact: ut@vinnueftirlit.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LabelDto,
    LabelDtoFromJSON,
    LabelDtoFromJSONTyped,
    LabelDtoToJSON,
    LinkDtoWithDisplayTitle,
    LinkDtoWithDisplayTitleFromJSON,
    LinkDtoWithDisplayTitleFromJSONTyped,
    LinkDtoWithDisplayTitleToJSON,
} from './';

/**
 * 
 * @export
 * @interface MachineHateoasDto
 */
export interface MachineHateoasDto {
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    registrationNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    status?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    category?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    subCategory?: string | null;
    /**
     * 
     * @type {number}
     * @memberof MachineHateoasDto
     */
    productionYear?: number;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    registrationDate?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    ownerNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    productionNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    productionCountry?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    licensePlateNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    importer?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    insurer?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    ownerName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    ownerNationalId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    ownerAddress?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    ownerPostcode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    supervisorName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    supervisorNationalId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    supervisorAddress?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    supervisorPostcode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineHateoasDto
     */
    dateLastInspection?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MachineHateoasDto
     */
    paymentRequiredForOwnerChange?: boolean;
    /**
     * 
     * @type {Array<LinkDtoWithDisplayTitle>}
     * @memberof MachineHateoasDto
     */
    links?: Array<LinkDtoWithDisplayTitle> | null;
    /**
     * 
     * @type {Array<LabelDto>}
     * @memberof MachineHateoasDto
     */
    labels?: Array<LabelDto> | null;
}

export function MachineHateoasDtoFromJSON(json: any): MachineHateoasDto {
    return MachineHateoasDtoFromJSONTyped(json, false);
}

export function MachineHateoasDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MachineHateoasDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'registrationNumber': !exists(json, 'registrationNumber') ? undefined : json['registrationNumber'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'subCategory': !exists(json, 'subCategory') ? undefined : json['subCategory'],
        'productionYear': !exists(json, 'productionYear') ? undefined : json['productionYear'],
        'registrationDate': !exists(json, 'registrationDate') ? undefined : json['registrationDate'],
        'ownerNumber': !exists(json, 'ownerNumber') ? undefined : json['ownerNumber'],
        'productionNumber': !exists(json, 'productionNumber') ? undefined : json['productionNumber'],
        'productionCountry': !exists(json, 'productionCountry') ? undefined : json['productionCountry'],
        'licensePlateNumber': !exists(json, 'licensePlateNumber') ? undefined : json['licensePlateNumber'],
        'importer': !exists(json, 'importer') ? undefined : json['importer'],
        'insurer': !exists(json, 'insurer') ? undefined : json['insurer'],
        'ownerName': !exists(json, 'ownerName') ? undefined : json['ownerName'],
        'ownerNationalId': !exists(json, 'ownerNationalId') ? undefined : json['ownerNationalId'],
        'ownerAddress': !exists(json, 'ownerAddress') ? undefined : json['ownerAddress'],
        'ownerPostcode': !exists(json, 'ownerPostcode') ? undefined : json['ownerPostcode'],
        'supervisorName': !exists(json, 'supervisorName') ? undefined : json['supervisorName'],
        'supervisorNationalId': !exists(json, 'supervisorNationalId') ? undefined : json['supervisorNationalId'],
        'supervisorAddress': !exists(json, 'supervisorAddress') ? undefined : json['supervisorAddress'],
        'supervisorPostcode': !exists(json, 'supervisorPostcode') ? undefined : json['supervisorPostcode'],
        'dateLastInspection': !exists(json, 'dateLastInspection') ? undefined : json['dateLastInspection'],
        'paymentRequiredForOwnerChange': !exists(json, 'paymentRequiredForOwnerChange') ? undefined : json['paymentRequiredForOwnerChange'],
        'links': !exists(json, '_links') ? undefined : (json['_links'] === null ? null : (json['_links'] as Array<any>).map(LinkDtoWithDisplayTitleFromJSON)),
        'labels': !exists(json, '_labels') ? undefined : (json['_labels'] === null ? null : (json['_labels'] as Array<any>).map(LabelDtoFromJSON)),
    };
}

export function MachineHateoasDtoToJSON(value?: MachineHateoasDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'registrationNumber': value.registrationNumber,
        'type': value.type,
        'status': value.status,
        'category': value.category,
        'subCategory': value.subCategory,
        'productionYear': value.productionYear,
        'registrationDate': value.registrationDate,
        'ownerNumber': value.ownerNumber,
        'productionNumber': value.productionNumber,
        'productionCountry': value.productionCountry,
        'licensePlateNumber': value.licensePlateNumber,
        'importer': value.importer,
        'insurer': value.insurer,
        'ownerName': value.ownerName,
        'ownerNationalId': value.ownerNationalId,
        'ownerAddress': value.ownerAddress,
        'ownerPostcode': value.ownerPostcode,
        'supervisorName': value.supervisorName,
        'supervisorNationalId': value.supervisorNationalId,
        'supervisorAddress': value.supervisorAddress,
        'supervisorPostcode': value.supervisorPostcode,
        'dateLastInspection': value.dateLastInspection,
        'paymentRequiredForOwnerChange': value.paymentRequiredForOwnerChange,
        '_links': value.links === undefined ? undefined : (value.links === null ? null : (value.links as Array<any>).map(LinkDtoWithDisplayTitleToJSON)),
        '_labels': value.labels === undefined ? undefined : (value.labels === null ? null : (value.labels as Array<any>).map(LabelDtoToJSON)),
    };
}


