/* tslint:disable */
/* eslint-disable */
/**
 * Vinnuvélauppfletting
 * Vefþjónusta til þess að fletta upp á vinnuvélum.
 *
 * The version of the OpenAPI document: v1
 * Contact: ut@vinnueftirlit.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PersonDto,
    PersonDtoFromJSON,
    PersonDtoFromJSONTyped,
    PersonDtoToJSON,
    PlateSize,
    PlateSizeFromJSON,
    PlateSizeFromJSONTyped,
    PlateSizeToJSON,
} from './';

/**
 * 
 * @export
 * @interface MachineRegistrationCreateDto
 */
export interface MachineRegistrationCreateDto {
    /**
     * 
     * @type {PersonDto}
     * @memberof MachineRegistrationCreateDto
     */
    importer: PersonDto;
    /**
     * 
     * @type {PersonDto}
     * @memberof MachineRegistrationCreateDto
     */
    owner?: PersonDto;
    /**
     * 
     * @type {PersonDto}
     * @memberof MachineRegistrationCreateDto
     */
    supervisor?: PersonDto;
    /**
     * 
     * @type {boolean}
     * @memberof MachineRegistrationCreateDto
     */
    isPreRegistered: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MachineRegistrationCreateDto
     */
    isCECertified: boolean;
    /**
     * 
     * @type {string}
     * @memberof MachineRegistrationCreateDto
     */
    countryOfProduction: string;
    /**
     * 
     * @type {string}
     * @memberof MachineRegistrationCreateDto
     */
    containerNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineRegistrationCreateDto
     */
    locationOfMachine?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MachineRegistrationCreateDto
     */
    serialNumber: string;
    /**
     * 
     * @type {number}
     * @memberof MachineRegistrationCreateDto
     */
    yearOfProduction: number;
    /**
     * 
     * @type {boolean}
     * @memberof MachineRegistrationCreateDto
     */
    used: boolean;
    /**
     * 
     * @type {string}
     * @memberof MachineRegistrationCreateDto
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof MachineRegistrationCreateDto
     */
    model: string;
    /**
     * 
     * @type {string}
     * @memberof MachineRegistrationCreateDto
     */
    parentCategory: string;
    /**
     * 
     * @type {string}
     * @memberof MachineRegistrationCreateDto
     */
    subCategory?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MachineRegistrationCreateDto
     */
    streetRegistrationRequested: boolean;
    /**
     * 
     * @type {PlateSize}
     * @memberof MachineRegistrationCreateDto
     */
    plateSize?: PlateSize;
    /**
     * 
     * @type {string}
     * @memberof MachineRegistrationCreateDto
     */
    technicalInfo: string;
}

export function MachineRegistrationCreateDtoFromJSON(json: any): MachineRegistrationCreateDto {
    return MachineRegistrationCreateDtoFromJSONTyped(json, false);
}

export function MachineRegistrationCreateDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MachineRegistrationCreateDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'importer': PersonDtoFromJSON(json['importer']),
        'owner': !exists(json, 'owner') ? undefined : PersonDtoFromJSON(json['owner']),
        'supervisor': !exists(json, 'supervisor') ? undefined : PersonDtoFromJSON(json['supervisor']),
        'isPreRegistered': json['isPreRegistered'],
        'isCECertified': json['isCECertified'],
        'countryOfProduction': json['countryOfProduction'],
        'containerNumber': !exists(json, 'containerNumber') ? undefined : json['containerNumber'],
        'locationOfMachine': !exists(json, 'locationOfMachine') ? undefined : json['locationOfMachine'],
        'serialNumber': json['serialNumber'],
        'yearOfProduction': json['yearOfProduction'],
        'used': json['used'],
        'type': json['type'],
        'model': json['model'],
        'parentCategory': json['parentCategory'],
        'subCategory': !exists(json, 'subCategory') ? undefined : json['subCategory'],
        'streetRegistrationRequested': json['streetRegistrationRequested'],
        'plateSize': !exists(json, 'plateSize') ? undefined : PlateSizeFromJSON(json['plateSize']),
        'technicalInfo': json['technicalInfo'],
    };
}

export function MachineRegistrationCreateDtoToJSON(value?: MachineRegistrationCreateDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'importer': PersonDtoToJSON(value.importer),
        'owner': PersonDtoToJSON(value.owner),
        'supervisor': PersonDtoToJSON(value.supervisor),
        'isPreRegistered': value.isPreRegistered,
        'isCECertified': value.isCECertified,
        'countryOfProduction': value.countryOfProduction,
        'containerNumber': value.containerNumber,
        'locationOfMachine': value.locationOfMachine,
        'serialNumber': value.serialNumber,
        'yearOfProduction': value.yearOfProduction,
        'used': value.used,
        'type': value.type,
        'model': value.model,
        'parentCategory': value.parentCategory,
        'subCategory': value.subCategory,
        'streetRegistrationRequested': value.streetRegistrationRequested,
        'plateSize': PlateSizeToJSON(value.plateSize),
        'technicalInfo': value.technicalInfo,
    };
}


