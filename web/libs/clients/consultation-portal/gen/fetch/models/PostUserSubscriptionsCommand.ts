/* tslint:disable */
/* eslint-disable */
/**
 * Samradsgatt.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CaseSubscriptionCommand,
    CaseSubscriptionCommandFromJSON,
    CaseSubscriptionCommandFromJSONTyped,
    CaseSubscriptionCommandToJSON,
    SubscriptionCommand,
    SubscriptionCommandFromJSON,
    SubscriptionCommandFromJSONTyped,
    SubscriptionCommandToJSON,
    SubscriptionType,
    SubscriptionTypeFromJSON,
    SubscriptionTypeFromJSONTyped,
    SubscriptionTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface PostUserSubscriptionsCommand
 */
export interface PostUserSubscriptionsCommand {
    /**
     * 
     * @type {boolean}
     * @memberof PostUserSubscriptionsCommand
     */
    subscribeToAll?: boolean;
    /**
     * 
     * @type {SubscriptionType}
     * @memberof PostUserSubscriptionsCommand
     */
    subscribeToAllType?: SubscriptionType;
    /**
     * 
     * @type {Array<CaseSubscriptionCommand>}
     * @memberof PostUserSubscriptionsCommand
     */
    caseIds?: Array<CaseSubscriptionCommand> | null;
    /**
     * 
     * @type {Array<SubscriptionCommand>}
     * @memberof PostUserSubscriptionsCommand
     */
    institutionIds?: Array<SubscriptionCommand> | null;
    /**
     * 
     * @type {Array<SubscriptionCommand>}
     * @memberof PostUserSubscriptionsCommand
     */
    policyAreaIds?: Array<SubscriptionCommand> | null;
}

export function PostUserSubscriptionsCommandFromJSON(json: any): PostUserSubscriptionsCommand {
    return PostUserSubscriptionsCommandFromJSONTyped(json, false);
}

export function PostUserSubscriptionsCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostUserSubscriptionsCommand {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'subscribeToAll': !exists(json, 'subscribeToAll') ? undefined : json['subscribeToAll'],
        'subscribeToAllType': !exists(json, 'subscribeToAllType') ? undefined : SubscriptionTypeFromJSON(json['subscribeToAllType']),
        'caseIds': !exists(json, 'caseIds') ? undefined : (json['caseIds'] === null ? null : (json['caseIds'] as Array<any>).map(CaseSubscriptionCommandFromJSON)),
        'institutionIds': !exists(json, 'institutionIds') ? undefined : (json['institutionIds'] === null ? null : (json['institutionIds'] as Array<any>).map(SubscriptionCommandFromJSON)),
        'policyAreaIds': !exists(json, 'policyAreaIds') ? undefined : (json['policyAreaIds'] === null ? null : (json['policyAreaIds'] as Array<any>).map(SubscriptionCommandFromJSON)),
    };
}

export function PostUserSubscriptionsCommandToJSON(value?: PostUserSubscriptionsCommand | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'subscribeToAll': value.subscribeToAll,
        'subscribeToAllType': SubscriptionTypeToJSON(value.subscribeToAllType),
        'caseIds': value.caseIds === undefined ? undefined : (value.caseIds === null ? null : (value.caseIds as Array<any>).map(CaseSubscriptionCommandToJSON)),
        'institutionIds': value.institutionIds === undefined ? undefined : (value.institutionIds === null ? null : (value.institutionIds as Array<any>).map(SubscriptionCommandToJSON)),
        'policyAreaIds': value.policyAreaIds === undefined ? undefined : (value.policyAreaIds === null ? null : (value.policyAreaIds as Array<any>).map(SubscriptionCommandToJSON)),
    };
}


