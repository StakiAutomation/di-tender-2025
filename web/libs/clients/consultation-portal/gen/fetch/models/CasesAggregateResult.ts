/* tslint:disable */
/* eslint-disable */
/**
 * Samradsgatt.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CaseItemResult,
    CaseItemResultFromJSON,
    CaseItemResultFromJSONTyped,
    CaseItemResultToJSON,
} from './';

/**
 * 
 * @export
 * @interface CasesAggregateResult
 */
export interface CasesAggregateResult {
    /**
     * 
     * @type {number}
     * @memberof CasesAggregateResult
     */
    total?: number;
    /**
     * 
     * @type {Array<CaseItemResult>}
     * @memberof CasesAggregateResult
     */
    cases?: Array<CaseItemResult> | null;
    /**
     * 
     * @type {{ [key: string]: { [key: string]: number; }; }}
     * @memberof CasesAggregateResult
     */
    filterGroups?: { [key: string]: { [key: string]: number; }; } | null;
}

export function CasesAggregateResultFromJSON(json: any): CasesAggregateResult {
    return CasesAggregateResultFromJSONTyped(json, false);
}

export function CasesAggregateResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): CasesAggregateResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total': !exists(json, 'total') ? undefined : json['total'],
        'cases': !exists(json, 'cases') ? undefined : (json['cases'] === null ? null : (json['cases'] as Array<any>).map(CaseItemResultFromJSON)),
        'filterGroups': !exists(json, 'filterGroups') ? undefined : json['filterGroups'],
    };
}

export function CasesAggregateResultToJSON(value?: CasesAggregateResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total': value.total,
        'cases': value.cases === undefined ? undefined : (value.cases === null ? null : (value.cases as Array<any>).map(CaseItemResultToJSON)),
        'filterGroups': value.filterGroups,
    };
}


