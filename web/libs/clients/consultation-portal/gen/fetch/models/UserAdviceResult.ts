/* tslint:disable */
/* eslint-disable */
/**
 * Samradsgatt.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DocumentInfoResult,
    DocumentInfoResultFromJSON,
    DocumentInfoResultFromJSONTyped,
    DocumentInfoResultToJSON,
    UserAdviceCaseResult,
    UserAdviceCaseResultFromJSON,
    UserAdviceCaseResultFromJSONTyped,
    UserAdviceCaseResultToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserAdviceResult
 */
export interface UserAdviceResult {
    /**
     * 
     * @type {string}
     * @memberof UserAdviceResult
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof UserAdviceResult
     */
    caseId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserAdviceResult
     */
    participantName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserAdviceResult
     */
    participantEmail?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserAdviceResult
     */
    content?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof UserAdviceResult
     */
    created?: Date;
    /**
     * 
     * @type {UserAdviceCaseResult}
     * @memberof UserAdviceResult
     */
    _case?: UserAdviceCaseResult;
    /**
     * 
     * @type {Array<DocumentInfoResult>}
     * @memberof UserAdviceResult
     */
    adviceDocuments?: Array<DocumentInfoResult> | null;
}

export function UserAdviceResultFromJSON(json: any): UserAdviceResult {
    return UserAdviceResultFromJSONTyped(json, false);
}

export function UserAdviceResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserAdviceResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'caseId': !exists(json, 'caseId') ? undefined : json['caseId'],
        'participantName': !exists(json, 'participantName') ? undefined : json['participantName'],
        'participantEmail': !exists(json, 'participantEmail') ? undefined : json['participantEmail'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        '_case': !exists(json, 'case') ? undefined : UserAdviceCaseResultFromJSON(json['case']),
        'adviceDocuments': !exists(json, 'adviceDocuments') ? undefined : (json['adviceDocuments'] === null ? null : (json['adviceDocuments'] as Array<any>).map(DocumentInfoResultFromJSON)),
    };
}

export function UserAdviceResultToJSON(value?: UserAdviceResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'caseId': value.caseId,
        'participantName': value.participantName,
        'participantEmail': value.participantEmail,
        'content': value.content,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'case': UserAdviceCaseResultToJSON(value._case),
        'adviceDocuments': value.adviceDocuments === undefined ? undefined : (value.adviceDocuments === null ? null : (value.adviceDocuments as Array<any>).map(DocumentInfoResultToJSON)),
    };
}


