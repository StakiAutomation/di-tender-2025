/* tslint:disable */
/* eslint-disable */
/**
 * Samradsgatt.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CaseStakeholderResult,
    CaseStakeholderResultFromJSON,
    CaseStakeholderResultFromJSONTyped,
    CaseStakeholderResultToJSON,
    DocumentInfoResult,
    DocumentInfoResultFromJSON,
    DocumentInfoResultFromJSONTyped,
    DocumentInfoResultToJSON,
    RelatedCaseResult,
    RelatedCaseResultFromJSON,
    RelatedCaseResultFromJSONTyped,
    RelatedCaseResultToJSON,
} from './';

/**
 * 
 * @export
 * @interface CaseResult
 */
export interface CaseResult {
    /**
     * 
     * @type {number}
     * @memberof CaseResult
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    caseNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    shortDescription?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    detailedDescription?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    contactName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    contactEmail?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    statusName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    institutionName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    typeName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    policyAreaName?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CaseResult
     */
    processBegins?: Date;
    /**
     * 
     * @type {Date}
     * @memberof CaseResult
     */
    processEnds?: Date;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    announcementText?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CaseResult
     */
    summaryDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    summaryText?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    summaryLink?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    summaryDocumentId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CaseResult
     */
    adviceCount?: number;
    /**
     * 
     * @type {number}
     * @memberof CaseResult
     */
    advicePublishTypeId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CaseResult
     */
    allowUsersToSendPrivateAdvices?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    advicePublishTypeName?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CaseResult
     */
    created?: Date;
    /**
     * 
     * @type {Date}
     * @memberof CaseResult
     */
    changed?: Date;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    oldInstitutionName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CaseResult
     */
    extraStakeholderList?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CaseResult
     */
    publishOnWeb?: Date;
    /**
     * 
     * @type {Array<CaseStakeholderResult>}
     * @memberof CaseResult
     */
    stakeholders?: Array<CaseStakeholderResult> | null;
    /**
     * 
     * @type {Array<DocumentInfoResult>}
     * @memberof CaseResult
     */
    documents?: Array<DocumentInfoResult> | null;
    /**
     * 
     * @type {Array<DocumentInfoResult>}
     * @memberof CaseResult
     */
    additionalDocuments?: Array<DocumentInfoResult> | null;
    /**
     * 
     * @type {Array<RelatedCaseResult>}
     * @memberof CaseResult
     */
    relatedCases?: Array<RelatedCaseResult> | null;
}

export function CaseResultFromJSON(json: any): CaseResult {
    return CaseResultFromJSONTyped(json, false);
}

export function CaseResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): CaseResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'caseNumber': !exists(json, 'caseNumber') ? undefined : json['caseNumber'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'shortDescription': !exists(json, 'shortDescription') ? undefined : json['shortDescription'],
        'detailedDescription': !exists(json, 'detailedDescription') ? undefined : json['detailedDescription'],
        'contactName': !exists(json, 'contactName') ? undefined : json['contactName'],
        'contactEmail': !exists(json, 'contactEmail') ? undefined : json['contactEmail'],
        'statusName': !exists(json, 'statusName') ? undefined : json['statusName'],
        'institutionName': !exists(json, 'institutionName') ? undefined : json['institutionName'],
        'typeName': !exists(json, 'typeName') ? undefined : json['typeName'],
        'policyAreaName': !exists(json, 'policyAreaName') ? undefined : json['policyAreaName'],
        'processBegins': !exists(json, 'processBegins') ? undefined : (new Date(json['processBegins'])),
        'processEnds': !exists(json, 'processEnds') ? undefined : (new Date(json['processEnds'])),
        'announcementText': !exists(json, 'announcementText') ? undefined : json['announcementText'],
        'summaryDate': !exists(json, 'summaryDate') ? undefined : (json['summaryDate'] === null ? null : new Date(json['summaryDate'])),
        'summaryText': !exists(json, 'summaryText') ? undefined : json['summaryText'],
        'summaryLink': !exists(json, 'summaryLink') ? undefined : json['summaryLink'],
        'summaryDocumentId': !exists(json, 'summaryDocumentId') ? undefined : json['summaryDocumentId'],
        'adviceCount': !exists(json, 'adviceCount') ? undefined : json['adviceCount'],
        'advicePublishTypeId': !exists(json, 'advicePublishTypeId') ? undefined : json['advicePublishTypeId'],
        'allowUsersToSendPrivateAdvices': !exists(json, 'allowUsersToSendPrivateAdvices') ? undefined : json['allowUsersToSendPrivateAdvices'],
        'advicePublishTypeName': !exists(json, 'advicePublishTypeName') ? undefined : json['advicePublishTypeName'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'changed': !exists(json, 'changed') ? undefined : (new Date(json['changed'])),
        'oldInstitutionName': !exists(json, 'oldInstitutionName') ? undefined : json['oldInstitutionName'],
        'extraStakeholderList': !exists(json, 'extraStakeholderList') ? undefined : json['extraStakeholderList'],
        'publishOnWeb': !exists(json, 'publishOnWeb') ? undefined : (new Date(json['publishOnWeb'])),
        'stakeholders': !exists(json, 'stakeholders') ? undefined : (json['stakeholders'] === null ? null : (json['stakeholders'] as Array<any>).map(CaseStakeholderResultFromJSON)),
        'documents': !exists(json, 'documents') ? undefined : (json['documents'] === null ? null : (json['documents'] as Array<any>).map(DocumentInfoResultFromJSON)),
        'additionalDocuments': !exists(json, 'additionalDocuments') ? undefined : (json['additionalDocuments'] === null ? null : (json['additionalDocuments'] as Array<any>).map(DocumentInfoResultFromJSON)),
        'relatedCases': !exists(json, 'relatedCases') ? undefined : (json['relatedCases'] === null ? null : (json['relatedCases'] as Array<any>).map(RelatedCaseResultFromJSON)),
    };
}

export function CaseResultToJSON(value?: CaseResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'caseNumber': value.caseNumber,
        'name': value.name,
        'shortDescription': value.shortDescription,
        'detailedDescription': value.detailedDescription,
        'contactName': value.contactName,
        'contactEmail': value.contactEmail,
        'statusName': value.statusName,
        'institutionName': value.institutionName,
        'typeName': value.typeName,
        'policyAreaName': value.policyAreaName,
        'processBegins': value.processBegins === undefined ? undefined : (value.processBegins.toISOString()),
        'processEnds': value.processEnds === undefined ? undefined : (value.processEnds.toISOString()),
        'announcementText': value.announcementText,
        'summaryDate': value.summaryDate === undefined ? undefined : (value.summaryDate === null ? null : value.summaryDate.toISOString()),
        'summaryText': value.summaryText,
        'summaryLink': value.summaryLink,
        'summaryDocumentId': value.summaryDocumentId,
        'adviceCount': value.adviceCount,
        'advicePublishTypeId': value.advicePublishTypeId,
        'allowUsersToSendPrivateAdvices': value.allowUsersToSendPrivateAdvices,
        'advicePublishTypeName': value.advicePublishTypeName,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'changed': value.changed === undefined ? undefined : (value.changed.toISOString()),
        'oldInstitutionName': value.oldInstitutionName,
        'extraStakeholderList': value.extraStakeholderList,
        'publishOnWeb': value.publishOnWeb === undefined ? undefined : (value.publishOnWeb.toISOString()),
        'stakeholders': value.stakeholders === undefined ? undefined : (value.stakeholders === null ? null : (value.stakeholders as Array<any>).map(CaseStakeholderResultToJSON)),
        'documents': value.documents === undefined ? undefined : (value.documents === null ? null : (value.documents as Array<any>).map(DocumentInfoResultToJSON)),
        'additionalDocuments': value.additionalDocuments === undefined ? undefined : (value.additionalDocuments === null ? null : (value.additionalDocuments as Array<any>).map(DocumentInfoResultToJSON)),
        'relatedCases': value.relatedCases === undefined ? undefined : (value.relatedCases === null ? null : (value.relatedCases as Array<any>).map(RelatedCaseResultToJSON)),
    };
}


