/* tslint:disable */
/* eslint-disable */
/**
 * Notification Service
 * Creates and stores notifications AND sends as mobile push notifications and emails
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RenderedNotificationDto
 */
export interface RenderedNotificationDto {
    /**
     * 
     * @type {number}
     * @memberof RenderedNotificationDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof RenderedNotificationDto
     */
    messageId: string;
    /**
     * 
     * @type {string}
     * @memberof RenderedNotificationDto
     */
    senderId: string;
    /**
     * 
     * @type {string}
     * @memberof RenderedNotificationDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof RenderedNotificationDto
     */
    externalBody: string;
    /**
     * 
     * @type {string}
     * @memberof RenderedNotificationDto
     */
    internalBody?: string;
    /**
     * 
     * @type {string}
     * @memberof RenderedNotificationDto
     */
    clickActionUrl?: string;
    /**
     * 
     * @type {Date}
     * @memberof RenderedNotificationDto
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof RenderedNotificationDto
     */
    updated: Date;
    /**
     * 
     * @type {boolean}
     * @memberof RenderedNotificationDto
     */
    read: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RenderedNotificationDto
     */
    seen: boolean;
}

export function RenderedNotificationDtoFromJSON(json: any): RenderedNotificationDto {
    return RenderedNotificationDtoFromJSONTyped(json, false);
}

export function RenderedNotificationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RenderedNotificationDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'messageId': json['messageId'],
        'senderId': json['senderId'],
        'title': json['title'],
        'externalBody': json['externalBody'],
        'internalBody': !exists(json, 'internalBody') ? undefined : json['internalBody'],
        'clickActionUrl': !exists(json, 'clickActionUrl') ? undefined : json['clickActionUrl'],
        'created': (new Date(json['created'])),
        'updated': (new Date(json['updated'])),
        'read': json['read'],
        'seen': json['seen'],
    };
}

export function RenderedNotificationDtoToJSON(value?: RenderedNotificationDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'messageId': value.messageId,
        'senderId': value.senderId,
        'title': value.title,
        'externalBody': value.externalBody,
        'internalBody': value.internalBody,
        'clickActionUrl': value.clickActionUrl,
        'created': (value.created.toISOString()),
        'updated': (value.updated.toISOString()),
        'read': value.read,
        'seen': value.seen,
    };
}


