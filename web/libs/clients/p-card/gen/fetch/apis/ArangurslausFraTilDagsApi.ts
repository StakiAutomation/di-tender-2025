/* tslint:disable */
/* eslint-disable */
/**
 * Þjónustugátt starfskerfa sýslumanna
 * Rafrænn aðgengi að gögnum og aðgerðum starfskerfis sýslumanna
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AranuslausFraTilSvar,
    AranuslausFraTilSvarFromJSON,
    AranuslausFraTilSvarToJSON,
    AranuslausFratilFyrirspurn,
    AranuslausFratilFyrirspurnFromJSON,
    AranuslausFratilFyrirspurnToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

export interface ArangurslausFraTilDagsPostRequest {
    skilabod: AranuslausFratilFyrirspurn;
}

/**
 * 
 */
export class ArangurslausFraTilDagsApi extends runtime.BaseAPI {

    /**
     */
    async arangurslausFraTilDagsPostRaw(requestParameters: ArangurslausFraTilDagsPostRequest): Promise<runtime.ApiResponse<AranuslausFraTilSvar>> {
        if (requestParameters.skilabod === null || requestParameters.skilabod === undefined) {
            throw new runtime.RequiredError('skilabod','Required parameter requestParameters.skilabod was null or undefined when calling arangurslausFraTilDagsPost.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // JWT Token authentication
        }

        const response = await this.request({
            path: `/v1/ArangurslausFraTilDags`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AranuslausFratilFyrirspurnToJSON(requestParameters.skilabod),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AranuslausFraTilSvarFromJSON(jsonValue));
    }

    /**
     */
    async arangurslausFraTilDagsPost(requestParameters: ArangurslausFraTilDagsPostRequest): Promise<AranuslausFraTilSvar> {
        const response = await this.arangurslausFraTilDagsPostRaw(requestParameters);
        return await response.value();
    }

}
