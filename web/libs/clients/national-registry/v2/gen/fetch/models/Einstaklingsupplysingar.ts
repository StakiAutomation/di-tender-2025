/* tslint:disable */
/* eslint-disable */
/**
 * Einstaklingur
 * The API retrieves information about individuals stored in the Icelandic registry.
 *
 * The version of the OpenAPI document: v1
 * Contact: skra@skra.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Heimilisfang,
    HeimilisfangFromJSON,
    HeimilisfangFromJSONTyped,
    HeimilisfangToJSON,
} from './';

/**
 * 
 * @export
 * @interface Einstaklingsupplysingar
 */
export interface Einstaklingsupplysingar {
    /**
     * NationalId
     * @type {string}
     * @memberof Einstaklingsupplysingar
     */
    kennitala: string;
    /**
     * Legal name
     * @type {string}
     * @memberof Einstaklingsupplysingar
     */
    nafn: string;
    /**
     * First name
     * @type {string}
     * @memberof Einstaklingsupplysingar
     */
    eiginnafn?: string | null;
    /**
     * Middle name
     * @type {string}
     * @memberof Einstaklingsupplysingar
     */
    millinafn?: string | null;
    /**
     * Surname
     * @type {string}
     * @memberof Einstaklingsupplysingar
     */
    kenninafn?: string | null;
    /**
     * Full name
     * @type {string}
     * @memberof Einstaklingsupplysingar
     */
    fulltNafn?: string | null;
    /**
     * Gender code - definition can be looked up using resources in "Lyklar"
     * @type {string}
     * @memberof Einstaklingsupplysingar
     */
    kynkodi: string;
    /**
     * Details can be found at: https://www.skra.is/thjonusta/einstaklingar/eg-i-thjodskra/bannmerking-aetlad-einstaklingum/
     * @type {boolean}
     * @memberof Einstaklingsupplysingar
     */
    bannmerking: boolean;
    /**
     * Date of birth
     * @type {Date}
     * @memberof Einstaklingsupplysingar
     */
    faedingardagur: Date;
    /**
     * Information about legal domicile
     * @type {Heimilisfang}
     * @memberof Einstaklingsupplysingar
     */
    logheimili?: Heimilisfang | null;
    /**
     * Information about residence
     * @type {Heimilisfang}
     * @memberof Einstaklingsupplysingar
     */
    adsetur?: Heimilisfang | null;
}

export function EinstaklingsupplysingarFromJSON(json: any): Einstaklingsupplysingar {
    return EinstaklingsupplysingarFromJSONTyped(json, false);
}

export function EinstaklingsupplysingarFromJSONTyped(json: any, ignoreDiscriminator: boolean): Einstaklingsupplysingar {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kennitala': json['kennitala'],
        'nafn': json['nafn'],
        'eiginnafn': !exists(json, 'eiginnafn') ? undefined : json['eiginnafn'],
        'millinafn': !exists(json, 'millinafn') ? undefined : json['millinafn'],
        'kenninafn': !exists(json, 'kenninafn') ? undefined : json['kenninafn'],
        'fulltNafn': !exists(json, 'fulltNafn') ? undefined : json['fulltNafn'],
        'kynkodi': json['kynkodi'],
        'bannmerking': json['bannmerking'],
        'faedingardagur': (new Date(json['faedingardagur'])),
        'logheimili': !exists(json, 'logheimili') ? undefined : HeimilisfangFromJSON(json['logheimili']),
        'adsetur': !exists(json, 'adsetur') ? undefined : HeimilisfangFromJSON(json['adsetur']),
    };
}

export function EinstaklingsupplysingarToJSON(value?: Einstaklingsupplysingar | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kennitala': value.kennitala,
        'nafn': value.nafn,
        'eiginnafn': value.eiginnafn,
        'millinafn': value.millinafn,
        'kenninafn': value.kenninafn,
        'fulltNafn': value.fulltNafn,
        'kynkodi': value.kynkodi,
        'bannmerking': value.bannmerking,
        'faedingardagur': (value.faedingardagur.toISOString()),
        'logheimili': HeimilisfangToJSON(value.logheimili),
        'adsetur': HeimilisfangToJSON(value.adsetur),
    };
}


