/* tslint:disable */
/* eslint-disable */
/**
 * Mi√∞lun API - V1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    EinstaklingurDTOAllt,
    EinstaklingurDTOAlltFromJSON,
    EinstaklingurDTOAlltToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

export interface MidlunV1GerviEinstaklingarKennitolurGetRequest {
    amount?: number;
}

export interface MidlunV1GerviEinstaklingarNationalIdGetRequest {
    nationalId: string;
    loghTengsl?: boolean;
    grunnAuka?: boolean;
    hjuskapur?: boolean;
    kyn?: boolean;
    rikisfang?: boolean;
    forsja?: boolean;
    faedStad?: boolean;
    latinn1?: boolean;
    latinn2?: boolean;
    nafn?: boolean;
    nyskraning?: boolean;
    logForeldrar?: boolean;
    tru?: boolean;
}

/**
 * 
 */
export class GerviEinstaklingarApi extends runtime.BaseAPI {

    /**
     */
    async midlunV1GerviEinstaklingarKennitolurGetRaw(requestParameters: MidlunV1GerviEinstaklingarKennitolurGetRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.amount !== undefined) {
            queryParameters['amount'] = requestParameters.amount;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/Midlun/v1/GerviEinstaklingar/kennitolur`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async midlunV1GerviEinstaklingarKennitolurGet(requestParameters: MidlunV1GerviEinstaklingarKennitolurGetRequest): Promise<void> {
        await this.midlunV1GerviEinstaklingarKennitolurGetRaw(requestParameters);
    }

    /**
     */
    async midlunV1GerviEinstaklingarNationalIdGetRaw(requestParameters: MidlunV1GerviEinstaklingarNationalIdGetRequest): Promise<runtime.ApiResponse<EinstaklingurDTOAllt>> {
        if (requestParameters.nationalId === null || requestParameters.nationalId === undefined) {
            throw new runtime.RequiredError('nationalId','Required parameter requestParameters.nationalId was null or undefined when calling midlunV1GerviEinstaklingarNationalIdGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.loghTengsl !== undefined) {
            queryParameters['LoghTengsl'] = requestParameters.loghTengsl;
        }

        if (requestParameters.grunnAuka !== undefined) {
            queryParameters['GrunnAuka'] = requestParameters.grunnAuka;
        }

        if (requestParameters.hjuskapur !== undefined) {
            queryParameters['Hjuskapur'] = requestParameters.hjuskapur;
        }

        if (requestParameters.kyn !== undefined) {
            queryParameters['Kyn'] = requestParameters.kyn;
        }

        if (requestParameters.rikisfang !== undefined) {
            queryParameters['Rikisfang'] = requestParameters.rikisfang;
        }

        if (requestParameters.forsja !== undefined) {
            queryParameters['Forsja'] = requestParameters.forsja;
        }

        if (requestParameters.faedStad !== undefined) {
            queryParameters['FaedStad'] = requestParameters.faedStad;
        }

        if (requestParameters.latinn1 !== undefined) {
            queryParameters['Latinn1'] = requestParameters.latinn1;
        }

        if (requestParameters.latinn2 !== undefined) {
            queryParameters['Latinn2'] = requestParameters.latinn2;
        }

        if (requestParameters.nafn !== undefined) {
            queryParameters['Nafn'] = requestParameters.nafn;
        }

        if (requestParameters.nyskraning !== undefined) {
            queryParameters['Nyskraning'] = requestParameters.nyskraning;
        }

        if (requestParameters.logForeldrar !== undefined) {
            queryParameters['LogForeldrar'] = requestParameters.logForeldrar;
        }

        if (requestParameters.tru !== undefined) {
            queryParameters['Tru'] = requestParameters.tru;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/Midlun/v1/GerviEinstaklingar/{nationalId}`.replace(`{${"nationalId"}}`, encodeURIComponent(String(requestParameters.nationalId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => EinstaklingurDTOAlltFromJSON(jsonValue));
    }

    /**
     */
    async midlunV1GerviEinstaklingarNationalIdGet(requestParameters: MidlunV1GerviEinstaklingarNationalIdGetRequest): Promise<EinstaklingurDTOAllt> {
        const response = await this.midlunV1GerviEinstaklingarNationalIdGetRaw(requestParameters);
        return await response.value();
    }

}
