/* tslint:disable */
/* eslint-disable */
/**
 * IslandIs.Skjalabirting
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MessageAction,
    MessageActionFromJSON,
    MessageActionFromJSONTyped,
    MessageActionToJSON,
} from './';

/**
 * 
 * @export
 * @interface DocumentDTO
 */
export interface DocumentDTO {
    /**
     * 
     * @type {string}
     * @memberof DocumentDTO
     */
    fileName?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDTO
     */
    fileType?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDTO
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDTO
     */
    htmlContent?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDTO
     */
    url?: string;
    /**
     * 
     * @type {Date}
     * @memberof DocumentDTO
     */
    publicationDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentDTO
     */
    bookmarked?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentDTO
     */
    archived?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DocumentDTO
     */
    senderName?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDTO
     */
    senderKennitala?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDTO
     */
    subject?: string;
    /**
     * 
     * @type {number}
     * @memberof DocumentDTO
     */
    categoryId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentDTO
     */
    urgent?: boolean;
    /**
     * 
     * @type {Array<MessageAction>}
     * @memberof DocumentDTO
     */
    actions?: Array<MessageAction>;
}

export function DocumentDTOFromJSON(json: any): DocumentDTO {
    return DocumentDTOFromJSONTyped(json, false);
}

export function DocumentDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'fileType': !exists(json, 'fileType') ? undefined : json['fileType'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'htmlContent': !exists(json, 'htmlContent') ? undefined : json['htmlContent'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'publicationDate': !exists(json, 'publicationDate') ? undefined : (new Date(json['publicationDate'])),
        'bookmarked': !exists(json, 'bookmarked') ? undefined : json['bookmarked'],
        'archived': !exists(json, 'archived') ? undefined : json['archived'],
        'senderName': !exists(json, 'senderName') ? undefined : json['senderName'],
        'senderKennitala': !exists(json, 'senderKennitala') ? undefined : json['senderKennitala'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'categoryId': !exists(json, 'categoryId') ? undefined : json['categoryId'],
        'urgent': !exists(json, 'urgent') ? undefined : json['urgent'],
        'actions': !exists(json, 'actions') ? undefined : ((json['actions'] as Array<any>).map(MessageActionFromJSON)),
    };
}

export function DocumentDTOToJSON(value?: DocumentDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fileName': value.fileName,
        'fileType': value.fileType,
        'content': value.content,
        'htmlContent': value.htmlContent,
        'url': value.url,
        'publicationDate': value.publicationDate === undefined ? undefined : (value.publicationDate.toISOString()),
        'bookmarked': value.bookmarked,
        'archived': value.archived,
        'senderName': value.senderName,
        'senderKennitala': value.senderKennitala,
        'subject': value.subject,
        'categoryId': value.categoryId,
        'urgent': value.urgent,
        'actions': value.actions === undefined ? undefined : ((value.actions as Array<any>).map(MessageActionToJSON)),
    };
}


