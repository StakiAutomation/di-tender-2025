/* tslint:disable */
/* eslint-disable */
/**
 * IslandIs.Skjalabirting
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentInfoDTO
 */
export interface DocumentInfoDTO {
    /**
     * 
     * @type {string}
     * @memberof DocumentInfoDTO
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof DocumentInfoDTO
     */
    documentDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DocumentInfoDTO
     */
    publicationDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof DocumentInfoDTO
     */
    senderKennitala?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentInfoDTO
     */
    senderName?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentInfoDTO
     */
    subject?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentInfoDTO
     */
    categoryId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentInfoDTO
     */
    opened?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentInfoDTO
     */
    withdrawn?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DocumentInfoDTO
     */
    withdrawnReason?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentInfoDTO
     */
    minumumAuthenticationType?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentInfoDTO
     */
    bookmarked?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DocumentInfoDTO
     */
    fileType?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentInfoDTO
     */
    urgent?: boolean;
}

export function DocumentInfoDTOFromJSON(json: any): DocumentInfoDTO {
    return DocumentInfoDTOFromJSONTyped(json, false);
}

export function DocumentInfoDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentInfoDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'documentDate': !exists(json, 'documentDate') ? undefined : (new Date(json['documentDate'])),
        'publicationDate': !exists(json, 'publicationDate') ? undefined : (new Date(json['publicationDate'])),
        'senderKennitala': !exists(json, 'senderKennitala') ? undefined : json['senderKennitala'],
        'senderName': !exists(json, 'senderName') ? undefined : json['senderName'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'categoryId': !exists(json, 'categoryId') ? undefined : json['categoryId'],
        'opened': !exists(json, 'opened') ? undefined : json['opened'],
        'withdrawn': !exists(json, 'withdrawn') ? undefined : json['withdrawn'],
        'withdrawnReason': !exists(json, 'withdrawnReason') ? undefined : json['withdrawnReason'],
        'minumumAuthenticationType': !exists(json, 'minumumAuthenticationType') ? undefined : json['minumumAuthenticationType'],
        'bookmarked': !exists(json, 'bookmarked') ? undefined : json['bookmarked'],
        'fileType': !exists(json, 'fileType') ? undefined : json['fileType'],
        'urgent': !exists(json, 'urgent') ? undefined : json['urgent'],
    };
}

export function DocumentInfoDTOToJSON(value?: DocumentInfoDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'documentDate': value.documentDate === undefined ? undefined : (value.documentDate.toISOString()),
        'publicationDate': value.publicationDate === undefined ? undefined : (value.publicationDate.toISOString()),
        'senderKennitala': value.senderKennitala,
        'senderName': value.senderName,
        'subject': value.subject,
        'categoryId': value.categoryId,
        'opened': value.opened,
        'withdrawn': value.withdrawn,
        'withdrawnReason': value.withdrawnReason,
        'minumumAuthenticationType': value.minumumAuthenticationType,
        'bookmarked': value.bookmarked,
        'fileType': value.fileType,
        'urgent': value.urgent,
    };
}


