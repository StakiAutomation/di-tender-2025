/* tslint:disable */
/* eslint-disable */
/**
 * IslandIs.Skjalabirting
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DocumentInfoDTO,
    DocumentInfoDTOFromJSON,
    DocumentInfoDTOFromJSONTyped,
    DocumentInfoDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface MessagesListView
 */
export interface MessagesListView {
    /**
     * 
     * @type {Array<DocumentInfoDTO>}
     * @memberof MessagesListView
     */
    messages?: Array<DocumentInfoDTO>;
    /**
     * 
     * @type {number}
     * @memberof MessagesListView
     */
    unreadCount?: number;
    /**
     * 
     * @type {number}
     * @memberof MessagesListView
     */
    totalCount?: number;
}

export function MessagesListViewFromJSON(json: any): MessagesListView {
    return MessagesListViewFromJSONTyped(json, false);
}

export function MessagesListViewFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessagesListView {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'messages': !exists(json, 'messages') ? undefined : ((json['messages'] as Array<any>).map(DocumentInfoDTOFromJSON)),
        'unreadCount': !exists(json, 'unreadCount') ? undefined : json['unreadCount'],
        'totalCount': !exists(json, 'totalCount') ? undefined : json['totalCount'],
    };
}

export function MessagesListViewToJSON(value?: MessagesListView | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'messages': value.messages === undefined ? undefined : ((value.messages as Array<any>).map(DocumentInfoDTOToJSON)),
        'unreadCount': value.unreadCount,
        'totalCount': value.totalCount,
    };
}


