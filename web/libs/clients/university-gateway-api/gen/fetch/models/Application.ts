/* tslint:disable */
/* eslint-disable */
/**
 * University Gateway
 * API for communication between island.is application system and university gateway DB, and between university gateway DB and universities system (MySchool and Ugla)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Application
 */
export interface Application {
    /**
     * Application ID, should be the same application GUID that is used in island.is application system
     * @type {string}
     * @memberof Application
     */
    id: string;
    /**
     * External ID for the application (from University)
     * @type {string}
     * @memberof Application
     */
    externalId?: string;
    /**
     * Applicant national id
     * @type {string}
     * @memberof Application
     */
    nationalId: string;
    /**
     * University ID
     * @type {string}
     * @memberof Application
     */
    universityId: string;
    /**
     * Program ID
     * @type {string}
     * @memberof Application
     */
    programId: string;
    /**
     * The mode of delivery selected in the application
     * @type {string}
     * @memberof Application
     */
    programModeOfDelivery: ApplicationProgramModeOfDeliveryEnum;
    /**
     * Application status
     * @type {string}
     * @memberof Application
     */
    status: ApplicationStatusEnum;
}

export function ApplicationFromJSON(json: any): Application {
    return ApplicationFromJSONTyped(json, false);
}

export function ApplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Application {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'externalId': !exists(json, 'externalId') ? undefined : json['externalId'],
        'nationalId': json['nationalId'],
        'universityId': json['universityId'],
        'programId': json['programId'],
        'programModeOfDelivery': json['programModeOfDelivery'],
        'status': json['status'],
    };
}

export function ApplicationToJSON(value?: Application | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'externalId': value.externalId,
        'nationalId': value.nationalId,
        'universityId': value.universityId,
        'programId': value.programId,
        'programModeOfDelivery': value.programModeOfDelivery,
        'status': value.status,
    };
}

/**
* @export
* @enum {string}
*/
export enum ApplicationProgramModeOfDeliveryEnum {
    ON_SITE = 'ON_SITE',
    REMOTE = 'REMOTE',
    ONLINE = 'ONLINE',
    MIXED = 'MIXED'
}
/**
* @export
* @enum {string}
*/
export enum ApplicationStatusEnum {
    IN_REVIEW = 'IN_REVIEW',
    IN_PROGRESS = 'IN_PROGRESS',
    ACCEPTED_BY_UNIVERSITY = 'ACCEPTED_BY_UNIVERSITY',
    ACCEPTED_BY_UNIVERSITY_WITH_CONDITION = 'ACCEPTED_BY_UNIVERSITY_WITH_CONDITION',
    ACCEPTED_BY_UNIVERSITY_AND_STUDENT = 'ACCEPTED_BY_UNIVERSITY_AND_STUDENT',
    REJECTED_BY_STUDENT_REASON_CANCELLED = 'REJECTED_BY_STUDENT_REASON_CANCELLED',
    REJECTED_BY_STUDENT_REASON_OTHER_ACCEPTED = 'REJECTED_BY_STUDENT_REASON_OTHER_ACCEPTED',
    REJECTED_BY_UNIVERSITY_REASON_INSUFFICIENT = 'REJECTED_BY_UNIVERSITY_REASON_INSUFFICIENT',
    REJECTED_BY_UNIVERSITY_REASON_NO_AVAILABILITY = 'REJECTED_BY_UNIVERSITY_REASON_NO_AVAILABILITY',
    CANCELLED_BY_STUDENT = 'CANCELLED_BY_STUDENT',
    PAYMENT_COMPLETE = 'PAYMENT_COMPLETE'
}


