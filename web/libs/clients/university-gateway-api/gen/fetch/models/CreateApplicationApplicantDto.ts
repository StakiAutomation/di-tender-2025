/* tslint:disable */
/* eslint-disable */
/**
 * University Gateway
 * API for communication between island.is application system and university gateway DB, and between university gateway DB and universities system (MySchool and Ugla)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateApplicationApplicantDto
 */
export interface CreateApplicationApplicantDto {
    /**
     * Given name
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    givenName: string;
    /**
     * Middle name
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    middleName?: string;
    /**
     * Family name
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    familyName: string;
    /**
     * Gender code
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    genderCode: string;
    /**
     * Citizenship
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    citizenshipCode: string;
    /**
     * Street address for legal domicile
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    streetAddress: string;
    /**
     * Postal code for legal domicile
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    postalCode: string;
    /**
     * City for legal domicile
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    city: string;
    /**
     * Municipality code for legal domicile
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    municipalityCode: string;
    /**
     * Country code for legal domicile
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    countryCode: string;
    /**
     * Email
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    email: string;
    /**
     * Phone number
     * @type {string}
     * @memberof CreateApplicationApplicantDto
     */
    phone: string;
}

export function CreateApplicationApplicantDtoFromJSON(json: any): CreateApplicationApplicantDto {
    return CreateApplicationApplicantDtoFromJSONTyped(json, false);
}

export function CreateApplicationApplicantDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateApplicationApplicantDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'givenName': json['givenName'],
        'middleName': !exists(json, 'middleName') ? undefined : json['middleName'],
        'familyName': json['familyName'],
        'genderCode': json['genderCode'],
        'citizenshipCode': json['citizenshipCode'],
        'streetAddress': json['streetAddress'],
        'postalCode': json['postalCode'],
        'city': json['city'],
        'municipalityCode': json['municipalityCode'],
        'countryCode': json['countryCode'],
        'email': json['email'],
        'phone': json['phone'],
    };
}

export function CreateApplicationApplicantDtoToJSON(value?: CreateApplicationApplicantDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'givenName': value.givenName,
        'middleName': value.middleName,
        'familyName': value.familyName,
        'genderCode': value.genderCode,
        'citizenshipCode': value.citizenshipCode,
        'streetAddress': value.streetAddress,
        'postalCode': value.postalCode,
        'city': value.city,
        'municipalityCode': value.municipalityCode,
        'countryCode': value.countryCode,
        'email': value.email,
        'phone': value.phone,
    };
}


