/* tslint:disable */
/* eslint-disable */
/**
 * University Gateway
 * API for communication between island.is application system and university gateway DB, and between university gateway DB and universities system (MySchool and Ugla)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProgramExtraApplicationField
 */
export interface ProgramExtraApplicationField {
    /**
     * External key for field
     * @type {string}
     * @memberof ProgramExtraApplicationField
     */
    externalKey: string;
    /**
     * Field name (Icelandic)
     * @type {string}
     * @memberof ProgramExtraApplicationField
     */
    nameIs: string;
    /**
     * Field name (English)
     * @type {string}
     * @memberof ProgramExtraApplicationField
     */
    nameEn: string;
    /**
     * Field description (Icelandic)
     * @type {string}
     * @memberof ProgramExtraApplicationField
     */
    descriptionIs?: string;
    /**
     * Field description (English)
     * @type {string}
     * @memberof ProgramExtraApplicationField
     */
    descriptionEn?: string;
    /**
     * Is this field required?
     * @type {boolean}
     * @memberof ProgramExtraApplicationField
     */
    required: boolean;
    /**
     * What type of field should be displayed in the application form
     * @type {string}
     * @memberof ProgramExtraApplicationField
     */
    fieldType: ProgramExtraApplicationFieldFieldTypeEnum;
    /**
     * If field type is UPLOAD, then this field is required and should list up all file types that should be accepted
     * @type {string}
     * @memberof ProgramExtraApplicationField
     */
    uploadAcceptedFileType?: string;
    /**
     * If using field type dropdown or testing site, this should be a list of options in selection field, semi-comma separated
     * @type {string}
     * @memberof ProgramExtraApplicationField
     */
    options?: string;
}

export function ProgramExtraApplicationFieldFromJSON(json: any): ProgramExtraApplicationField {
    return ProgramExtraApplicationFieldFromJSONTyped(json, false);
}

export function ProgramExtraApplicationFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProgramExtraApplicationField {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'externalKey': json['externalKey'],
        'nameIs': json['nameIs'],
        'nameEn': json['nameEn'],
        'descriptionIs': !exists(json, 'descriptionIs') ? undefined : json['descriptionIs'],
        'descriptionEn': !exists(json, 'descriptionEn') ? undefined : json['descriptionEn'],
        'required': json['required'],
        'fieldType': json['fieldType'],
        'uploadAcceptedFileType': !exists(json, 'uploadAcceptedFileType') ? undefined : json['uploadAcceptedFileType'],
        'options': !exists(json, 'options') ? undefined : json['options'],
    };
}

export function ProgramExtraApplicationFieldToJSON(value?: ProgramExtraApplicationField | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'externalKey': value.externalKey,
        'nameIs': value.nameIs,
        'nameEn': value.nameEn,
        'descriptionIs': value.descriptionIs,
        'descriptionEn': value.descriptionEn,
        'required': value.required,
        'fieldType': value.fieldType,
        'uploadAcceptedFileType': value.uploadAcceptedFileType,
        'options': value.options,
    };
}

/**
* @export
* @enum {string}
*/
export enum ProgramExtraApplicationFieldFieldTypeEnum {
    UPLOAD = 'UPLOAD',
    CHECKBOX = 'CHECKBOX',
    TEXT_INPUT = 'TEXT_INPUT',
    TEXT_AREA = 'TEXT_AREA',
    DROPDOWN = 'DROPDOWN',
    DATA_PROVIDER = 'DATA_PROVIDER',
    APPROVAL_PROVIDER = 'APPROVAL_PROVIDER',
    TESTING_SITE = 'TESTING_SITE',
    PERSON = 'PERSON'
}


