/* tslint:disable */
/* eslint-disable */
/**
 * Version 1 of Custom API.RU.IS
 * This is an API managed by Reykjavik University
 *
 * The version of the OpenAPI document: v1
 * Contact: help@ru.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RekUniITAPICustomModelsHvinUpdateApplicationResponse
 */
export interface RekUniITAPICustomModelsHvinUpdateApplicationResponse {
    /**
     * Update object
     * @type {object}
     * @memberof RekUniITAPICustomModelsHvinUpdateApplicationResponse
     */
    updateObject?: object;
    /**
     * If the update was unsuccessful the hasError property will be set to true
     * @type {boolean}
     * @memberof RekUniITAPICustomModelsHvinUpdateApplicationResponse
     */
    hasError?: boolean;
    /**
     * Description of the error if an error occured
     * @type {string}
     * @memberof RekUniITAPICustomModelsHvinUpdateApplicationResponse
     */
    errorText?: string;
}

export function RekUniITAPICustomModelsHvinUpdateApplicationResponseFromJSON(json: any): RekUniITAPICustomModelsHvinUpdateApplicationResponse {
    return RekUniITAPICustomModelsHvinUpdateApplicationResponseFromJSONTyped(json, false);
}

export function RekUniITAPICustomModelsHvinUpdateApplicationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RekUniITAPICustomModelsHvinUpdateApplicationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'updateObject': !exists(json, 'updateObject') ? undefined : json['updateObject'],
        'hasError': !exists(json, 'hasError') ? undefined : json['hasError'],
        'errorText': !exists(json, 'errorText') ? undefined : json['errorText'],
    };
}

export function RekUniITAPICustomModelsHvinUpdateApplicationResponseToJSON(value?: RekUniITAPICustomModelsHvinUpdateApplicationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'updateObject': value.updateObject,
        'hasError': value.hasError,
        'errorText': value.errorText,
    };
}


