/* tslint:disable */
/* eslint-disable */
/**
 * University Gateway
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InlineResponse2003Data
 */
export interface InlineResponse2003Data {
    /**
     * 
     * @type {Array<string>}
     * @memberof InlineResponse2003Data
     */
    externalId?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof InlineResponse2003Data
     */
    nameIs?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof InlineResponse2003Data
     */
    nameEn?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse2003Data
     */
    required?: InlineResponse2003DataRequiredEnum;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse2003Data
     */
    credits?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse2003Data
     */
    semesterYear?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse2003Data
     */
    semesterSeason?: InlineResponse2003DataSemesterSeasonEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof InlineResponse2003Data
     */
    descriptionIs?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof InlineResponse2003Data
     */
    descriptionEn?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof InlineResponse2003Data
     */
    externalUrlIs?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof InlineResponse2003Data
     */
    externalUrlEn?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof InlineResponse2003Data
     */
    displayId?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof InlineResponse2003Data
     */
    displayIdLong?: Array<string>;
}

export function InlineResponse2003DataFromJSON(json: any): InlineResponse2003Data {
    return InlineResponse2003DataFromJSONTyped(json, false);
}

export function InlineResponse2003DataFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse2003Data {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'externalId': !exists(json, 'externalId') ? undefined : json['externalId'],
        'nameIs': !exists(json, 'nameIs') ? undefined : json['nameIs'],
        'nameEn': !exists(json, 'nameEn') ? undefined : json['nameEn'],
        'required': !exists(json, 'required') ? undefined : json['required'],
        'credits': !exists(json, 'credits') ? undefined : json['credits'],
        'semesterYear': !exists(json, 'semesterYear') ? undefined : json['semesterYear'],
        'semesterSeason': !exists(json, 'semesterSeason') ? undefined : json['semesterSeason'],
        'descriptionIs': !exists(json, 'descriptionIs') ? undefined : json['descriptionIs'],
        'descriptionEn': !exists(json, 'descriptionEn') ? undefined : json['descriptionEn'],
        'externalUrlIs': !exists(json, 'externalUrlIs') ? undefined : json['externalUrlIs'],
        'externalUrlEn': !exists(json, 'externalUrlEn') ? undefined : json['externalUrlEn'],
        'displayId': !exists(json, 'displayId') ? undefined : json['displayId'],
        'displayIdLong': !exists(json, 'displayIdLong') ? undefined : json['displayIdLong'],
    };
}

export function InlineResponse2003DataToJSON(value?: InlineResponse2003Data | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'externalId': value.externalId,
        'nameIs': value.nameIs,
        'nameEn': value.nameEn,
        'required': value.required,
        'credits': value.credits,
        'semesterYear': value.semesterYear,
        'semesterSeason': value.semesterSeason,
        'descriptionIs': value.descriptionIs,
        'descriptionEn': value.descriptionEn,
        'externalUrlIs': value.externalUrlIs,
        'externalUrlEn': value.externalUrlEn,
        'displayId': value.displayId,
        'displayIdLong': value.displayIdLong,
    };
}

/**
* @export
* @enum {string}
*/
export enum InlineResponse2003DataRequiredEnum {
    MANDATORY = 'MANDATORY',
    ELECTIVE = 'ELECTIVE',
    RESTRICTED_ELECTIVE = 'RESTRICTED_ELECTIVE'
}
/**
* @export
* @enum {string}
*/
export enum InlineResponse2003DataSemesterSeasonEnum {
    SPRING = 'SPRING',
    FALL = 'FALL',
    SUMMER = 'SUMMER',
    WHOLE_YEAR = 'WHOLE_YEAR',
    ANY = 'ANY'
}


