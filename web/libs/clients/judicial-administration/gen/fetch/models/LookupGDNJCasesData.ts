/* tslint:disable */
/* eslint-disable */
/**
 * GoPro.JusticePortal.Rest
 * Provides access to Justice Portal rest service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gopro.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LookupGDNJCasesData
 */
export interface LookupGDNJCasesData {
    /**
     * Authentication token. Returned by AuthenticateUser
     * @type {string}
     * @memberof LookupGDNJCasesData
     */
    authenticationToken: string;
    /**
     * DateFrom is a lower bound for Modified Date of cases in the result set. If case is NOT modified after its creation then Modified Date is equal to Creation Date
     * @type {string}
     * @memberof LookupGDNJCasesData
     */
    dateFrom: string;
    /**
     * DateTo is an upper bound for Modified Date of cases in the result set. If empty, then will be "today"
     * @type {string}
     * @memberof LookupGDNJCasesData
     */
    dateTo?: string;
    /**
     * Possible values: 'D - Opinber skipti', 'G - Gjaldþrotaskipti', 'J - Greiðslustöðvunarbeiðnir', 'N - Nauðasamningar'
     * @type {string}
     * @memberof LookupGDNJCasesData
     */
    caseType?: string;
    /**
     * User can send one casenumber and get the results for only that case. If empty then CaseType will be used.
     * @type {string}
     * @memberof LookupGDNJCasesData
     */
    caseNumber?: string;
}

export function LookupGDNJCasesDataFromJSON(json: any): LookupGDNJCasesData {
    return LookupGDNJCasesDataFromJSONTyped(json, false);
}

export function LookupGDNJCasesDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): LookupGDNJCasesData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authenticationToken': json['authenticationToken'],
        'dateFrom': json['dateFrom'],
        'dateTo': !exists(json, 'dateTo') ? undefined : json['dateTo'],
        'caseType': !exists(json, 'caseType') ? undefined : json['caseType'],
        'caseNumber': !exists(json, 'caseNumber') ? undefined : json['caseNumber'],
    };
}

export function LookupGDNJCasesDataToJSON(value?: LookupGDNJCasesData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'authenticationToken': value.authenticationToken,
        'dateFrom': value.dateFrom,
        'dateTo': value.dateTo,
        'caseType': value.caseType,
        'caseNumber': value.caseNumber,
    };
}


