/* tslint:disable */
/* eslint-disable */
/**
 * GoPro.JusticePortal.Rest
 * Provides access to Justice Portal rest service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gopro.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Defendant,
    DefendantFromJSON,
    DefendantFromJSONTyped,
    DefendantToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateCaseWithDefendantData
 */
export interface UpdateCaseWithDefendantData {
    /**
     * Authentication token. Returned by AuthenticateUser
     * @type {string}
     * @memberof UpdateCaseWithDefendantData
     */
    authenticationToken: string;
    /**
     * System User idNumber
     * @type {string}
     * @memberof UpdateCaseWithDefendantData
     */
    userIdNumber: string;
    /**
     * CaseID or Number
     * @type {string}
     * @memberof UpdateCaseWithDefendantData
     */
    caseId: string;
    /**
     * 
     * @type {Defendant}
     * @memberof UpdateCaseWithDefendantData
     */
    defendant: Defendant;
}

export function UpdateCaseWithDefendantDataFromJSON(json: any): UpdateCaseWithDefendantData {
    return UpdateCaseWithDefendantDataFromJSONTyped(json, false);
}

export function UpdateCaseWithDefendantDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCaseWithDefendantData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authenticationToken': json['authenticationToken'],
        'userIdNumber': json['userIdNumber'],
        'caseId': json['caseId'],
        'defendant': DefendantFromJSON(json['defendant']),
    };
}

export function UpdateCaseWithDefendantDataToJSON(value?: UpdateCaseWithDefendantData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'authenticationToken': value.authenticationToken,
        'userIdNumber': value.userIdNumber,
        'caseId': value.caseId,
        'defendant': DefendantToJSON(value.defendant),
    };
}


