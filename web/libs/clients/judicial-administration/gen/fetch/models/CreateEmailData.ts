/* tslint:disable */
/* eslint-disable */
/**
 * GoPro.JusticePortal.Rest
 * Provides access to Justice Portal rest service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gopro.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateEmailData
 */
export interface CreateEmailData {
    /**
     * Authentication token. Returned by AuthenticateUser
     * @type {string}
     * @memberof CreateEmailData
     */
    authenticationToken: string;
    /**
     * The case number
     * @type {string}
     * @memberof CreateEmailData
     */
    caseNumber: string;
    /**
     * The subject
     * @type {string}
     * @memberof CreateEmailData
     */
    subject: string;
    /**
     * HTML encoded email body
     * @type {string}
     * @memberof CreateEmailData
     */
    body: string;
    /**
     * Comma separated list of the recipients
     * @type {string}
     * @memberof CreateEmailData
     */
    recipients: string;
    /**
     * Email of the sender.
     * @type {string}
     * @memberof CreateEmailData
     */
    fromEmail: string;
    /**
     * Name of the sender.
     * @type {string}
     * @memberof CreateEmailData
     */
    fromName?: string;
    /**
     * Folder name. If not exist it will be created. If empty then the email will be saved under Tölvupóstar folder.
     * @type {string}
     * @memberof CreateEmailData
     */
    folderName?: string;
}

export function CreateEmailDataFromJSON(json: any): CreateEmailData {
    return CreateEmailDataFromJSONTyped(json, false);
}

export function CreateEmailDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateEmailData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authenticationToken': json['authenticationToken'],
        'caseNumber': json['caseNumber'],
        'subject': json['subject'],
        'body': json['body'],
        'recipients': json['recipients'],
        'fromEmail': json['fromEmail'],
        'fromName': !exists(json, 'fromName') ? undefined : json['fromName'],
        'folderName': !exists(json, 'folderName') ? undefined : json['folderName'],
    };
}

export function CreateEmailDataToJSON(value?: CreateEmailData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'authenticationToken': value.authenticationToken,
        'caseNumber': value.caseNumber,
        'subject': value.subject,
        'body': value.body,
        'recipients': value.recipients,
        'fromEmail': value.fromEmail,
        'fromName': value.fromName,
        'folderName': value.folderName,
    };
}


