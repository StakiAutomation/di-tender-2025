/* tslint:disable */
/* eslint-disable */
/**
 * SGS Rest API
 * Plate ordering API developed in .Net6.0 - Release-3 : 20230125.2
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tolvuhjalp@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    PostOrderPlatesModel,
    PostOrderPlatesModelFromJSON,
    PostOrderPlatesModelToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
    ReturnTypeMessage,
    ReturnTypeMessageFromJSON,
    ReturnTypeMessageToJSON,
    StationDTO,
    StationDTOFromJSON,
    StationDTOToJSON,
} from '../models';

export interface DeliverystationsGetRequest {
    apiVersion?: string;
    apiVersion2?: string;
}

export interface OrderplatesPostRequest {
    apiVersion?: string;
    apiVersion2?: string;
    postOrderPlatesModel?: PostOrderPlatesModel;
}

/**
 * 
 */
export class PlateOrderingApi extends runtime.BaseAPI {

    /**
     */
    async deliverystationsGetRaw(requestParameters: DeliverystationsGetRequest): Promise<runtime.ApiResponse<Array<StationDTO>>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.apiVersion2 !== undefined) {
            queryParameters['api-version'] = requestParameters.apiVersion2;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.apiVersion !== undefined && requestParameters.apiVersion !== null) {
            headerParameters['api-version'] = String(requestParameters.apiVersion);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/deliverystations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(StationDTOFromJSON));
    }

    /**
     */
    async deliverystationsGet(requestParameters: DeliverystationsGetRequest): Promise<Array<StationDTO>> {
        const response = await this.deliverystationsGetRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async orderplatesPostRaw(requestParameters: OrderplatesPostRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.apiVersion2 !== undefined) {
            queryParameters['api-version'] = requestParameters.apiVersion2;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        if (requestParameters.apiVersion !== undefined && requestParameters.apiVersion !== null) {
            headerParameters['api-version'] = String(requestParameters.apiVersion);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/orderplates`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PostOrderPlatesModelToJSON(requestParameters.postOrderPlatesModel),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async orderplatesPost(requestParameters: OrderplatesPostRequest): Promise<void> {
        await this.orderplatesPostRaw(requestParameters);
    }

}
