/* tslint:disable */
/* eslint-disable */
/**
 * TachoNet API
 * Vefþjónustur fyrir umsóknir um ökuritakort hjá island.is
 *
 * The version of the OpenAPI document: 1.2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    DriverCardApplicationRequest,
    DriverCardApplicationRequestFromJSON,
    DriverCardApplicationRequestToJSON,
    DriverCardApplicationResponse,
    DriverCardApplicationResponseFromJSON,
    DriverCardApplicationResponseToJSON,
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    NewestIcelandicDriverCardResponse,
    NewestIcelandicDriverCardResponseFromJSON,
    NewestIcelandicDriverCardResponseToJSON,
    TachonetCheckRequest,
    TachonetCheckRequestFromJSON,
    TachonetCheckRequestToJSON,
    TachonetCheckResponse,
    TachonetCheckResponseFromJSON,
    TachonetCheckResponseToJSON,
} from '../models';

export interface V1DrivercardsPersidnoNewestGetRequest {
    persidno: string;
}

export interface V1DrivercardsPostRequest {
    driverCardApplicationRequest?: DriverCardApplicationRequest;
}

export interface V1DrivercardsTachonetcheckPostRequest {
    tachonetCheckRequest?: TachonetCheckRequest;
}

/**
 * 
 */
export class DriverCardsApiApi extends runtime.BaseAPI {

    /**
     */
    async v1DrivercardsPersidnoNewestGetRaw(requestParameters: V1DrivercardsPersidnoNewestGetRequest): Promise<runtime.ApiResponse<NewestIcelandicDriverCardResponse>> {
        if (requestParameters.persidno === null || requestParameters.persidno === undefined) {
            throw new runtime.RequiredError('persidno','Required parameter requestParameters.persidno was null or undefined when calling v1DrivercardsPersidnoNewestGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/drivercards/{persidno}/newest`.replace(`{${"persidno"}}`, encodeURIComponent(String(requestParameters.persidno))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => NewestIcelandicDriverCardResponseFromJSON(jsonValue));
    }

    /**
     */
    async v1DrivercardsPersidnoNewestGet(requestParameters: V1DrivercardsPersidnoNewestGetRequest): Promise<NewestIcelandicDriverCardResponse> {
        const response = await this.v1DrivercardsPersidnoNewestGetRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async v1DrivercardsPostRaw(requestParameters: V1DrivercardsPostRequest): Promise<runtime.ApiResponse<DriverCardApplicationResponse>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'text/json';

        const response = await this.request({
            path: `/v1/drivercards`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DriverCardApplicationRequestToJSON(requestParameters.driverCardApplicationRequest),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => DriverCardApplicationResponseFromJSON(jsonValue));
    }

    /**
     */
    async v1DrivercardsPost(requestParameters: V1DrivercardsPostRequest): Promise<DriverCardApplicationResponse> {
        const response = await this.v1DrivercardsPostRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async v1DrivercardsTachonetcheckPostRaw(requestParameters: V1DrivercardsTachonetcheckPostRequest): Promise<runtime.ApiResponse<TachonetCheckResponse>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'text/json';

        const response = await this.request({
            path: `/v1/drivercards/tachonetcheck`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TachonetCheckRequestToJSON(requestParameters.tachonetCheckRequest),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => TachonetCheckResponseFromJSON(jsonValue));
    }

    /**
     */
    async v1DrivercardsTachonetcheckPost(requestParameters: V1DrivercardsTachonetcheckPostRequest): Promise<TachonetCheckResponse> {
        const response = await this.v1DrivercardsTachonetcheckPostRaw(requestParameters);
        return await response.value();
    }

}
