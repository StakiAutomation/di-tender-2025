/* tslint:disable */
/* eslint-disable */
/**
 * SGS Rest API
 * Ownerchange API developed in .Net6.0 - Release-13 : 20231219.2
 *
 * The version of the OpenAPI document: 2.0
 * Contact: tolvuhjalp@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CoOwneDto,
    CoOwneDtoFromJSON,
    CoOwneDtoFromJSONTyped,
    CoOwneDtoToJSON,
} from './';

/**
 * Data transfer object for owner change
 * @export
 * @interface OwnerChangeDto
 */
export interface OwnerChangeDto {
    /**
     * Vehicle registration number
     * @type {string}
     * @memberof OwnerChangeDto
     */
    regno?: string | null;
    /**
     * Date when owner change was registered
     * @type {Date}
     * @memberof OwnerChangeDto
     */
    dateOfOwnerRegistration?: Date | null;
    /**
     * Buyer person id number
     * @type {string}
     * @memberof OwnerChangeDto
     */
    persidno?: string | null;
    /**
     * Owner serial number
     * @type {number}
     * @memberof OwnerChangeDto
     */
    ownerSerialNumber?: number;
    /**
     * Date when vehicle was bought
     * @type {Date}
     * @memberof OwnerChangeDto
     */
    dateOfPurchase?: Date | null;
    /**
     * Insurance company code
     * @type {string}
     * @memberof OwnerChangeDto
     */
    insuranceCompanyCode?: string | null;
    /**
     * Insurance company name
     * @type {string}
     * @memberof OwnerChangeDto
     */
    insuranceCompanyName?: string | null;
    /**
     * Vehicle make
     * @type {string}
     * @memberof OwnerChangeDto
     */
    vehicleMake?: string | null;
    /**
     * Owner full name
     * @type {string}
     * @memberof OwnerChangeDto
     */
    ownerName?: string | null;
    /**
     * Sale amount
     * @type {number}
     * @memberof OwnerChangeDto
     */
    saleAmount?: number | null;
    /**
     * Previous owner person id number
     * @type {string}
     * @memberof OwnerChangeDto
     */
    previousOwnerPersidno?: string | null;
    /**
     * Previous owner name
     * @type {string}
     * @memberof OwnerChangeDto
     */
    previousOwnerName?: string | null;
    /**
     * List of vehicle's operators
     * @type {Array<CoOwneDto>}
     * @memberof OwnerChangeDto
     */
    readonly coOwners?: Array<CoOwneDto> | null;
}

export function OwnerChangeDtoFromJSON(json: any): OwnerChangeDto {
    return OwnerChangeDtoFromJSONTyped(json, false);
}

export function OwnerChangeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OwnerChangeDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'regno': !exists(json, 'regno') ? undefined : json['regno'],
        'dateOfOwnerRegistration': !exists(json, 'dateOfOwnerRegistration') ? undefined : (json['dateOfOwnerRegistration'] === null ? null : new Date(json['dateOfOwnerRegistration'])),
        'persidno': !exists(json, 'persidno') ? undefined : json['persidno'],
        'ownerSerialNumber': !exists(json, 'ownerSerialNumber') ? undefined : json['ownerSerialNumber'],
        'dateOfPurchase': !exists(json, 'dateOfPurchase') ? undefined : (json['dateOfPurchase'] === null ? null : new Date(json['dateOfPurchase'])),
        'insuranceCompanyCode': !exists(json, 'insuranceCompanyCode') ? undefined : json['insuranceCompanyCode'],
        'insuranceCompanyName': !exists(json, 'insuranceCompanyName') ? undefined : json['insuranceCompanyName'],
        'vehicleMake': !exists(json, 'vehicleMake') ? undefined : json['vehicleMake'],
        'ownerName': !exists(json, 'ownerName') ? undefined : json['ownerName'],
        'saleAmount': !exists(json, 'saleAmount') ? undefined : json['saleAmount'],
        'previousOwnerPersidno': !exists(json, 'previousOwnerPersidno') ? undefined : json['previousOwnerPersidno'],
        'previousOwnerName': !exists(json, 'previousOwnerName') ? undefined : json['previousOwnerName'],
        'coOwners': !exists(json, 'coOwners') ? undefined : (json['coOwners'] === null ? null : (json['coOwners'] as Array<any>).map(CoOwneDtoFromJSON)),
    };
}

export function OwnerChangeDtoToJSON(value?: OwnerChangeDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'regno': value.regno,
        'dateOfOwnerRegistration': value.dateOfOwnerRegistration === undefined ? undefined : (value.dateOfOwnerRegistration === null ? null : value.dateOfOwnerRegistration.toISOString()),
        'persidno': value.persidno,
        'ownerSerialNumber': value.ownerSerialNumber,
        'dateOfPurchase': value.dateOfPurchase === undefined ? undefined : (value.dateOfPurchase === null ? null : value.dateOfPurchase.toISOString()),
        'insuranceCompanyCode': value.insuranceCompanyCode,
        'insuranceCompanyName': value.insuranceCompanyName,
        'vehicleMake': value.vehicleMake,
        'ownerName': value.ownerName,
        'saleAmount': value.saleAmount,
        'previousOwnerPersidno': value.previousOwnerPersidno,
        'previousOwnerName': value.previousOwnerName,
    };
}


