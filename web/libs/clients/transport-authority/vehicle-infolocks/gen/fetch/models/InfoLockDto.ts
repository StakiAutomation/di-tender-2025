/* tslint:disable */
/* eslint-disable */
/**
 * SGS Rest API
 * Vehicle infolocks API, developed in .Net6.0
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tolvuhjalp@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Dto for info lock
 * @export
 * @interface InfoLockDto
 */
export interface InfoLockDto {
    /**
     * Social security number of person that has lock
     * @type {string}
     * @memberof InfoLockDto
     */
    persidNo?: string | null;
    /**
     * Name of person that has lock
     * @type {string}
     * @memberof InfoLockDto
     */
    name?: string | null;
    /**
     * Info lock code
     * @type {string}
     * @memberof InfoLockDto
     */
    infoLockType?: string | null;
    /**
     * Info lock name
     * @type {string}
     * @memberof InfoLockDto
     */
    infoLockName?: string | null;
    /**
     * When is lock invalid
     * @type {Date}
     * @memberof InfoLockDto
     */
    invalidDate?: Date | null;
    /**
     * Explanation of lock
     * @type {string}
     * @memberof InfoLockDto
     */
    explanation?: string | null;
    /**
     * Indicates if the lock is valid or not
     * @type {boolean}
     * @memberof InfoLockDto
     */
    isValid?: boolean;
}

export function InfoLockDtoFromJSON(json: any): InfoLockDto {
    return InfoLockDtoFromJSONTyped(json, false);
}

export function InfoLockDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): InfoLockDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'persidNo': !exists(json, 'persidNo') ? undefined : json['persidNo'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'infoLockType': !exists(json, 'infoLockType') ? undefined : json['infoLockType'],
        'infoLockName': !exists(json, 'infoLockName') ? undefined : json['infoLockName'],
        'invalidDate': !exists(json, 'invalidDate') ? undefined : (json['invalidDate'] === null ? null : new Date(json['invalidDate'])),
        'explanation': !exists(json, 'explanation') ? undefined : json['explanation'],
        'isValid': !exists(json, 'isValid') ? undefined : json['isValid'],
    };
}

export function InfoLockDtoToJSON(value?: InfoLockDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'persidNo': value.persidNo,
        'name': value.name,
        'infoLockType': value.infoLockType,
        'infoLockName': value.infoLockName,
        'invalidDate': value.invalidDate === undefined ? undefined : (value.invalidDate === null ? null : value.invalidDate.toISOString()),
        'explanation': value.explanation,
        'isValid': value.isValid,
    };
}


