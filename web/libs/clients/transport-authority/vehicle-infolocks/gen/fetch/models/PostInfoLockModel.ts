/* tslint:disable */
/* eslint-disable */
/**
 * SGS Rest API
 * Vehicle infolocks API, developed in .Net6.0
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tolvuhjalp@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Entity to insert update lock
 * @export
 * @interface PostInfoLockModel
 */
export interface PostInfoLockModel {
    /**
     * Users social security number
     * @type {string}
     * @memberof PostInfoLockModel
     */
    persidno: string;
    /**
     * Lock type
     * Allowed value: 1 (Anonymity) , 2 (Owner registration forbidden)
     * @type {string}
     * @memberof PostInfoLockModel
     */
    infoLockType: string;
    /**
     * When is lock invalid
     * @type {Date}
     * @memberof PostInfoLockModel
     */
    invalidDate?: Date | null;
    /**
     * Explanation of lock
     * @type {string}
     * @memberof PostInfoLockModel
     */
    explanation?: string | null;
}

export function PostInfoLockModelFromJSON(json: any): PostInfoLockModel {
    return PostInfoLockModelFromJSONTyped(json, false);
}

export function PostInfoLockModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostInfoLockModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'persidno': json['persidno'],
        'infoLockType': json['infoLockType'],
        'invalidDate': !exists(json, 'invalidDate') ? undefined : (json['invalidDate'] === null ? null : new Date(json['invalidDate'])),
        'explanation': !exists(json, 'explanation') ? undefined : json['explanation'],
    };
}

export function PostInfoLockModelToJSON(value?: PostInfoLockModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'persidno': value.persidno,
        'infoLockType': value.infoLockType,
        'invalidDate': value.invalidDate === undefined ? undefined : (value.invalidDate === null ? null : value.invalidDate.toISOString()),
        'explanation': value.explanation,
    };
}


