/* tslint:disable */
/* eslint-disable */
/**
 * The Official Journal of Iceland API
 * API for advarts and publication in the Official Journal of Iceland.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CategoryMainCategory,
    CategoryMainCategoryFromJSON,
    CategoryMainCategoryFromJSONTyped,
    CategoryMainCategoryToJSON,
} from './';

/**
 * 
 * @export
 * @interface Category
 */
export interface Category {
    /**
     * Unique ID for the advert category, GUID format.
     * @type {string}
     * @memberof Category
     */
    id: string;
    /**
     * Title of the advert category.
     * @type {string}
     * @memberof Category
     */
    title: string;
    /**
     * Slug of the advert category, used in URLs and API requests.
     * @type {string}
     * @memberof Category
     */
    slug: string;
    /**
     * The main category this category belongs to.
     * @type {Array<CategoryMainCategory>}
     * @memberof Category
     */
    mainCategories?: Array<CategoryMainCategory>;
}

export function CategoryFromJSON(json: any): Category {
    return CategoryFromJSONTyped(json, false);
}

export function CategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Category {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'slug': json['slug'],
        'mainCategories': !exists(json, 'mainCategories') ? undefined : ((json['mainCategories'] as Array<any>).map(CategoryMainCategoryFromJSON)),
    };
}

export function CategoryToJSON(value?: Category | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'slug': value.slug,
        'mainCategories': value.mainCategories === undefined ? undefined : ((value.mainCategories as Array<any>).map(CategoryMainCategoryToJSON)),
    };
}


