/* tslint:disable */
/* eslint-disable */
/**
 * The Official Journal of Iceland API
 * API for advarts and publication in the Official Journal of Iceland.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AdvertSignatureMember
 */
export interface AdvertSignatureMember {
    /**
     * Marks the members as chairman or not
     * @type {boolean}
     * @memberof AdvertSignatureMember
     */
    isChairman: boolean;
    /**
     * Name of the committee chairman
     * @type {string}
     * @memberof AdvertSignatureMember
     */
    name: string;
    /**
     * Text above the name of the signature
     * @type {string}
     * @memberof AdvertSignatureMember
     */
    textAbove?: string | null;
    /**
     * Text after the name of the signature
     * @type {string}
     * @memberof AdvertSignatureMember
     */
    textAfter?: string | null;
    /**
     * Text above the name of the signature
     * @type {string}
     * @memberof AdvertSignatureMember
     */
    textBelow?: string | null;
}

export function AdvertSignatureMemberFromJSON(json: any): AdvertSignatureMember {
    return AdvertSignatureMemberFromJSONTyped(json, false);
}

export function AdvertSignatureMemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvertSignatureMember {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isChairman': json['isChairman'],
        'name': json['name'],
        'textAbove': !exists(json, 'textAbove') ? undefined : json['textAbove'],
        'textAfter': !exists(json, 'textAfter') ? undefined : json['textAfter'],
        'textBelow': !exists(json, 'textBelow') ? undefined : json['textBelow'],
    };
}

export function AdvertSignatureMemberToJSON(value?: AdvertSignatureMember | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isChairman': value.isChairman,
        'name': value.name,
        'textAbove': value.textAbove,
        'textAfter': value.textAfter,
        'textBelow': value.textBelow,
    };
}


