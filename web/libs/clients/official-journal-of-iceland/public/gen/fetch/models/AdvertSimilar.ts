/* tslint:disable */
/* eslint-disable */
/**
 * The Official Journal of Iceland API
 * API for advarts and publication in the Official Journal of Iceland.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AdvertPublicationNumber,
    AdvertPublicationNumberFromJSON,
    AdvertPublicationNumberFromJSONTyped,
    AdvertPublicationNumberToJSON,
    Category,
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
    Department,
    DepartmentFromJSON,
    DepartmentFromJSONTyped,
    DepartmentToJSON,
    Institution,
    InstitutionFromJSON,
    InstitutionFromJSONTyped,
    InstitutionToJSON,
} from './';

/**
 * 
 * @export
 * @interface AdvertSimilar
 */
export interface AdvertSimilar {
    /**
     * Unique ID for the advert, GUID format.
     * @type {string}
     * @memberof AdvertSimilar
     */
    id: string;
    /**
     * The department the advert is for.
     * @type {Department}
     * @memberof AdvertSimilar
     */
    department: Department;
    /**
     * Subject of the advert, always dependant on the `type`.
     * @type {string}
     * @memberof AdvertSimilar
     */
    subject?: string;
    /**
     * Title of the advert with both `type` and `subject`.
     * @type {string}
     * @memberof AdvertSimilar
     */
    title: string;
    /**
     * Publication number of the advert
     * @type {AdvertPublicationNumber}
     * @memberof AdvertSimilar
     */
    publicationNumber: AdvertPublicationNumber | null;
    /**
     * Date the advert was signed, can be null. ISO 8601 date and time format in UTC.
     * @type {string}
     * @memberof AdvertSimilar
     */
    publicationDate: string | null;
    /**
     * List of advert categories.
     * @type {Array<Category>}
     * @memberof AdvertSimilar
     */
    categories: Array<Category>;
    /**
     * Involved party for the advert.
     * @type {Institution}
     * @memberof AdvertSimilar
     */
    involvedParty: Institution;
}

export function AdvertSimilarFromJSON(json: any): AdvertSimilar {
    return AdvertSimilarFromJSONTyped(json, false);
}

export function AdvertSimilarFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvertSimilar {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'department': DepartmentFromJSON(json['department']),
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'title': json['title'],
        'publicationNumber': AdvertPublicationNumberFromJSON(json['publicationNumber']),
        'publicationDate': json['publicationDate'],
        'categories': ((json['categories'] as Array<any>).map(CategoryFromJSON)),
        'involvedParty': InstitutionFromJSON(json['involvedParty']),
    };
}

export function AdvertSimilarToJSON(value?: AdvertSimilar | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'department': DepartmentToJSON(value.department),
        'subject': value.subject,
        'title': value.title,
        'publicationNumber': AdvertPublicationNumberToJSON(value.publicationNumber),
        'publicationDate': value.publicationDate,
        'categories': ((value.categories as Array<any>).map(CategoryToJSON)),
        'involvedParty': InstitutionToJSON(value.involvedParty),
    };
}


