/* tslint:disable */
/* eslint-disable */
/**
 * The Official Journal of Iceland Application API
 * This api is responsible for communications with the island.is application system.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CaseActionEnum,
    CaseActionEnumFromJSON,
    CaseActionEnumFromJSONTyped,
    CaseActionEnumToJSON,
    CaseStatus,
    CaseStatusFromJSON,
    CaseStatusFromJSONTyped,
    CaseStatusToJSON,
    CommentCreatorDto,
    CommentCreatorDtoFromJSON,
    CommentCreatorDtoFromJSONTyped,
    CommentCreatorDtoToJSON,
    CommentReceiverDto,
    CommentReceiverDtoFromJSON,
    CommentReceiverDtoFromJSONTyped,
    CommentReceiverDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface CommentDto
 */
export interface CommentDto {
    /**
     * The id of the comment
     * @type {string}
     * @memberof CommentDto
     */
    id: string;
    /**
     * ISO string representation of the date the comment was created
     * @type {string}
     * @memberof CommentDto
     */
    created: string;
    /**
     * 
     * @type {CaseActionEnum}
     * @memberof CommentDto
     */
    action: CaseActionEnum;
    /**
     * The status of the case when the comment was created
     * @type {CaseStatus}
     * @memberof CommentDto
     */
    caseStatus: CaseStatus;
    /**
     * The creator of the comment
     * @type {CommentCreatorDto}
     * @memberof CommentDto
     */
    creator: CommentCreatorDto;
    /**
     * The receiver of the comment
     * @type {CommentReceiverDto}
     * @memberof CommentDto
     */
    receiver: CommentReceiverDto | null;
    /**
     * The comment
     * @type {string}
     * @memberof CommentDto
     */
    comment: string | null;
}

export function CommentDtoFromJSON(json: any): CommentDto {
    return CommentDtoFromJSONTyped(json, false);
}

export function CommentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommentDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': json['created'],
        'action': CaseActionEnumFromJSON(json['action']),
        'caseStatus': CaseStatusFromJSON(json['caseStatus']),
        'creator': CommentCreatorDtoFromJSON(json['creator']),
        'receiver': CommentReceiverDtoFromJSON(json['receiver']),
        'comment': json['comment'],
    };
}

export function CommentDtoToJSON(value?: CommentDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created': value.created,
        'action': CaseActionEnumToJSON(value.action),
        'caseStatus': CaseStatusToJSON(value.caseStatus),
        'creator': CommentCreatorDtoToJSON(value.creator),
        'receiver': CommentReceiverDtoToJSON(value.receiver),
        'comment': value.comment,
    };
}


