/* tslint:disable */
/* eslint-disable */
/**
 * The Official Journal of Iceland Application API
 * This api is responsible for communications with the island.is application system.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Institution,
    InstitutionFromJSON,
    InstitutionFromJSONTyped,
    InstitutionToJSON,
    SignatureRecord,
    SignatureRecordFromJSON,
    SignatureRecordFromJSONTyped,
    SignatureRecordToJSON,
} from './';

/**
 * 
 * @export
 * @interface Signature
 */
export interface Signature {
    /**
     * The id of the signature
     * @type {string}
     * @memberof Signature
     */
    id: string;
    /**
     * ISO datestring of the signature
     * @type {string}
     * @memberof Signature
     */
    signatureDate: string;
    /**
     * The involved party of the signature
     * @type {Institution}
     * @memberof Signature
     */
    involvedParty: Institution;
    /**
     * HTML of the signature
     * @type {string}
     * @memberof Signature
     */
    html: string;
    /**
     * ISO datestring of the creation date
     * @type {string}
     * @memberof Signature
     */
    created: string;
    /**
     * The signature record
     * @type {Array<SignatureRecord>}
     * @memberof Signature
     */
    records: Array<SignatureRecord>;
}

export function SignatureFromJSON(json: any): Signature {
    return SignatureFromJSONTyped(json, false);
}

export function SignatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): Signature {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'signatureDate': json['signatureDate'],
        'involvedParty': InstitutionFromJSON(json['involvedParty']),
        'html': json['html'],
        'created': json['created'],
        'records': ((json['records'] as Array<any>).map(SignatureRecordFromJSON)),
    };
}

export function SignatureToJSON(value?: Signature | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'signatureDate': value.signatureDate,
        'involvedParty': InstitutionToJSON(value.involvedParty),
        'html': value.html,
        'created': value.created,
        'records': ((value.records as Array<any>).map(SignatureRecordToJSON)),
    };
}


