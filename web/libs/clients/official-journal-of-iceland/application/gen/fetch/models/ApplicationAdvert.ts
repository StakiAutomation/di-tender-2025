/* tslint:disable */
/* eslint-disable */
/**
 * The Official Journal of Iceland Application API
 * This api is responsible for communications with the island.is application system.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApplicationAddition,
    ApplicationAdditionFromJSON,
    ApplicationAdditionFromJSONTyped,
    ApplicationAdditionToJSON,
    ApplicationCommunicationChannel,
    ApplicationCommunicationChannelFromJSON,
    ApplicationCommunicationChannelFromJSONTyped,
    ApplicationCommunicationChannelToJSON,
    BaseEntity,
    BaseEntityFromJSON,
    BaseEntityFromJSONTyped,
    BaseEntityToJSON,
} from './';

/**
 * 
 * @export
 * @interface ApplicationAdvert
 */
export interface ApplicationAdvert {
    /**
     * Id of the involved party
     * @type {string}
     * @memberof ApplicationAdvert
     */
    involvedPartyId: string;
    /**
     * Id of the selected department
     * @type {BaseEntity}
     * @memberof ApplicationAdvert
     */
    department: BaseEntity;
    /**
     * Id of the selected type
     * @type {BaseEntity}
     * @memberof ApplicationAdvert
     */
    type: BaseEntity;
    /**
     * Title of the advert
     * @type {string}
     * @memberof ApplicationAdvert
     */
    title: string;
    /**
     * HTML contents of the advert
     * @type {string}
     * @memberof ApplicationAdvert
     */
    html: string;
    /**
     * Request advert publcation date
     * @type {string}
     * @memberof ApplicationAdvert
     */
    requestedDate: string;
    /**
     * 
     * @type {Array<BaseEntity>}
     * @memberof ApplicationAdvert
     */
    categories: Array<BaseEntity>;
    /**
     * Communication channels
     * @type {Array<ApplicationCommunicationChannel>}
     * @memberof ApplicationAdvert
     */
    channels: Array<ApplicationCommunicationChannel>;
    /**
     * Additions to the advert
     * @type {Array<ApplicationAddition>}
     * @memberof ApplicationAdvert
     */
    additions: Array<ApplicationAddition>;
    /**
     * Message to the admins of the advert
     * @type {string}
     * @memberof ApplicationAdvert
     */
    message: string;
}

export function ApplicationAdvertFromJSON(json: any): ApplicationAdvert {
    return ApplicationAdvertFromJSONTyped(json, false);
}

export function ApplicationAdvertFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationAdvert {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'involvedPartyId': json['involvedPartyId'],
        'department': BaseEntityFromJSON(json['department']),
        'type': BaseEntityFromJSON(json['type']),
        'title': json['title'],
        'html': json['html'],
        'requestedDate': json['requestedDate'],
        'categories': ((json['categories'] as Array<any>).map(BaseEntityFromJSON)),
        'channels': ((json['channels'] as Array<any>).map(ApplicationCommunicationChannelFromJSON)),
        'additions': ((json['additions'] as Array<any>).map(ApplicationAdditionFromJSON)),
        'message': json['message'],
    };
}

export function ApplicationAdvertToJSON(value?: ApplicationAdvert | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'involvedPartyId': value.involvedPartyId,
        'department': BaseEntityToJSON(value.department),
        'type': BaseEntityToJSON(value.type),
        'title': value.title,
        'html': value.html,
        'requestedDate': value.requestedDate,
        'categories': ((value.categories as Array<any>).map(BaseEntityToJSON)),
        'channels': ((value.channels as Array<any>).map(ApplicationCommunicationChannelToJSON)),
        'additions': ((value.additions as Array<any>).map(ApplicationAdditionToJSON)),
        'message': value.message,
    };
}


