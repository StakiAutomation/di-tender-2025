/* tslint:disable */
/* eslint-disable */
/**
 * The Official Journal of Iceland Application API
 * This api is responsible for communications with the island.is application system.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AdvertType,
    AdvertTypeFromJSON,
    AdvertTypeFromJSONTyped,
    AdvertTypeToJSON,
    CaseStatus,
    CaseStatusFromJSON,
    CaseStatusFromJSONTyped,
    CaseStatusToJSON,
    Category,
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
    CommunicationStatus,
    CommunicationStatusFromJSON,
    CommunicationStatusFromJSONTyped,
    CommunicationStatusToJSON,
    Department,
    DepartmentFromJSON,
    DepartmentFromJSONTyped,
    DepartmentToJSON,
} from './';

/**
 * 
 * @export
 * @interface ApplicationCase
 */
export interface ApplicationCase {
    /**
     * 
     * @type {Array<Category>}
     * @memberof ApplicationCase
     */
    categories: Array<Category>;
    /**
     * Current status of the case
     * @type {CaseStatus}
     * @memberof ApplicationCase
     */
    status: CaseStatus;
    /**
     * 
     * @type {CommunicationStatus}
     * @memberof ApplicationCase
     */
    communicationStatus: CommunicationStatus;
    /**
     * 
     * @type {Department}
     * @memberof ApplicationCase
     */
    department: Department;
    /**
     * 
     * @type {AdvertType}
     * @memberof ApplicationCase
     */
    type: AdvertType;
    /**
     * 
     * @type {string}
     * @memberof ApplicationCase
     */
    html: string;
}

export function ApplicationCaseFromJSON(json: any): ApplicationCase {
    return ApplicationCaseFromJSONTyped(json, false);
}

export function ApplicationCaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationCase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'categories': ((json['categories'] as Array<any>).map(CategoryFromJSON)),
        'status': CaseStatusFromJSON(json['status']),
        'communicationStatus': CommunicationStatusFromJSON(json['communicationStatus']),
        'department': DepartmentFromJSON(json['department']),
        'type': AdvertTypeFromJSON(json['type']),
        'html': json['html'],
    };
}

export function ApplicationCaseToJSON(value?: ApplicationCase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'categories': ((value.categories as Array<any>).map(CategoryToJSON)),
        'status': CaseStatusToJSON(value.status),
        'communicationStatus': CommunicationStatusToJSON(value.communicationStatus),
        'department': DepartmentToJSON(value.department),
        'type': AdvertTypeToJSON(value.type),
        'html': value.html,
    };
}


