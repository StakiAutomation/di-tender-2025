/* tslint:disable */
/* eslint-disable */
/**
 * The Official Journal of Iceland Application API
 * This api is responsible for communications with the island.is application system.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostApplicationAttachmentBody
 */
export interface PostApplicationAttachmentBody {
    /**
     * 
     * @type {string}
     * @memberof PostApplicationAttachmentBody
     */
    fileName: string;
    /**
     * 
     * @type {string}
     * @memberof PostApplicationAttachmentBody
     */
    originalFileName: string;
    /**
     * 
     * @type {string}
     * @memberof PostApplicationAttachmentBody
     */
    fileFormat: string;
    /**
     * 
     * @type {string}
     * @memberof PostApplicationAttachmentBody
     */
    fileExtension: string;
    /**
     * 
     * @type {string}
     * @memberof PostApplicationAttachmentBody
     */
    fileLocation: string;
    /**
     * 
     * @type {number}
     * @memberof PostApplicationAttachmentBody
     */
    fileSize: number;
}

export function PostApplicationAttachmentBodyFromJSON(json: any): PostApplicationAttachmentBody {
    return PostApplicationAttachmentBodyFromJSONTyped(json, false);
}

export function PostApplicationAttachmentBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostApplicationAttachmentBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fileName': json['fileName'],
        'originalFileName': json['originalFileName'],
        'fileFormat': json['fileFormat'],
        'fileExtension': json['fileExtension'],
        'fileLocation': json['fileLocation'],
        'fileSize': json['fileSize'],
    };
}

export function PostApplicationAttachmentBodyToJSON(value?: PostApplicationAttachmentBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fileName': value.fileName,
        'originalFileName': value.originalFileName,
        'fileFormat': value.fileFormat,
        'fileExtension': value.fileExtension,
        'fileLocation': value.fileLocation,
        'fileSize': value.fileSize,
    };
}


