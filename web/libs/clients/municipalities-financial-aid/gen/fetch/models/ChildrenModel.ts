/* tslint:disable */
/* eslint-disable */
/**
 * Financial Aid Backend
 * This is the backend for the financial aid.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChildrenModel
 */
export interface ChildrenModel {
    /**
     * 
     * @type {string}
     * @memberof ChildrenModel
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ChildrenModel
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof ChildrenModel
     */
    modified: Date;
    /**
     * 
     * @type {string}
     * @memberof ChildrenModel
     */
    applicationId: string;
    /**
     * 
     * @type {string}
     * @memberof ChildrenModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ChildrenModel
     */
    nationalId: string;
    /**
     * 
     * @type {string}
     * @memberof ChildrenModel
     */
    school: string;
    /**
     * 
     * @type {boolean}
     * @memberof ChildrenModel
     */
    livesWithApplicant: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ChildrenModel
     */
    livesWithBothParents: boolean;
}

export function ChildrenModelFromJSON(json: any): ChildrenModel {
    return ChildrenModelFromJSONTyped(json, false);
}

export function ChildrenModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChildrenModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': (new Date(json['created'])),
        'modified': (new Date(json['modified'])),
        'applicationId': json['applicationId'],
        'name': json['name'],
        'nationalId': json['nationalId'],
        'school': json['school'],
        'livesWithApplicant': json['livesWithApplicant'],
        'livesWithBothParents': json['livesWithBothParents'],
    };
}

export function ChildrenModelToJSON(value?: ChildrenModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created': (value.created.toISOString()),
        'modified': (value.modified.toISOString()),
        'applicationId': value.applicationId,
        'name': value.name,
        'nationalId': value.nationalId,
        'school': value.school,
        'livesWithApplicant': value.livesWithApplicant,
        'livesWithBothParents': value.livesWithBothParents,
    };
}


