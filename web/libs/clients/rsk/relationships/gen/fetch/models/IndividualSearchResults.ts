/* tslint:disable */
/* eslint-disable */
/**
 * Relationships - API 1.0.0
 * API offers information about relationships between legal entities and individuals.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xroad@skattur.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IndividualSearchItem,
    IndividualSearchItemFromJSON,
    IndividualSearchItemFromJSONTyped,
    IndividualSearchItemToJSON,
    SearchPageInfo,
    SearchPageInfoFromJSON,
    SearchPageInfoFromJSONTyped,
    SearchPageInfoToJSON,
} from './';

/**
 * 
 * @export
 * @interface IndividualSearchResults
 */
export interface IndividualSearchResults {
    /**
     * 
     * @type {Array<IndividualSearchItem>}
     * @memberof IndividualSearchResults
     */
    individuals?: Array<IndividualSearchItem>;
    /**
     * 
     * @type {Array<SearchPageInfo>}
     * @memberof IndividualSearchResults
     */
    pageInfo?: Array<SearchPageInfo>;
    /**
     * 
     * @type {number}
     * @memberof IndividualSearchResults
     */
    totalCount?: number;
}

export function IndividualSearchResultsFromJSON(json: any): IndividualSearchResults {
    return IndividualSearchResultsFromJSONTyped(json, false);
}

export function IndividualSearchResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndividualSearchResults {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'individuals': !exists(json, 'individuals') ? undefined : ((json['individuals'] as Array<any>).map(IndividualSearchItemFromJSON)),
        'pageInfo': !exists(json, 'pageInfo') ? undefined : ((json['pageInfo'] as Array<any>).map(SearchPageInfoFromJSON)),
        'totalCount': !exists(json, 'totalCount') ? undefined : json['totalCount'],
    };
}

export function IndividualSearchResultsToJSON(value?: IndividualSearchResults | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'individuals': value.individuals === undefined ? undefined : ((value.individuals as Array<any>).map(IndividualSearchItemToJSON)),
        'pageInfo': value.pageInfo === undefined ? undefined : ((value.pageInfo as Array<any>).map(SearchPageInfoToJSON)),
        'totalCount': value.totalCount,
    };
}


