/* tslint:disable */
/* eslint-disable */
/**
 * Relationships - API 1.0.0
 * API offers information about relationships between legal entities and individuals.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xroad@skattur.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddressItem
 */
export interface AddressItem {
    /**
     * 
     * @type {string}
     * @memberof AddressItem
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressItem
     */
    address?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressItem
     */
    isPostbox?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressItem
     */
    postCode?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressItem
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressItem
     */
    municipalityId?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressItem
     */
    municipality?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressItem
     */
    country?: string;
}

export function AddressItemFromJSON(json: any): AddressItem {
    return AddressItemFromJSONTyped(json, false);
}

export function AddressItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'isPostbox': !exists(json, 'isPostbox') ? undefined : json['isPostbox'],
        'postCode': !exists(json, 'postCode') ? undefined : json['postCode'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'municipalityId': !exists(json, 'municipalityId') ? undefined : json['municipalityId'],
        'municipality': !exists(json, 'municipality') ? undefined : json['municipality'],
        'country': !exists(json, 'country') ? undefined : json['country'],
    };
}

export function AddressItemToJSON(value?: AddressItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'address': value.address,
        'isPostbox': value.isPostbox,
        'postCode': value.postCode,
        'city': value.city,
        'municipalityId': value.municipalityId,
        'municipality': value.municipality,
        'country': value.country,
    };
}


