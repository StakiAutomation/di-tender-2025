/* tslint:disable */
/* eslint-disable */
/**
 * Payment schedule 1.1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChargeTypes,
    ChargeTypesFromJSON,
    ChargeTypesFromJSONTyped,
    ChargeTypesToJSON,
    Payments,
    PaymentsFromJSON,
    PaymentsFromJSONTyped,
    PaymentsToJSON,
} from './';

/**
 * 
 * @export
 * @interface Schedules
 */
export interface Schedules {
    /**
     * schedule type
     * @type {string}
     * @memberof Schedules
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof Schedules
     */
    organizationID: string;
    /**
     * 
     * @type {Array<Payments>}
     * @memberof Schedules
     */
    payments: Array<Payments>;
    /**
     * 
     * @type {Array<ChargeTypes>}
     * @memberof Schedules
     */
    chargeTypes: Array<ChargeTypes>;
}

export function SchedulesFromJSON(json: any): Schedules {
    return SchedulesFromJSONTyped(json, false);
}

export function SchedulesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Schedules {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'organizationID': json['organizationID'],
        'payments': ((json['payments'] as Array<any>).map(PaymentsFromJSON)),
        'chargeTypes': ((json['chargeTypes'] as Array<any>).map(ChargeTypesFromJSON)),
    };
}

export function SchedulesToJSON(value?: Schedules | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'organizationID': value.organizationID,
        'payments': ((value.payments as Array<any>).map(PaymentsToJSON)),
        'chargeTypes': ((value.chargeTypes as Array<any>).map(ChargeTypesToJSON)),
    };
}


