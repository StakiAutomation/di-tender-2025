/* tslint:disable */
/* eslint-disable */
/**
 * Payment schedule 1.1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CompanyConditionsDT
 */
export interface CompanyConditionsDT {
    /**
     * National identifier
     * @type {string}
     * @memberof CompanyConditionsDT
     */
    nationalId: string;
    /**
     * 
     * @type {number}
     * @memberof CompanyConditionsDT
     */
    maxDebtAmount: number;
    /**
     * 
     * @type {number}
     * @memberof CompanyConditionsDT
     */
    totalDebtAmount: number;
    /**
     * 
     * @type {number}
     * @memberof CompanyConditionsDT
     */
    minPayment: number;
    /**
     * 
     * @type {number}
     * @memberof CompanyConditionsDT
     */
    maxPayment: number;
    /**
     * 
     * @type {boolean}
     * @memberof CompanyConditionsDT
     */
    collectionActions: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CompanyConditionsDT
     */
    doNotOwe: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CompanyConditionsDT
     */
    maxDebt: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CompanyConditionsDT
     */
    taxReturns: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CompanyConditionsDT
     */
    vatReturns: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CompanyConditionsDT
     */
    citReturns: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CompanyConditionsDT
     */
    accommodationTaxReturns: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CompanyConditionsDT
     */
    withholdingTaxReturns: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CompanyConditionsDT
     */
    financialStatement: boolean;
}

export function CompanyConditionsDTFromJSON(json: any): CompanyConditionsDT {
    return CompanyConditionsDTFromJSONTyped(json, false);
}

export function CompanyConditionsDTFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyConditionsDT {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nationalId': json['nationalId'],
        'maxDebtAmount': json['maxDebtAmount'],
        'totalDebtAmount': json['totalDebtAmount'],
        'minPayment': json['minPayment'],
        'maxPayment': json['maxPayment'],
        'collectionActions': json['collectionActions'],
        'doNotOwe': json['doNotOwe'],
        'maxDebt': json['maxDebt'],
        'taxReturns': json['taxReturns'],
        'vatReturns': json['vatReturns'],
        'citReturns': json['citReturns'],
        'accommodationTaxReturns': json['accommodationTaxReturns'],
        'withholdingTaxReturns': json['withholdingTaxReturns'],
        'financialStatement': json['financialStatement'],
    };
}

export function CompanyConditionsDTToJSON(value?: CompanyConditionsDT | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nationalId': value.nationalId,
        'maxDebtAmount': value.maxDebtAmount,
        'totalDebtAmount': value.totalDebtAmount,
        'minPayment': value.minPayment,
        'maxPayment': value.maxPayment,
        'collectionActions': value.collectionActions,
        'doNotOwe': value.doNotOwe,
        'maxDebt': value.maxDebt,
        'taxReturns': value.taxReturns,
        'vatReturns': value.vatReturns,
        'citReturns': value.citReturns,
        'accommodationTaxReturns': value.accommodationTaxReturns,
        'withholdingTaxReturns': value.withholdingTaxReturns,
        'financialStatement': value.financialStatement,
    };
}


