/* tslint:disable */
/* eslint-disable */
/**
 * Payment schedule 1.1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ConditionsDT,
    ConditionsDTFromJSON,
    ConditionsDTFromJSONTyped,
    ConditionsDTToJSON,
    ProblemDetailsDT,
    ProblemDetailsDTFromJSON,
    ProblemDetailsDTFromJSONTyped,
    ProblemDetailsDTToJSON,
} from './';

/**
 * 
 * @export
 * @interface ConditionsnationalIdGETResponse
 */
export interface ConditionsnationalIdGETResponse {
    /**
     * 
     * @type {ConditionsDT}
     * @memberof ConditionsnationalIdGETResponse
     */
    conditions?: ConditionsDT;
    /**
     * 
     * @type {ProblemDetailsDT}
     * @memberof ConditionsnationalIdGETResponse
     */
    error?: ProblemDetailsDT;
}

export function ConditionsnationalIdGETResponseFromJSON(json: any): ConditionsnationalIdGETResponse {
    return ConditionsnationalIdGETResponseFromJSONTyped(json, false);
}

export function ConditionsnationalIdGETResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConditionsnationalIdGETResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conditions': !exists(json, 'conditions') ? undefined : ConditionsDTFromJSON(json['conditions']),
        'error': !exists(json, 'error') ? undefined : ProblemDetailsDTFromJSON(json['error']),
    };
}

export function ConditionsnationalIdGETResponseToJSON(value?: ConditionsnationalIdGETResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conditions': ConditionsDTToJSON(value.conditions),
        'error': ProblemDetailsDTToJSON(value.error),
    };
}


