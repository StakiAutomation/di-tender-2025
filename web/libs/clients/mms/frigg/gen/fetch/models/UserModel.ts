/* tslint:disable */
/* eslint-disable */
/**
 * MMS FORM SERVICE API
 * Frigg - student information system
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressModel,
    AddressModelFromJSON,
    AddressModelFromJSONTyped,
    AddressModelToJSON,
    AgentModel,
    AgentModelFromJSON,
    AgentModelFromJSONTyped,
    AgentModelToJSON,
    MembershipModel,
    MembershipModelFromJSON,
    MembershipModelFromJSONTyped,
    MembershipModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserModel
 */
export interface UserModel {
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    nationalId: string;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    name: string;
    /**
     * 
     * @type {object}
     * @memberof UserModel
     */
    preferredName: object | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserModel
     */
    pronouns: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    gradeLevel: string;
    /**
     * 
     * @type {object}
     * @memberof UserModel
     */
    email: object | null;
    /**
     * 
     * @type {AddressModel}
     * @memberof UserModel
     */
    domicile: AddressModel | null;
    /**
     * 
     * @type {AddressModel}
     * @memberof UserModel
     */
    residence: AddressModel | null;
    /**
     * 
     * @type {object}
     * @memberof UserModel
     */
    primaryOrgId: object;
    /**
     * 
     * @type {Array<MembershipModel>}
     * @memberof UserModel
     */
    memberships: Array<MembershipModel> | null;
    /**
     * 
     * @type {Array<AgentModel>}
     * @memberof UserModel
     */
    agents: Array<AgentModel> | null;
    /**
     * 
     * @type {object}
     * @memberof UserModel
     */
    phone: object;
    /**
     * 
     * @type {object}
     * @memberof UserModel
     */
    mobile: object;
}

export function UserModelFromJSON(json: any): UserModel {
    return UserModelFromJSONTyped(json, false);
}

export function UserModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'nationalId': json['nationalId'],
        'name': json['name'],
        'preferredName': json['preferredName'],
        'pronouns': json['pronouns'],
        'gradeLevel': json['gradeLevel'],
        'email': json['email'],
        'domicile': AddressModelFromJSON(json['domicile']),
        'residence': AddressModelFromJSON(json['residence']),
        'primaryOrgId': json['primaryOrgId'],
        'memberships': (json['memberships'] === null ? null : (json['memberships'] as Array<any>).map(MembershipModelFromJSON)),
        'agents': (json['agents'] === null ? null : (json['agents'] as Array<any>).map(AgentModelFromJSON)),
        'phone': json['phone'],
        'mobile': json['mobile'],
    };
}

export function UserModelToJSON(value?: UserModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'nationalId': value.nationalId,
        'name': value.name,
        'preferredName': value.preferredName,
        'pronouns': value.pronouns,
        'gradeLevel': value.gradeLevel,
        'email': value.email,
        'domicile': AddressModelToJSON(value.domicile),
        'residence': AddressModelToJSON(value.residence),
        'primaryOrgId': value.primaryOrgId,
        'memberships': (value.memberships === null ? null : (value.memberships as Array<any>).map(MembershipModelToJSON)),
        'agents': (value.agents === null ? null : (value.agents as Array<any>).map(AgentModelToJSON)),
        'phone': value.phone,
        'mobile': value.mobile,
    };
}


