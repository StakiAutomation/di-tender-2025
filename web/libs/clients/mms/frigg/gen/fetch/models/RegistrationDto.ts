/* tslint:disable */
/* eslint-disable */
/**
 * MMS FORM SERVICE API
 * Frigg - student information system
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressDto,
    AddressDtoFromJSON,
    AddressDtoFromJSONTyped,
    AddressDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface RegistrationDto
 */
export interface RegistrationDto {
    /**
     * If a user has an open ongoing registration, for exaple first year students submit the id here
     * @type {string}
     * @memberof RegistrationDto
     */
    preRegisteredId?: string;
    /**
     * The school a student should or does belong to, pre registered school or current school
     * @type {string}
     * @memberof RegistrationDto
     */
    defaultOrg: string;
    /**
     * The school selected for a student in the application process
     * @type {string}
     * @memberof RegistrationDto
     */
    selectedOrg: string;
    /**
     * 
     * @type {boolean}
     * @memberof RegistrationDto
     */
    requestingMeeting?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof RegistrationDto
     */
    expectedStartDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof RegistrationDto
     */
    expectedEndDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof RegistrationDto
     */
    reason?: string;
    /**
     * 
     * @type {AddressDto}
     * @memberof RegistrationDto
     */
    newDomicile?: AddressDto;
}

export function RegistrationDtoFromJSON(json: any): RegistrationDto {
    return RegistrationDtoFromJSONTyped(json, false);
}

export function RegistrationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegistrationDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'preRegisteredId': !exists(json, 'preRegisteredId') ? undefined : json['preRegisteredId'],
        'defaultOrg': json['defaultOrg'],
        'selectedOrg': json['selectedOrg'],
        'requestingMeeting': !exists(json, 'requestingMeeting') ? undefined : json['requestingMeeting'],
        'expectedStartDate': (new Date(json['expectedStartDate'])),
        'expectedEndDate': !exists(json, 'expectedEndDate') ? undefined : (new Date(json['expectedEndDate'])),
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'newDomicile': !exists(json, 'newDomicile') ? undefined : AddressDtoFromJSON(json['newDomicile']),
    };
}

export function RegistrationDtoToJSON(value?: RegistrationDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'preRegisteredId': value.preRegisteredId,
        'defaultOrg': value.defaultOrg,
        'selectedOrg': value.selectedOrg,
        'requestingMeeting': value.requestingMeeting,
        'expectedStartDate': (value.expectedStartDate.toISOString()),
        'expectedEndDate': value.expectedEndDate === undefined ? undefined : (value.expectedEndDate.toISOString()),
        'reason': value.reason,
        'newDomicile': AddressDtoToJSON(value.newDomicile),
    };
}


