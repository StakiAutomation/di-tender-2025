/* tslint:disable */
/* eslint-disable */
/**
 * MMS FORM SERVICE API
 * Frigg - student information system
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressDto,
    AddressDtoFromJSON,
    AddressDtoFromJSONTyped,
    AddressDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserDto
 */
export interface UserDto {
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    nationalId: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    preferredName?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserDto
     */
    pronouns?: Array<string>;
    /**
     * 
     * @type {AddressDto}
     * @memberof UserDto
     */
    domicile?: AddressDto;
    /**
     * 
     * @type {AddressDto}
     * @memberof UserDto
     */
    residence?: AddressDto;
}

export function UserDtoFromJSON(json: any): UserDto {
    return UserDtoFromJSONTyped(json, false);
}

export function UserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'nationalId': json['nationalId'],
        'preferredName': !exists(json, 'preferredName') ? undefined : json['preferredName'],
        'pronouns': !exists(json, 'pronouns') ? undefined : json['pronouns'],
        'domicile': !exists(json, 'domicile') ? undefined : AddressDtoFromJSON(json['domicile']),
        'residence': !exists(json, 'residence') ? undefined : AddressDtoFromJSON(json['residence']),
    };
}

export function UserDtoToJSON(value?: UserDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'nationalId': value.nationalId,
        'preferredName': value.preferredName,
        'pronouns': value.pronouns,
        'domicile': AddressDtoToJSON(value.domicile),
        'residence': AddressDtoToJSON(value.residence),
    };
}


