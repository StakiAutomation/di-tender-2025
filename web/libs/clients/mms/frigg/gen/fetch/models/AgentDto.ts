/* tslint:disable */
/* eslint-disable */
/**
 * MMS FORM SERVICE API
 * Frigg - student information system
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressDto,
    AddressDtoFromJSON,
    AddressDtoFromJSONTyped,
    AddressDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface AgentDto
 */
export interface AgentDto {
    /**
     * 
     * @type {string}
     * @memberof AgentDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AgentDto
     */
    nationalId: string;
    /**
     * 
     * @type {string}
     * @memberof AgentDto
     */
    preferredName?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AgentDto
     */
    pronouns?: Array<string>;
    /**
     * 
     * @type {AddressDto}
     * @memberof AgentDto
     */
    domicile?: AddressDto;
    /**
     * 
     * @type {string}
     * @memberof AgentDto
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentDto
     */
    phone?: string;
    /**
     * Agents connection to the student, strings can be found under key option type "relation"
     * @type {string}
     * @memberof AgentDto
     */
    role: string;
}

export function AgentDtoFromJSON(json: any): AgentDto {
    return AgentDtoFromJSONTyped(json, false);
}

export function AgentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'nationalId': json['nationalId'],
        'preferredName': !exists(json, 'preferredName') ? undefined : json['preferredName'],
        'pronouns': !exists(json, 'pronouns') ? undefined : json['pronouns'],
        'domicile': !exists(json, 'domicile') ? undefined : AddressDtoFromJSON(json['domicile']),
        'email': !exists(json, 'email') ? undefined : json['email'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'role': json['role'],
    };
}

export function AgentDtoToJSON(value?: AgentDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'nationalId': value.nationalId,
        'preferredName': value.preferredName,
        'pronouns': value.pronouns,
        'domicile': AddressDtoToJSON(value.domicile),
        'email': value.email,
        'phone': value.phone,
        'role': value.role,
    };
}


