/* tslint:disable */
/* eslint-disable */
/**
 * MMS FORM SERVICE API
 * Frigg - student information system
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressModel,
    AddressModelFromJSON,
    AddressModelFromJSONTyped,
    AddressModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface OrganizationModel
 */
export interface OrganizationModel {
    /**
     * 
     * @type {string}
     * @memberof OrganizationModel
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationModel
     */
    nationalId: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationModel
     */
    type: OrganizationModelTypeEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof OrganizationModel
     */
    gradeLevels: Array<string>;
    /**
     * 
     * @type {AddressModel}
     * @memberof OrganizationModel
     */
    address: AddressModel | null;
    /**
     * 
     * @type {OrganizationModel}
     * @memberof OrganizationModel
     */
    parent: OrganizationModel | null;
    /**
     * 
     * @type {Array<OrganizationModel>}
     * @memberof OrganizationModel
     */
    children: Array<OrganizationModel> | null;
    /**
     * 
     * @type {object}
     * @memberof OrganizationModel
     */
    unitId: object;
    /**
     * 
     * @type {object}
     * @memberof OrganizationModel
     */
    email: object;
    /**
     * 
     * @type {object}
     * @memberof OrganizationModel
     */
    phone: object;
    /**
     * 
     * @type {object}
     * @memberof OrganizationModel
     */
    website: object;
}

export function OrganizationModelFromJSON(json: any): OrganizationModel {
    return OrganizationModelFromJSONTyped(json, false);
}

export function OrganizationModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'nationalId': json['nationalId'],
        'name': json['name'],
        'type': json['type'],
        'gradeLevels': json['gradeLevels'],
        'address': AddressModelFromJSON(json['address']),
        'parent': OrganizationModelFromJSON(json['parent']),
        'children': (json['children'] === null ? null : (json['children'] as Array<any>).map(OrganizationModelFromJSON)),
        'unitId': json['unitId'],
        'email': json['email'],
        'phone': json['phone'],
        'website': json['website'],
    };
}

export function OrganizationModelToJSON(value?: OrganizationModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'nationalId': value.nationalId,
        'name': value.name,
        'type': value.type,
        'gradeLevels': value.gradeLevels,
        'address': AddressModelToJSON(value.address),
        'parent': OrganizationModelToJSON(value.parent),
        'children': (value.children === null ? null : (value.children as Array<any>).map(OrganizationModelToJSON)),
        'unitId': value.unitId,
        'email': value.email,
        'phone': value.phone,
        'website': value.website,
    };
}

/**
* @export
* @enum {string}
*/
export enum OrganizationModelTypeEnum {
    ChildCare = 'childCare',
    Municipality = 'municipality',
    National = 'national',
    PrivateOwner = 'privateOwner',
    School = 'school'
}


