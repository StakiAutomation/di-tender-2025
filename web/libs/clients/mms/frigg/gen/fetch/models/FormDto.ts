/* tslint:disable */
/* eslint-disable */
/**
 * MMS FORM SERVICE API
 * Frigg - student information system
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AgentDto,
    AgentDtoFromJSON,
    AgentDtoFromJSONTyped,
    AgentDtoToJSON,
    HealthDto,
    HealthDtoFromJSON,
    HealthDtoFromJSONTyped,
    HealthDtoToJSON,
    LanguageDto,
    LanguageDtoFromJSON,
    LanguageDtoFromJSONTyped,
    LanguageDtoToJSON,
    RegistrationDto,
    RegistrationDtoFromJSON,
    RegistrationDtoFromJSONTyped,
    RegistrationDtoToJSON,
    SchoolMealDto,
    SchoolMealDtoFromJSON,
    SchoolMealDtoFromJSONTyped,
    SchoolMealDtoToJSON,
    SocialDto,
    SocialDtoFromJSON,
    SocialDtoFromJSONTyped,
    SocialDtoToJSON,
    UserDto,
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface FormDto
 */
export interface FormDto {
    /**
     * 
     * @type {string}
     * @memberof FormDto
     */
    type: FormDtoTypeEnum;
    /**
     * 
     * @type {UserDto}
     * @memberof FormDto
     */
    user: UserDto;
    /**
     * 
     * @type {Array<AgentDto>}
     * @memberof FormDto
     */
    agents?: Array<AgentDto>;
    /**
     * 
     * @type {RegistrationDto}
     * @memberof FormDto
     */
    registration?: RegistrationDto;
    /**
     * 
     * @type {HealthDto}
     * @memberof FormDto
     */
    health?: HealthDto;
    /**
     * 
     * @type {SocialDto}
     * @memberof FormDto
     */
    social?: SocialDto;
    /**
     * 
     * @type {LanguageDto}
     * @memberof FormDto
     */
    language?: LanguageDto;
    /**
     * 
     * @type {SchoolMealDto}
     * @memberof FormDto
     */
    schoolMeal?: SchoolMealDto;
}

export function FormDtoFromJSON(json: any): FormDto {
    return FormDtoFromJSONTyped(json, false);
}

export function FormDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'user': UserDtoFromJSON(json['user']),
        'agents': !exists(json, 'agents') ? undefined : ((json['agents'] as Array<any>).map(AgentDtoFromJSON)),
        'registration': !exists(json, 'registration') ? undefined : RegistrationDtoFromJSON(json['registration']),
        'health': !exists(json, 'health') ? undefined : HealthDtoFromJSON(json['health']),
        'social': !exists(json, 'social') ? undefined : SocialDtoFromJSON(json['social']),
        'language': !exists(json, 'language') ? undefined : LanguageDtoFromJSON(json['language']),
        'schoolMeal': !exists(json, 'schoolMeal') ? undefined : SchoolMealDtoFromJSON(json['schoolMeal']),
    };
}

export function FormDtoToJSON(value?: FormDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'user': UserDtoToJSON(value.user),
        'agents': value.agents === undefined ? undefined : ((value.agents as Array<any>).map(AgentDtoToJSON)),
        'registration': RegistrationDtoToJSON(value.registration),
        'health': HealthDtoToJSON(value.health),
        'social': SocialDtoToJSON(value.social),
        'language': LanguageDtoToJSON(value.language),
        'schoolMeal': SchoolMealDtoToJSON(value.schoolMeal),
    };
}

/**
* @export
* @enum {string}
*/
export enum FormDtoTypeEnum {
    Registration = 'registration'
}


