/* tslint:disable */
/* eslint-disable */
/**
 * Grade API
 * This is the API for the Grade system.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    StudentAssessmentViewModel,
    StudentAssessmentViewModelFromJSON,
    StudentAssessmentViewModelToJSON,
} from '../models';

export interface PublicGradeControllerGetStudentAssessmentRequest {
    nationalId: string;
}

export interface PublicGradeV2ControllerGetStudentAssessmentRequest {
    nationalId: string;
}

/**
 * 
 */
export class GradesApi extends runtime.BaseAPI {

    /**
     */
    async publicGradeControllerGetStudentAssessmentRaw(requestParameters: PublicGradeControllerGetStudentAssessmentRequest): Promise<runtime.ApiResponse<StudentAssessmentViewModel>> {
        if (requestParameters.nationalId === null || requestParameters.nationalId === undefined) {
            throw new runtime.RequiredError('nationalId','Required parameter requestParameters.nationalId was null or undefined when calling publicGradeControllerGetStudentAssessment.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/public/studentAssessments/{nationalId}`.replace(`{${"nationalId"}}`, encodeURIComponent(String(requestParameters.nationalId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => StudentAssessmentViewModelFromJSON(jsonValue));
    }

    /**
     */
    async publicGradeControllerGetStudentAssessment(requestParameters: PublicGradeControllerGetStudentAssessmentRequest): Promise<StudentAssessmentViewModel> {
        const response = await this.publicGradeControllerGetStudentAssessmentRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async publicGradeV2ControllerGetStudentAssessmentRaw(requestParameters: PublicGradeV2ControllerGetStudentAssessmentRequest): Promise<runtime.ApiResponse<StudentAssessmentViewModel>> {
        if (requestParameters.nationalId === null || requestParameters.nationalId === undefined) {
            throw new runtime.RequiredError('nationalId','Required parameter requestParameters.nationalId was null or undefined when calling publicGradeV2ControllerGetStudentAssessment.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v2/public/studentAssessments/{nationalId}`.replace(`{${"nationalId"}}`, encodeURIComponent(String(requestParameters.nationalId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => StudentAssessmentViewModelFromJSON(jsonValue));
    }

    /**
     */
    async publicGradeV2ControllerGetStudentAssessment(requestParameters: PublicGradeV2ControllerGetStudentAssessmentRequest): Promise<StudentAssessmentViewModel> {
        const response = await this.publicGradeV2ControllerGetStudentAssessmentRaw(requestParameters);
        return await response.value();
    }

}
