/* tslint:disable */
/* eslint-disable */
/**
 * License API
 * This is the API for the License system.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface License
 */
export interface License {
    /**
     * 
     * @type {string}
     * @memberof License
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof License
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof License
     */
    modified: Date;
    /**
     * 
     * @type {Date}
     * @memberof License
     */
    issued: Date;
    /**
     * 
     * @type {string}
     * @memberof License
     */
    nationalId: string;
    /**
     * 
     * @type {object}
     * @memberof License
     */
    type: object;
    /**
     * 
     * @type {string}
     * @memberof License
     */
    fullName: string;
    /**
     * 
     * @type {string}
     * @memberof License
     */
    issuer: string;
    /**
     * 
     * @type {string}
     * @memberof License
     */
    country: string;
}

export function LicenseFromJSON(json: any): License {
    return LicenseFromJSONTyped(json, false);
}

export function LicenseFromJSONTyped(json: any, ignoreDiscriminator: boolean): License {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': (new Date(json['created'])),
        'modified': (new Date(json['modified'])),
        'issued': (new Date(json['issued'])),
        'nationalId': json['nationalId'],
        'type': json['type'],
        'fullName': json['fullName'],
        'issuer': json['issuer'],
        'country': json['country'],
    };
}

export function LicenseToJSON(value?: License | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created': (value.created.toISOString()),
        'modified': (value.modified.toISOString()),
        'issued': (value.issued.toISOString()),
        'nationalId': value.nationalId,
        'type': value.type,
        'fullName': value.fullName,
        'issuer': value.issuer,
        'country': value.country,
    };
}


