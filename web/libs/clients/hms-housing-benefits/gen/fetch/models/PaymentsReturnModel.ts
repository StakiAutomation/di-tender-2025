/* tslint:disable */
/* eslint-disable */
/**
 * HusbotAPI
 * HusbotAPI gives overview of payments for housing benefits.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Payment Number from Housing benefit System.
 * @export
 * @interface PaymentsReturnModel
 */
export interface PaymentsReturnModel {
    /**
     * Payment Number from Housing benefit System.
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    nr?: number;
    /**
     * SSN of the person receiving the Housing Benefits payments.
     * @type {string}
     * @memberof PaymentsReturnModel
     */
    kennitala?: string | null;
    /**
     * Name of the person receiving the Housing Benefits payments.
     * @type {string}
     * @memberof PaymentsReturnModel
     */
    name?: string | null;
    /**
     * Application adress.
     * @type {string}
     * @memberof PaymentsReturnModel
     */
    address?: string | null;
    /**
     * Number of days within a rental month.
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    noDays?: number;
    /**
     * Date of calculation of payments done in the Housing Benefit System.
     * @type {Date}
     * @memberof PaymentsReturnModel
     */
    dateCalculation?: Date | null;
    /**
     * Payment for rental month.
     * @type {string}
     * @memberof PaymentsReturnModel
     */
    month?: string | null;
    /**
     * Date of payment transfer to account.
     * @type {Date}
     * @memberof PaymentsReturnModel
     */
    dateTransfer?: Date | null;
    /**
     * Type of transaction e.g. G(payment) K(claim) and L(FinalSettlement).
     * @type {string}
     * @memberof PaymentsReturnModel
     */
    transactionType?: string | null;
    /**
     * Type of calculation e.g. "Claim paid", "re-calculation" , "Final Settlement", "Calculation".
     * @type {string}
     * @memberof PaymentsReturnModel
     */
    calculationType?: string | null;
    /**
     * Actual payment.
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    paymentActual?: number;
    /**
     * Bank account of the person receiving payment.
     * @type {string}
     * @memberof PaymentsReturnModel
     */
    bankAccountMerged?: string | null;
    /**
     * Amount paid of Debt.
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    paidOfDebt?: number | null;
    /**
     * Payment before Debt.
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    paymentBeforeDebt?: number;
    /**
     * Basis for Benefit Rights.
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    benefit?: number | null;
    /**
     * Reduction due to applicant income.
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    reductionIncome?: number | null;
    /**
     * Reduction due to applicant assest.
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    reductionAssets?: number | null;
    /**
     * Reduction due to applicant housing cost.
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    reductionHousingCost?: number | null;
    /**
     * Total income of applicant.
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    totalIncome?: number | null;
    /**
     * Total debt.
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    remainDebt?: number | null;
    /**
     * Origin of payment, e.g. special payments(Sérstakar) or standard payments(Húsbót).
     * @type {number}
     * @memberof PaymentsReturnModel
     */
    paymentOrigin?: number | null;
}

export function PaymentsReturnModelFromJSON(json: any): PaymentsReturnModel {
    return PaymentsReturnModelFromJSONTyped(json, false);
}

export function PaymentsReturnModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentsReturnModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nr': !exists(json, 'nr') ? undefined : json['nr'],
        'kennitala': !exists(json, 'kennitala') ? undefined : json['kennitala'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'noDays': !exists(json, 'noDays') ? undefined : json['noDays'],
        'dateCalculation': !exists(json, 'dateCalculation') ? undefined : (json['dateCalculation'] === null ? null : new Date(json['dateCalculation'])),
        'month': !exists(json, 'month') ? undefined : json['month'],
        'dateTransfer': !exists(json, 'dateTransfer') ? undefined : (json['dateTransfer'] === null ? null : new Date(json['dateTransfer'])),
        'transactionType': !exists(json, 'transactionType') ? undefined : json['transactionType'],
        'calculationType': !exists(json, 'calculationType') ? undefined : json['calculationType'],
        'paymentActual': !exists(json, 'paymentActual') ? undefined : json['paymentActual'],
        'bankAccountMerged': !exists(json, 'bankAccountMerged') ? undefined : json['bankAccountMerged'],
        'paidOfDebt': !exists(json, 'paidOfDebt') ? undefined : json['paidOfDebt'],
        'paymentBeforeDebt': !exists(json, 'paymentBeforeDebt') ? undefined : json['paymentBeforeDebt'],
        'benefit': !exists(json, 'benefit') ? undefined : json['benefit'],
        'reductionIncome': !exists(json, 'reductionIncome') ? undefined : json['reductionIncome'],
        'reductionAssets': !exists(json, 'reductionAssets') ? undefined : json['reductionAssets'],
        'reductionHousingCost': !exists(json, 'reductionHousingCost') ? undefined : json['reductionHousingCost'],
        'totalIncome': !exists(json, 'totalIncome') ? undefined : json['totalIncome'],
        'remainDebt': !exists(json, 'remainDebt') ? undefined : json['remainDebt'],
        'paymentOrigin': !exists(json, 'paymentOrigin') ? undefined : json['paymentOrigin'],
    };
}

export function PaymentsReturnModelToJSON(value?: PaymentsReturnModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nr': value.nr,
        'kennitala': value.kennitala,
        'name': value.name,
        'address': value.address,
        'noDays': value.noDays,
        'dateCalculation': value.dateCalculation === undefined ? undefined : (value.dateCalculation === null ? null : value.dateCalculation.toISOString()),
        'month': value.month,
        'dateTransfer': value.dateTransfer === undefined ? undefined : (value.dateTransfer === null ? null : value.dateTransfer.toISOString()),
        'transactionType': value.transactionType,
        'calculationType': value.calculationType,
        'paymentActual': value.paymentActual,
        'bankAccountMerged': value.bankAccountMerged,
        'paidOfDebt': value.paidOfDebt,
        'paymentBeforeDebt': value.paymentBeforeDebt,
        'benefit': value.benefit,
        'reductionIncome': value.reductionIncome,
        'reductionAssets': value.reductionAssets,
        'reductionHousingCost': value.reductionHousingCost,
        'totalIncome': value.totalIncome,
        'remainDebt': value.remainDebt,
        'paymentOrigin': value.paymentOrigin,
    };
}


