/* tslint:disable */
/* eslint-disable */
/**
 * FOS - Parental Leaves API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApplicationRights,
    ApplicationRightsFromJSON,
    ApplicationRightsFromJSONTyped,
    ApplicationRightsToJSON,
    Attachment,
    AttachmentFromJSON,
    AttachmentFromJSONTyped,
    AttachmentToJSON,
    Employer,
    EmployerFromJSON,
    EmployerFromJSONTyped,
    EmployerToJSON,
    PaymentInfo,
    PaymentInfoFromJSON,
    PaymentInfoFromJSONTyped,
    PaymentInfoToJSON,
    Period,
    PeriodFromJSON,
    PeriodFromJSONTyped,
    PeriodToJSON,
} from './';

/**
 * 
 * @export
 * @interface ParentalLeave
 */
export interface ParentalLeave {
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    adoptionDate?: string;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    applicationId: string;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    applicationFundId?: string;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    applicant: string;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    otherParentId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    expectedDateOfBirth: string;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    dateOfBirth: string;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    phoneNumber: string;
    /**
     * 
     * @type {PaymentInfo}
     * @memberof ParentalLeave
     */
    paymentInfo: PaymentInfo;
    /**
     * 
     * @type {Array<Period>}
     * @memberof ParentalLeave
     */
    periods?: Array<Period>;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    applicationComment?: string | null;
    /**
     * 
     * @type {Array<Employer>}
     * @memberof ParentalLeave
     */
    employers?: Array<Employer>;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    rightsCode: string;
    /**
     * 
     * @type {Array<Attachment>}
     * @memberof ParentalLeave
     */
    attachments?: Array<Attachment> | null;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    testData?: string;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    noOfChildren?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ParentalLeave
     */
    language?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ParentalLeave
     */
    otherParentBlocked?: boolean;
    /**
     * 
     * @type {Array<ApplicationRights>}
     * @memberof ParentalLeave
     */
    applicationRights?: Array<ApplicationRights>;
}

export function ParentalLeaveFromJSON(json: any): ParentalLeave {
    return ParentalLeaveFromJSONTyped(json, false);
}

export function ParentalLeaveFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParentalLeave {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'adoptionDate': !exists(json, 'adoptionDate') ? undefined : json['adoptionDate'],
        'applicationId': json['applicationId'],
        'applicationFundId': !exists(json, 'applicationFundId') ? undefined : json['applicationFundId'],
        'applicant': json['applicant'],
        'otherParentId': !exists(json, 'otherParentId') ? undefined : json['otherParentId'],
        'expectedDateOfBirth': json['expectedDateOfBirth'],
        'dateOfBirth': json['dateOfBirth'],
        'email': json['email'],
        'phoneNumber': json['phoneNumber'],
        'paymentInfo': PaymentInfoFromJSON(json['paymentInfo']),
        'periods': !exists(json, 'periods') ? undefined : ((json['periods'] as Array<any>).map(PeriodFromJSON)),
        'applicationComment': !exists(json, 'applicationComment') ? undefined : json['applicationComment'],
        'employers': !exists(json, 'employers') ? undefined : ((json['employers'] as Array<any>).map(EmployerFromJSON)),
        'status': json['status'],
        'rightsCode': json['rightsCode'],
        'attachments': !exists(json, 'attachments') ? undefined : (json['attachments'] === null ? null : (json['attachments'] as Array<any>).map(AttachmentFromJSON)),
        'testData': !exists(json, 'testData') ? undefined : json['testData'],
        'noOfChildren': !exists(json, 'noOfChildren') ? undefined : json['noOfChildren'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'language': !exists(json, 'language') ? undefined : json['language'],
        'otherParentBlocked': !exists(json, 'otherParentBlocked') ? undefined : json['otherParentBlocked'],
        'applicationRights': !exists(json, 'applicationRights') ? undefined : ((json['applicationRights'] as Array<any>).map(ApplicationRightsFromJSON)),
    };
}

export function ParentalLeaveToJSON(value?: ParentalLeave | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'adoptionDate': value.adoptionDate,
        'applicationId': value.applicationId,
        'applicationFundId': value.applicationFundId,
        'applicant': value.applicant,
        'otherParentId': value.otherParentId,
        'expectedDateOfBirth': value.expectedDateOfBirth,
        'dateOfBirth': value.dateOfBirth,
        'email': value.email,
        'phoneNumber': value.phoneNumber,
        'paymentInfo': PaymentInfoToJSON(value.paymentInfo),
        'periods': value.periods === undefined ? undefined : ((value.periods as Array<any>).map(PeriodToJSON)),
        'applicationComment': value.applicationComment,
        'employers': value.employers === undefined ? undefined : ((value.employers as Array<any>).map(EmployerToJSON)),
        'status': value.status,
        'rightsCode': value.rightsCode,
        'attachments': value.attachments === undefined ? undefined : (value.attachments === null ? null : (value.attachments as Array<any>).map(AttachmentToJSON)),
        'testData': value.testData,
        'noOfChildren': value.noOfChildren,
        'type': value.type,
        'language': value.language,
        'otherParentBlocked': value.otherParentBlocked,
        'applicationRights': value.applicationRights === undefined ? undefined : ((value.applicationRights as Array<any>).map(ApplicationRightsToJSON)),
    };
}


