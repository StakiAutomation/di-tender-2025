/* tslint:disable */
/* eslint-disable */
/**
 * SGS Rest API
 * Mileage reading API developed in .Net8.0 - Release-24 : 20250306.1
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tolvuhjalp@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Model to post mileage reading
 * @export
 * @interface PostMileageReadingModel
 */
export interface PostMileageReadingModel {
    /**
     * Vehicle permanent number
     * @type {string}
     * @memberof PostMileageReadingModel
     */
    permno: string;
    /**
     * Date of mileage reading, is always sysdate
     * @type {Date}
     * @memberof PostMileageReadingModel
     */
    readonly readDate?: Date | null;
    /**
     * Where does reading come from
     * @type {string}
     * @memberof PostMileageReadingModel
     */
    originCode: string;
    /**
     * Mileage reading
     * @type {number}
     * @memberof PostMileageReadingModel
     */
    mileage: number;
    /**
     * Operation (I,U,D), is always I for Insert
     * @type {string}
     * @memberof PostMileageReadingModel
     */
    readonly operation?: string | null;
    /**
     * If user registering this mileage is not owner/operator, the owner/operator social security number should be in here
     * @type {string}
     * @memberof PostMileageReadingModel
     */
    reportingPersidno?: string | null;
}

export function PostMileageReadingModelFromJSON(json: any): PostMileageReadingModel {
    return PostMileageReadingModelFromJSONTyped(json, false);
}

export function PostMileageReadingModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostMileageReadingModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'permno': json['permno'],
        'readDate': !exists(json, 'readDate') ? undefined : (json['readDate'] === null ? null : new Date(json['readDate'])),
        'originCode': json['originCode'],
        'mileage': json['mileage'],
        'operation': !exists(json, 'operation') ? undefined : json['operation'],
        'reportingPersidno': !exists(json, 'reportingPersidno') ? undefined : json['reportingPersidno'],
    };
}

export function PostMileageReadingModelToJSON(value?: PostMileageReadingModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'permno': value.permno,
        'originCode': value.originCode,
        'mileage': value.mileage,
        'reportingPersidno': value.reportingPersidno,
    };
}


