/* tslint:disable */
/* eslint-disable */
/**
 * SGS Rest API
 * Mileage reading API developed in .Net8.0 - Release-24 : 20250306.1
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tolvuhjalp@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Mileage data transfer object
 * @export
 * @interface MileageReadingDto
 */
export interface MileageReadingDto {
    /**
     * Vehicle permanent number
     * @type {string}
     * @memberof MileageReadingDto
     */
    permno?: string | null;
    /**
     * Internal id
     * @type {number}
     * @memberof MileageReadingDto
     */
    internalId?: number;
    /**
     * Date of mileage reading
     * @type {Date}
     * @memberof MileageReadingDto
     */
    readDate?: Date | null;
    /**
     * Where does reading come from
     * @type {string}
     * @memberof MileageReadingDto
     */
    originCode?: string | null;
    /**
     * Mileage reading
     * @type {number}
     * @memberof MileageReadingDto
     */
    mileage?: number;
    /**
     * Operation (I,U,D)
     * @type {string}
     * @memberof MileageReadingDto
     */
    operation?: string | null;
    /**
     * If user registering this mileage is not owner/operator, the owner/operator social security number should be in here
     * @type {string}
     * @memberof MileageReadingDto
     */
    reportingPersidno?: string | null;
    /**
     * Date of transaction
     * @type {Date}
     * @memberof MileageReadingDto
     */
    transactionDate?: Date | null;
}

export function MileageReadingDtoFromJSON(json: any): MileageReadingDto {
    return MileageReadingDtoFromJSONTyped(json, false);
}

export function MileageReadingDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MileageReadingDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'permno': !exists(json, 'permno') ? undefined : json['permno'],
        'internalId': !exists(json, 'internalId') ? undefined : json['internalId'],
        'readDate': !exists(json, 'readDate') ? undefined : (json['readDate'] === null ? null : new Date(json['readDate'])),
        'originCode': !exists(json, 'originCode') ? undefined : json['originCode'],
        'mileage': !exists(json, 'mileage') ? undefined : json['mileage'],
        'operation': !exists(json, 'operation') ? undefined : json['operation'],
        'reportingPersidno': !exists(json, 'reportingPersidno') ? undefined : json['reportingPersidno'],
        'transactionDate': !exists(json, 'transactionDate') ? undefined : (json['transactionDate'] === null ? null : new Date(json['transactionDate'])),
    };
}

export function MileageReadingDtoToJSON(value?: MileageReadingDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'permno': value.permno,
        'internalId': value.internalId,
        'readDate': value.readDate === undefined ? undefined : (value.readDate === null ? null : value.readDate.toISOString()),
        'originCode': value.originCode,
        'mileage': value.mileage,
        'operation': value.operation,
        'reportingPersidno': value.reportingPersidno,
        'transactionDate': value.transactionDate === undefined ? undefined : (value.transactionDate === null ? null : value.transactionDate.toISOString()),
    };
}


