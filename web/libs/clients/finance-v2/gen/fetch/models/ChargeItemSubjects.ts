/* tslint:disable */
/* eslint-disable */
/**
 * Finance Services v2
 * Finance services verison 2 ,   services for  working with a assessment Year,
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Periods,
    PeriodsFromJSON,
    PeriodsFromJSONTyped,
    PeriodsToJSON,
} from './';

/**
 * 
 * @export
 * @interface ChargeItemSubjects
 */
export interface ChargeItemSubjects {
    /**
     * 
     * @type {string}
     * @memberof ChargeItemSubjects
     */
    chargeItemSubject: string;
    /**
     * 
     * @type {string}
     * @memberof ChargeItemSubjects
     */
    lastMoveDate: string;
    /**
     * 
     * @type {number}
     * @memberof ChargeItemSubjects
     */
    totalAmount: number;
    /**
     * 
     * @type {Array<Periods>}
     * @memberof ChargeItemSubjects
     */
    periods: Array<Periods>;
}

export function ChargeItemSubjectsFromJSON(json: any): ChargeItemSubjects {
    return ChargeItemSubjectsFromJSONTyped(json, false);
}

export function ChargeItemSubjectsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChargeItemSubjects {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chargeItemSubject': json['chargeItemSubject'],
        'lastMoveDate': json['lastMoveDate'],
        'totalAmount': json['totalAmount'],
        'periods': ((json['periods'] as Array<any>).map(PeriodsFromJSON)),
    };
}

export function ChargeItemSubjectsToJSON(value?: ChargeItemSubjects | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chargeItemSubject': value.chargeItemSubject,
        'lastMoveDate': value.lastMoveDate,
        'totalAmount': value.totalAmount,
        'periods': ((value.periods as Array<any>).map(PeriodsToJSON)),
    };
}


