/* tslint:disable */
/* eslint-disable */
/**
 * Forskráning Vegabréfa
 * The API retrieves information about identity documents
 *
 * The version of the OpenAPI document: v1
 * Contact: skra@skra.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    DeliveryAddress,
    DeliveryAddressFromJSON,
    DeliveryAddressToJSON,
} from '../models';

export interface DeliveryAddressGetLookupTablesRequest {
    xRoadClient: string;
}

/**
 * 
 */
export class DeliveryAddressApi extends runtime.BaseAPI {

    /**
     */
    async deliveryAddressGetLookupTablesRaw(requestParameters: DeliveryAddressGetLookupTablesRequest): Promise<runtime.ApiResponse<Array<DeliveryAddress>>> {
        if (requestParameters.xRoadClient === null || requestParameters.xRoadClient === undefined) {
            throw new runtime.RequiredError('xRoadClient','Required parameter requestParameters.xRoadClient was null or undefined when calling deliveryAddressGetLookupTables.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xRoadClient !== undefined && requestParameters.xRoadClient !== null) {
            headerParameters['X-Road-Client'] = String(requestParameters.xRoadClient);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // auth authentication
        }

        const response = await this.request({
            path: `/api/v1/deliveryaddress/deliveryaddresses`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DeliveryAddressFromJSON));
    }

    /**
     */
    async deliveryAddressGetLookupTables(requestParameters: DeliveryAddressGetLookupTablesRequest): Promise<Array<DeliveryAddress>> {
        const response = await this.deliveryAddressGetLookupTablesRaw(requestParameters);
        return await response.value();
    }

}
