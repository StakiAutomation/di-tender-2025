/* tslint:disable */
/* eslint-disable */
/**
 * Forskráning Vegabréfa
 * The API retrieves information about identity documents
 *
 * The version of the OpenAPI document: v1
 * Contact: skra@skra.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IdentityDocumentResponse
 */
export interface IdentityDocumentResponse {
    /**
     * 
     * @type {string}
     * @memberof IdentityDocumentResponse
     */
    productionRequestID?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityDocumentResponse
     */
    number?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityDocumentResponse
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityDocumentResponse
     */
    verboseType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityDocumentResponse
     */
    subType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityDocumentResponse
     */
    status?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof IdentityDocumentResponse
     */
    issuingDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof IdentityDocumentResponse
     */
    expirationDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityDocumentResponse
     */
    displayFirstName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityDocumentResponse
     */
    displayLastName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityDocumentResponse
     */
    mrzFirstName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityDocumentResponse
     */
    mrzLastName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityDocumentResponse
     */
    sex?: string | null;
}

export function IdentityDocumentResponseFromJSON(json: any): IdentityDocumentResponse {
    return IdentityDocumentResponseFromJSONTyped(json, false);
}

export function IdentityDocumentResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityDocumentResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productionRequestID': !exists(json, 'productionRequestID') ? undefined : json['productionRequestID'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'verboseType': !exists(json, 'verboseType') ? undefined : json['verboseType'],
        'subType': !exists(json, 'subType') ? undefined : json['subType'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'issuingDate': !exists(json, 'issuingDate') ? undefined : (json['issuingDate'] === null ? null : new Date(json['issuingDate'])),
        'expirationDate': !exists(json, 'expirationDate') ? undefined : (json['expirationDate'] === null ? null : new Date(json['expirationDate'])),
        'displayFirstName': !exists(json, 'displayFirstName') ? undefined : json['displayFirstName'],
        'displayLastName': !exists(json, 'displayLastName') ? undefined : json['displayLastName'],
        'mrzFirstName': !exists(json, 'mrzFirstName') ? undefined : json['mrzFirstName'],
        'mrzLastName': !exists(json, 'mrzLastName') ? undefined : json['mrzLastName'],
        'sex': !exists(json, 'sex') ? undefined : json['sex'],
    };
}

export function IdentityDocumentResponseToJSON(value?: IdentityDocumentResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'productionRequestID': value.productionRequestID,
        'number': value.number,
        'type': value.type,
        'verboseType': value.verboseType,
        'subType': value.subType,
        'status': value.status,
        'issuingDate': value.issuingDate === undefined ? undefined : (value.issuingDate === null ? null : value.issuingDate.toISOString()),
        'expirationDate': value.expirationDate === undefined ? undefined : (value.expirationDate === null ? null : value.expirationDate.toISOString()),
        'displayFirstName': value.displayFirstName,
        'displayLastName': value.displayLastName,
        'mrzFirstName': value.mrzFirstName,
        'mrzLastName': value.mrzLastName,
        'sex': value.sex,
    };
}


