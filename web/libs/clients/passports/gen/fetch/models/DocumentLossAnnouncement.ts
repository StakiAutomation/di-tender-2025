/* tslint:disable */
/* eslint-disable */
/**
 * Forskráning Vegabréfa
 * The API retrieves information about identity documents
 *
 * The version of the OpenAPI document: v1
 * Contact: skra@skra.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentLossAnnouncement
 */
export interface DocumentLossAnnouncement {
    /**
     * 
     * @type {number}
     * @memberof DocumentLossAnnouncement
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof DocumentLossAnnouncement
     */
    announcedByPersonId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentLossAnnouncement
     */
    productionRequestId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentLossAnnouncement
     */
    status?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentLossAnnouncement
     */
    comment?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentLossAnnouncement
     */
    incidentDate?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentLossAnnouncement
     */
    announcementDate?: string | null;
}

export function DocumentLossAnnouncementFromJSON(json: any): DocumentLossAnnouncement {
    return DocumentLossAnnouncementFromJSONTyped(json, false);
}

export function DocumentLossAnnouncementFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentLossAnnouncement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'announcedByPersonId': !exists(json, 'announcedByPersonId') ? undefined : json['announcedByPersonId'],
        'productionRequestId': !exists(json, 'productionRequestId') ? undefined : json['productionRequestId'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'incidentDate': !exists(json, 'incidentDate') ? undefined : json['incidentDate'],
        'announcementDate': !exists(json, 'announcementDate') ? undefined : json['announcementDate'],
    };
}

export function DocumentLossAnnouncementToJSON(value?: DocumentLossAnnouncement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'announcedByPersonId': value.announcedByPersonId,
        'productionRequestId': value.productionRequestId,
        'status': value.status,
        'comment': value.comment,
        'incidentDate': value.incidentDate,
        'announcementDate': value.announcementDate,
    };
}


