/* tslint:disable */
/* eslint-disable */
/**
 * Regulations admin - backend
 * Backend services for regulations admin.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateDraftRegulationCancelDto,
    CreateDraftRegulationCancelDtoFromJSON,
    CreateDraftRegulationCancelDtoToJSON,
    DraftRegulationCancelModel,
    DraftRegulationCancelModelFromJSON,
    DraftRegulationCancelModelToJSON,
    UpdateDraftRegulationCancelDto,
    UpdateDraftRegulationCancelDtoFromJSON,
    UpdateDraftRegulationCancelDtoToJSON,
} from '../models';

export interface DraftRegulationCancelControllerCreateRequest {
    createDraftRegulationCancelDto: CreateDraftRegulationCancelDto;
}

export interface DraftRegulationCancelControllerDeleteRequest {
    id: string;
}

export interface DraftRegulationCancelControllerDeleteRegulationDraftCancelsRequest {
    draftId: string;
}

export interface DraftRegulationCancelControllerUpdateRequest {
    id: string;
    updateDraftRegulationCancelDto: UpdateDraftRegulationCancelDto;
}

/**
 * 
 */
export class DraftRegulationCancelApi extends runtime.BaseAPI {

    /**
     */
    async draftRegulationCancelControllerCreateRaw(requestParameters: DraftRegulationCancelControllerCreateRequest): Promise<runtime.ApiResponse<DraftRegulationCancelModel>> {
        if (requestParameters.createDraftRegulationCancelDto === null || requestParameters.createDraftRegulationCancelDto === undefined) {
            throw new runtime.RequiredError('createDraftRegulationCancelDto','Required parameter requestParameters.createDraftRegulationCancelDto was null or undefined when calling draftRegulationCancelControllerCreate.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/draft_regulation_cancel`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateDraftRegulationCancelDtoToJSON(requestParameters.createDraftRegulationCancelDto),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => DraftRegulationCancelModelFromJSON(jsonValue));
    }

    /**
     */
    async draftRegulationCancelControllerCreate(requestParameters: DraftRegulationCancelControllerCreateRequest): Promise<DraftRegulationCancelModel> {
        const response = await this.draftRegulationCancelControllerCreateRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async draftRegulationCancelControllerDeleteRaw(requestParameters: DraftRegulationCancelControllerDeleteRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling draftRegulationCancelControllerDelete.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/draft_regulation_cancel/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async draftRegulationCancelControllerDelete(requestParameters: DraftRegulationCancelControllerDeleteRequest): Promise<void> {
        await this.draftRegulationCancelControllerDeleteRaw(requestParameters);
    }

    /**
     */
    async draftRegulationCancelControllerDeleteRegulationDraftCancelsRaw(requestParameters: DraftRegulationCancelControllerDeleteRegulationDraftCancelsRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.draftId === null || requestParameters.draftId === undefined) {
            throw new runtime.RequiredError('draftId','Required parameter requestParameters.draftId was null or undefined when calling draftRegulationCancelControllerDeleteRegulationDraftCancels.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/draft_regulation_cancel/{draftId}`.replace(`{${"draftId"}}`, encodeURIComponent(String(requestParameters.draftId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async draftRegulationCancelControllerDeleteRegulationDraftCancels(requestParameters: DraftRegulationCancelControllerDeleteRegulationDraftCancelsRequest): Promise<void> {
        await this.draftRegulationCancelControllerDeleteRegulationDraftCancelsRaw(requestParameters);
    }

    /**
     */
    async draftRegulationCancelControllerUpdateRaw(requestParameters: DraftRegulationCancelControllerUpdateRequest): Promise<runtime.ApiResponse<DraftRegulationCancelModel>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling draftRegulationCancelControllerUpdate.');
        }

        if (requestParameters.updateDraftRegulationCancelDto === null || requestParameters.updateDraftRegulationCancelDto === undefined) {
            throw new runtime.RequiredError('updateDraftRegulationCancelDto','Required parameter requestParameters.updateDraftRegulationCancelDto was null or undefined when calling draftRegulationCancelControllerUpdate.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/draft_regulation_cancel/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateDraftRegulationCancelDtoToJSON(requestParameters.updateDraftRegulationCancelDto),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => DraftRegulationCancelModelFromJSON(jsonValue));
    }

    /**
     */
    async draftRegulationCancelControllerUpdate(requestParameters: DraftRegulationCancelControllerUpdateRequest): Promise<DraftRegulationCancelModel> {
        const response = await this.draftRegulationCancelControllerUpdateRaw(requestParameters);
        return await response.value();
    }

}
