/* tslint:disable */
/* eslint-disable */
/**
 * Regulations admin - backend
 * Backend services for regulations admin.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateDraftRegulationChangeDto,
    CreateDraftRegulationChangeDtoFromJSON,
    CreateDraftRegulationChangeDtoToJSON,
    DraftRegulationChangeModel,
    DraftRegulationChangeModelFromJSON,
    DraftRegulationChangeModelToJSON,
    UpdateDraftRegulationChangeDto,
    UpdateDraftRegulationChangeDtoFromJSON,
    UpdateDraftRegulationChangeDtoToJSON,
} from '../models';

export interface DraftRegulationChangeControllerCreateRequest {
    createDraftRegulationChangeDto: CreateDraftRegulationChangeDto;
}

export interface DraftRegulationChangeControllerDeleteRequest {
    id: string;
}

export interface DraftRegulationChangeControllerUpdateRequest {
    id: string;
    updateDraftRegulationChangeDto: UpdateDraftRegulationChangeDto;
}

/**
 * 
 */
export class DraftRegulationChangeApi extends runtime.BaseAPI {

    /**
     */
    async draftRegulationChangeControllerCreateRaw(requestParameters: DraftRegulationChangeControllerCreateRequest): Promise<runtime.ApiResponse<DraftRegulationChangeModel>> {
        if (requestParameters.createDraftRegulationChangeDto === null || requestParameters.createDraftRegulationChangeDto === undefined) {
            throw new runtime.RequiredError('createDraftRegulationChangeDto','Required parameter requestParameters.createDraftRegulationChangeDto was null or undefined when calling draftRegulationChangeControllerCreate.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/draft_regulation_change`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateDraftRegulationChangeDtoToJSON(requestParameters.createDraftRegulationChangeDto),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => DraftRegulationChangeModelFromJSON(jsonValue));
    }

    /**
     */
    async draftRegulationChangeControllerCreate(requestParameters: DraftRegulationChangeControllerCreateRequest): Promise<DraftRegulationChangeModel> {
        const response = await this.draftRegulationChangeControllerCreateRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async draftRegulationChangeControllerDeleteRaw(requestParameters: DraftRegulationChangeControllerDeleteRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling draftRegulationChangeControllerDelete.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/draft_regulation_change/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async draftRegulationChangeControllerDelete(requestParameters: DraftRegulationChangeControllerDeleteRequest): Promise<void> {
        await this.draftRegulationChangeControllerDeleteRaw(requestParameters);
    }

    /**
     */
    async draftRegulationChangeControllerUpdateRaw(requestParameters: DraftRegulationChangeControllerUpdateRequest): Promise<runtime.ApiResponse<DraftRegulationChangeModel>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling draftRegulationChangeControllerUpdate.');
        }

        if (requestParameters.updateDraftRegulationChangeDto === null || requestParameters.updateDraftRegulationChangeDto === undefined) {
            throw new runtime.RequiredError('updateDraftRegulationChangeDto','Required parameter requestParameters.updateDraftRegulationChangeDto was null or undefined when calling draftRegulationChangeControllerUpdate.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/draft_regulation_change/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateDraftRegulationChangeDtoToJSON(requestParameters.updateDraftRegulationChangeDto),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => DraftRegulationChangeModelFromJSON(jsonValue));
    }

    /**
     */
    async draftRegulationChangeControllerUpdate(requestParameters: DraftRegulationChangeControllerUpdateRequest): Promise<DraftRegulationChangeModel> {
        const response = await this.draftRegulationChangeControllerUpdateRaw(requestParameters);
        return await response.value();
    }

}
