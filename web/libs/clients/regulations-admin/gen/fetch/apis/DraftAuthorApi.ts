/* tslint:disable */
/* eslint-disable */
/**
 * Regulations admin - backend
 * Backend services for regulations admin.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateDraftAuthorDto,
    CreateDraftAuthorDtoFromJSON,
    CreateDraftAuthorDtoToJSON,
    DraftAuthorModel,
    DraftAuthorModelFromJSON,
    DraftAuthorModelToJSON,
} from '../models';

export interface DraftAuthorControllerCreateRequest {
    createDraftAuthorDto: CreateDraftAuthorDto;
}

/**
 * 
 */
export class DraftAuthorApi extends runtime.BaseAPI {

    /**
     */
    async draftAuthorControllerCreateRaw(requestParameters: DraftAuthorControllerCreateRequest): Promise<runtime.ApiResponse<DraftAuthorModel>> {
        if (requestParameters.createDraftAuthorDto === null || requestParameters.createDraftAuthorDto === undefined) {
            throw new runtime.RequiredError('createDraftAuthorDto','Required parameter requestParameters.createDraftAuthorDto was null or undefined when calling draftAuthorControllerCreate.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/draft_author`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateDraftAuthorDtoToJSON(requestParameters.createDraftAuthorDto),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => DraftAuthorModelFromJSON(jsonValue));
    }

    /**
     */
    async draftAuthorControllerCreate(requestParameters: DraftAuthorControllerCreateRequest): Promise<DraftAuthorModel> {
        const response = await this.draftAuthorControllerCreateRaw(requestParameters);
        return await response.value();
    }

}
