/* tslint:disable */
/* eslint-disable */
/**
 * Regulations admin - backend
 * Backend services for regulations admin.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DraftRegulationCancelModel,
    DraftRegulationCancelModelFromJSON,
    DraftRegulationCancelModelFromJSONTyped,
    DraftRegulationCancelModelToJSON,
    DraftRegulationChangeModel,
    DraftRegulationChangeModelFromJSON,
    DraftRegulationChangeModelFromJSONTyped,
    DraftRegulationChangeModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface DraftRegulationModel
 */
export interface DraftRegulationModel {
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    draftingStatus: string;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    text: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DraftRegulationModel
     */
    appendixes: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    comments: string;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    draftingNotes: string;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    idealPublishDate: string;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    ministry: string;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    signatureDate: string;
    /**
     * 
     * @type {Date}
     * @memberof DraftRegulationModel
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof DraftRegulationModel
     */
    modified: Date;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    signatureText: string;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    effectiveDate: string;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    type: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DraftRegulationModel
     */
    authors: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof DraftRegulationModel
     */
    lawChapters: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DraftRegulationModel
     */
    signedDocumentUrl: string;
    /**
     * 
     * @type {boolean}
     * @memberof DraftRegulationModel
     */
    fastTrack: boolean;
    /**
     * 
     * @type {Array<DraftRegulationChangeModel>}
     * @memberof DraftRegulationModel
     */
    changes?: Array<DraftRegulationChangeModel>;
    /**
     * 
     * @type {Array<DraftRegulationCancelModel>}
     * @memberof DraftRegulationModel
     */
    cancels?: Array<DraftRegulationCancelModel>;
}

export function DraftRegulationModelFromJSON(json: any): DraftRegulationModel {
    return DraftRegulationModelFromJSONTyped(json, false);
}

export function DraftRegulationModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DraftRegulationModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'draftingStatus': json['drafting_status'],
        'name': json['name'],
        'title': json['title'],
        'text': json['text'],
        'appendixes': json['appendixes'],
        'comments': json['comments'],
        'draftingNotes': json['drafting_notes'],
        'idealPublishDate': json['ideal_publish_date'],
        'ministry': json['ministry'],
        'signatureDate': json['signature_date'],
        'created': (new Date(json['created'])),
        'modified': (new Date(json['modified'])),
        'signatureText': json['signature_text'],
        'effectiveDate': json['effective_date'],
        'type': json['type'],
        'authors': json['authors'],
        'lawChapters': json['law_chapters'],
        'signedDocumentUrl': json['signed_document_url'],
        'fastTrack': json['fast_track'],
        'changes': !exists(json, 'changes') ? undefined : ((json['changes'] as Array<any>).map(DraftRegulationChangeModelFromJSON)),
        'cancels': !exists(json, 'cancels') ? undefined : ((json['cancels'] as Array<any>).map(DraftRegulationCancelModelFromJSON)),
    };
}

export function DraftRegulationModelToJSON(value?: DraftRegulationModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'drafting_status': value.draftingStatus,
        'name': value.name,
        'title': value.title,
        'text': value.text,
        'appendixes': value.appendixes,
        'comments': value.comments,
        'drafting_notes': value.draftingNotes,
        'ideal_publish_date': value.idealPublishDate,
        'ministry': value.ministry,
        'signature_date': value.signatureDate,
        'created': (value.created.toISOString()),
        'modified': (value.modified.toISOString()),
        'signature_text': value.signatureText,
        'effective_date': value.effectiveDate,
        'type': value.type,
        'authors': value.authors,
        'law_chapters': value.lawChapters,
        'signed_document_url': value.signedDocumentUrl,
        'fast_track': value.fastTrack,
        'changes': value.changes === undefined ? undefined : ((value.changes as Array<any>).map(DraftRegulationChangeModelToJSON)),
        'cancels': value.cancels === undefined ? undefined : ((value.cancels as Array<any>).map(DraftRegulationCancelModelToJSON)),
    };
}


