/* tslint:disable */
/* eslint-disable */
/**
 * Námskeið
 * Vefþjónusta til þess að fletta upp á og skrá í námskeið.
 *
 * The version of the OpenAPI document: v1
 * Contact: ut@vinnueftirlit.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CourseDTO,
    CourseDTOFromJSON,
    CourseDTOToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

export interface ApiCourseCourseIdGetRequest {
    courseId: string;
}

/**
 * 
 */
export class CourseApi extends runtime.BaseAPI {

    /**
     */
    async apiCourseCourseIdGetRaw(requestParameters: ApiCourseCourseIdGetRequest): Promise<runtime.ApiResponse<CourseDTO>> {
        if (requestParameters.courseId === null || requestParameters.courseId === undefined) {
            throw new runtime.RequiredError('courseId','Required parameter requestParameters.courseId was null or undefined when calling apiCourseCourseIdGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Course/{courseId}`.replace(`{${"courseId"}}`, encodeURIComponent(String(requestParameters.courseId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => CourseDTOFromJSON(jsonValue));
    }

    /**
     */
    async apiCourseCourseIdGet(requestParameters: ApiCourseCourseIdGetRequest): Promise<CourseDTO> {
        const response = await this.apiCourseCourseIdGetRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async apiCourseGetRaw(): Promise<runtime.ApiResponse<Array<CourseDTO>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Course`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CourseDTOFromJSON));
    }

    /**
     */
    async apiCourseGet(): Promise<Array<CourseDTO>> {
        const response = await this.apiCourseGetRaw();
        return await response.value();
    }

}
