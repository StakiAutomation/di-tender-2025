/* tslint:disable */
/* eslint-disable */
/**
 * Námskeið
 * Vefþjónusta til þess að fletta upp á og skrá í námskeið.
 *
 * The version of the OpenAPI document: v1
 * Contact: ut@vinnueftirlit.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CourseDTO
 */
export interface CourseDTO {
    /**
     * 
     * @type {boolean}
     * @memberof CourseDTO
     */
    alwaysOpen?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    category?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    dateFrom?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    dateTo?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    descriptionUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    location?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    name?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CourseDTO
     */
    price?: number;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    registrationUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    courseId?: string;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    status?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    subCategory?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    time?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    feeCodeDirectPayment?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CourseDTO
     */
    feeCodeInvoice?: string | null;
}

export function CourseDTOFromJSON(json: any): CourseDTO {
    return CourseDTOFromJSONTyped(json, false);
}

export function CourseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CourseDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alwaysOpen': !exists(json, 'alwaysOpen') ? undefined : json['alwaysOpen'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'dateFrom': !exists(json, 'dateFrom') ? undefined : json['dateFrom'],
        'dateTo': !exists(json, 'dateTo') ? undefined : json['dateTo'],
        'descriptionUrl': !exists(json, 'descriptionUrl') ? undefined : json['descriptionUrl'],
        'location': !exists(json, 'location') ? undefined : json['location'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'registrationUrl': !exists(json, 'registrationUrl') ? undefined : json['registrationUrl'],
        'courseId': !exists(json, 'courseId') ? undefined : json['courseId'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'subCategory': !exists(json, 'subCategory') ? undefined : json['subCategory'],
        'time': !exists(json, 'time') ? undefined : json['time'],
        'feeCodeDirectPayment': !exists(json, 'feeCodeDirectPayment') ? undefined : json['feeCodeDirectPayment'],
        'feeCodeInvoice': !exists(json, 'feeCodeInvoice') ? undefined : json['feeCodeInvoice'],
    };
}

export function CourseDTOToJSON(value?: CourseDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alwaysOpen': value.alwaysOpen,
        'category': value.category,
        'dateFrom': value.dateFrom,
        'dateTo': value.dateTo,
        'descriptionUrl': value.descriptionUrl,
        'location': value.location,
        'name': value.name,
        'price': value.price,
        'registrationUrl': value.registrationUrl,
        'courseId': value.courseId,
        'status': value.status,
        'subCategory': value.subCategory,
        'time': value.time,
        'feeCodeDirectPayment': value.feeCodeDirectPayment,
        'feeCodeInvoice': value.feeCodeInvoice,
    };
}


