/* tslint:disable */
/* eslint-disable */
/**
 * Health service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DispensationDto,
    DispensationDtoFromJSON,
    DispensationDtoFromJSONTyped,
    DispensationDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface PrescribedItemDto
 */
export interface PrescribedItemDto {
    /**
     * 
     * @type {number}
     * @memberof PrescribedItemDto
     */
    prescribedItemId: number;
    /**
     * 
     * @type {number}
     * @memberof PrescribedItemDto
     */
    prescriptionId: number;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    prescriberId: string;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    prescriberName: string;
    /**
     * 
     * @type {Date}
     * @memberof PrescribedItemDto
     */
    issueDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof PrescribedItemDto
     */
    expiryDate: Date;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    productId: string;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    productName?: string;
    /**
     * Based on the ATC classification
     * @type {string}
     * @memberof PrescribedItemDto
     */
    productType?: string;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    productForm?: string;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    productUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    productStrength?: string;
    /**
     * 
     * @type {number}
     * @memberof PrescribedItemDto
     */
    productQuantity?: number;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    dosageInstructions?: string;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    indication?: string;
    /**
     * 
     * @type {number}
     * @memberof PrescribedItemDto
     */
    totalPrescribedAmount?: number;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    totalPrescribedAmountDisplay?: string;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    category?: PrescribedItemDtoCategoryEnum;
    /**
     * 
     * @type {boolean}
     * @memberof PrescribedItemDto
     */
    isRegiment?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PrescribedItemDto
     */
    isRenewable: boolean;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    renewalBlockedReason?: PrescribedItemDtoRenewalBlockedReasonEnum;
    /**
     * 
     * @type {number}
     * @memberof PrescribedItemDto
     */
    renewalStatus?: PrescribedItemDtoRenewalStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof PrescribedItemDto
     */
    amountRemaining?: number;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    amountRemainingUnit?: string;
    /**
     * 
     * @type {string}
     * @memberof PrescribedItemDto
     */
    amountRemainingDisplay?: string;
    /**
     * 
     * @type {number}
     * @memberof PrescribedItemDto
     */
    percentageRemaining?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PrescribedItemDto
     */
    isFullyDispensed: boolean;
    /**
     * 
     * @type {Array<DispensationDto>}
     * @memberof PrescribedItemDto
     */
    dispensations: Array<DispensationDto>;
}

export function PrescribedItemDtoFromJSON(json: any): PrescribedItemDto {
    return PrescribedItemDtoFromJSONTyped(json, false);
}

export function PrescribedItemDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrescribedItemDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'prescribedItemId': json['prescribedItemId'],
        'prescriptionId': json['prescriptionId'],
        'prescriberId': json['prescriberId'],
        'prescriberName': json['prescriberName'],
        'issueDate': (new Date(json['issueDate'])),
        'expiryDate': (new Date(json['expiryDate'])),
        'productId': json['productId'],
        'productName': !exists(json, 'productName') ? undefined : json['productName'],
        'productType': !exists(json, 'productType') ? undefined : json['productType'],
        'productForm': !exists(json, 'productForm') ? undefined : json['productForm'],
        'productUrl': !exists(json, 'productUrl') ? undefined : json['productUrl'],
        'productStrength': !exists(json, 'productStrength') ? undefined : json['productStrength'],
        'productQuantity': !exists(json, 'productQuantity') ? undefined : json['productQuantity'],
        'dosageInstructions': !exists(json, 'dosageInstructions') ? undefined : json['dosageInstructions'],
        'indication': !exists(json, 'indication') ? undefined : json['indication'],
        'totalPrescribedAmount': !exists(json, 'totalPrescribedAmount') ? undefined : json['totalPrescribedAmount'],
        'totalPrescribedAmountDisplay': !exists(json, 'totalPrescribedAmountDisplay') ? undefined : json['totalPrescribedAmountDisplay'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'isRegiment': !exists(json, 'isRegiment') ? undefined : json['isRegiment'],
        'isRenewable': json['isRenewable'],
        'renewalBlockedReason': !exists(json, 'renewalBlockedReason') ? undefined : json['renewalBlockedReason'],
        'renewalStatus': !exists(json, 'renewalStatus') ? undefined : json['renewalStatus'],
        'amountRemaining': !exists(json, 'amountRemaining') ? undefined : json['amountRemaining'],
        'amountRemainingUnit': !exists(json, 'amountRemainingUnit') ? undefined : json['amountRemainingUnit'],
        'amountRemainingDisplay': !exists(json, 'amountRemainingDisplay') ? undefined : json['amountRemainingDisplay'],
        'percentageRemaining': !exists(json, 'percentageRemaining') ? undefined : json['percentageRemaining'],
        'isFullyDispensed': json['isFullyDispensed'],
        'dispensations': ((json['dispensations'] as Array<any>).map(DispensationDtoFromJSON)),
    };
}

export function PrescribedItemDtoToJSON(value?: PrescribedItemDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'prescribedItemId': value.prescribedItemId,
        'prescriptionId': value.prescriptionId,
        'prescriberId': value.prescriberId,
        'prescriberName': value.prescriberName,
        'issueDate': (value.issueDate.toISOString()),
        'expiryDate': (value.expiryDate.toISOString()),
        'productId': value.productId,
        'productName': value.productName,
        'productType': value.productType,
        'productForm': value.productForm,
        'productUrl': value.productUrl,
        'productStrength': value.productStrength,
        'productQuantity': value.productQuantity,
        'dosageInstructions': value.dosageInstructions,
        'indication': value.indication,
        'totalPrescribedAmount': value.totalPrescribedAmount,
        'totalPrescribedAmountDisplay': value.totalPrescribedAmountDisplay,
        'category': value.category,
        'isRegiment': value.isRegiment,
        'isRenewable': value.isRenewable,
        'renewalBlockedReason': value.renewalBlockedReason,
        'renewalStatus': value.renewalStatus,
        'amountRemaining': value.amountRemaining,
        'amountRemainingUnit': value.amountRemainingUnit,
        'amountRemainingDisplay': value.amountRemainingDisplay,
        'percentageRemaining': value.percentageRemaining,
        'isFullyDispensed': value.isFullyDispensed,
        'dispensations': ((value.dispensations as Array<any>).map(DispensationDtoToJSON)),
    };
}

/**
* @export
* @enum {string}
*/
export enum PrescribedItemDtoCategoryEnum {
    Regular = 'regular',
    Pn = 'pn',
    Regimen = 'regimen',
    Owner = 'owner'
}
/**
* @export
* @enum {string}
*/
export enum PrescribedItemDtoRenewalBlockedReasonEnum {
    PendingRequest = 'pendingRequest',
    RejectedRequest = 'rejectedRequest',
    NotFullyDispensed = 'notFullyDispensed',
    IsRegiment = 'isRegiment'
}
/**
* @export
* @enum {string}
*/
export enum PrescribedItemDtoRenewalStatusEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1,
    NUMBER_2 = 2
}


