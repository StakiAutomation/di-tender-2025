/* tslint:disable */
/* eslint-disable */
/**
 * Health service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ReferralContactInfoDto,
    ReferralContactInfoDtoFromJSON,
    ReferralContactInfoDtoFromJSONTyped,
    ReferralContactInfoDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface ReferralDto
 */
export interface ReferralDto {
    /**
     * 
     * @type {string}
     * @memberof ReferralDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ReferralDto
     */
    serviceType: string;
    /**
     * 
     * @type {string}
     * @memberof ReferralDto
     */
    serviceName?: string;
    /**
     * 
     * @type {Date}
     * @memberof ReferralDto
     */
    createdDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ReferralDto
     */
    validUntilDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof ReferralDto
     */
    stateValue?: number;
    /**
     * 
     * @type {string}
     * @memberof ReferralDto
     */
    stateDisplay?: string;
    /**
     * 
     * @type {string}
     * @memberof ReferralDto
     */
    assignedProviderId?: string;
    /**
     * 
     * @type {string}
     * @memberof ReferralDto
     */
    reasonForReferral?: string;
    /**
     * 
     * @type {ReferralContactInfoDto}
     * @memberof ReferralDto
     */
    fromContactInfo: ReferralContactInfoDto;
    /**
     * 
     * @type {ReferralContactInfoDto}
     * @memberof ReferralDto
     */
    toContactInfo: ReferralContactInfoDto;
}

export function ReferralDtoFromJSON(json: any): ReferralDto {
    return ReferralDtoFromJSONTyped(json, false);
}

export function ReferralDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReferralDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'serviceType': json['serviceType'],
        'serviceName': !exists(json, 'serviceName') ? undefined : json['serviceName'],
        'createdDate': !exists(json, 'createdDate') ? undefined : (new Date(json['createdDate'])),
        'validUntilDate': !exists(json, 'validUntilDate') ? undefined : (new Date(json['validUntilDate'])),
        'stateValue': !exists(json, 'stateValue') ? undefined : json['stateValue'],
        'stateDisplay': !exists(json, 'stateDisplay') ? undefined : json['stateDisplay'],
        'assignedProviderId': !exists(json, 'assignedProviderId') ? undefined : json['assignedProviderId'],
        'reasonForReferral': !exists(json, 'reasonForReferral') ? undefined : json['reasonForReferral'],
        'fromContactInfo': ReferralContactInfoDtoFromJSON(json['fromContactInfo']),
        'toContactInfo': ReferralContactInfoDtoFromJSON(json['toContactInfo']),
    };
}

export function ReferralDtoToJSON(value?: ReferralDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'serviceType': value.serviceType,
        'serviceName': value.serviceName,
        'createdDate': value.createdDate === undefined ? undefined : (value.createdDate.toISOString()),
        'validUntilDate': value.validUntilDate === undefined ? undefined : (value.validUntilDate.toISOString()),
        'stateValue': value.stateValue,
        'stateDisplay': value.stateDisplay,
        'assignedProviderId': value.assignedProviderId,
        'reasonForReferral': value.reasonForReferral,
        'fromContactInfo': ReferralContactInfoDtoToJSON(value.fromContactInfo),
        'toContactInfo': ReferralContactInfoDtoToJSON(value.toContactInfo),
    };
}


