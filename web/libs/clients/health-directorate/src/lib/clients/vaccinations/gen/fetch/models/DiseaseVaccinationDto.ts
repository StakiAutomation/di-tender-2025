/* tslint:disable */
/* eslint-disable */
/**
 * Vaccination API
 * The api provides access to information about individuals\' vaccination status and their administered vaccinations.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    VaccinationDto,
    VaccinationDtoFromJSON,
    VaccinationDtoFromJSONTyped,
    VaccinationDtoToJSON,
    VaccinationStatusColor,
    VaccinationStatusColorFromJSON,
    VaccinationStatusColorFromJSONTyped,
    VaccinationStatusColorToJSON,
} from './';

/**
 * 
 * @export
 * @interface DiseaseVaccinationDto
 */
export interface DiseaseVaccinationDto {
    /**
     * 
     * @type {string}
     * @memberof DiseaseVaccinationDto
     */
    diseaseId: string;
    /**
     * 
     * @type {string}
     * @memberof DiseaseVaccinationDto
     */
    diseaseName: string;
    /**
     * 
     * @type {string}
     * @memberof DiseaseVaccinationDto
     */
    diseaseDescription?: string;
    /**
     * Is the vaccination scheduled as in "almenn b√≥lusetning"
     * @type {boolean}
     * @memberof DiseaseVaccinationDto
     */
    isFeatured: boolean;
    /**
     * 
     * @type {string}
     * @memberof DiseaseVaccinationDto
     */
    vaccinationStatus?: DiseaseVaccinationDtoVaccinationStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof DiseaseVaccinationDto
     */
    vaccinationStatusName?: string;
    /**
     * 
     * @type {VaccinationStatusColor}
     * @memberof DiseaseVaccinationDto
     */
    vaccinationStatusColor?: VaccinationStatusColor;
    /**
     * 
     * @type {Date}
     * @memberof DiseaseVaccinationDto
     */
    lastVaccinationDate?: Date;
    /**
     * 
     * @type {Array<VaccinationDto>}
     * @memberof DiseaseVaccinationDto
     */
    vaccinations: Array<VaccinationDto>;
    /**
     * 
     * @type {Array<string>}
     * @memberof DiseaseVaccinationDto
     */
    comments: Array<string>;
}

export function DiseaseVaccinationDtoFromJSON(json: any): DiseaseVaccinationDto {
    return DiseaseVaccinationDtoFromJSONTyped(json, false);
}

export function DiseaseVaccinationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiseaseVaccinationDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'diseaseId': json['diseaseId'],
        'diseaseName': json['diseaseName'],
        'diseaseDescription': !exists(json, 'diseaseDescription') ? undefined : json['diseaseDescription'],
        'isFeatured': json['isFeatured'],
        'vaccinationStatus': !exists(json, 'vaccinationStatus') ? undefined : json['vaccinationStatus'],
        'vaccinationStatusName': !exists(json, 'vaccinationStatusName') ? undefined : json['vaccinationStatusName'],
        'vaccinationStatusColor': !exists(json, 'vaccinationStatusColor') ? undefined : VaccinationStatusColorFromJSON(json['vaccinationStatusColor']),
        'lastVaccinationDate': !exists(json, 'lastVaccinationDate') ? undefined : (new Date(json['lastVaccinationDate'])),
        'vaccinations': ((json['vaccinations'] as Array<any>).map(VaccinationDtoFromJSON)),
        'comments': json['comments'],
    };
}

export function DiseaseVaccinationDtoToJSON(value?: DiseaseVaccinationDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'diseaseId': value.diseaseId,
        'diseaseName': value.diseaseName,
        'diseaseDescription': value.diseaseDescription,
        'isFeatured': value.isFeatured,
        'vaccinationStatus': value.vaccinationStatus,
        'vaccinationStatusName': value.vaccinationStatusName,
        'vaccinationStatusColor': VaccinationStatusColorToJSON(value.vaccinationStatusColor),
        'lastVaccinationDate': value.lastVaccinationDate === undefined ? undefined : (value.lastVaccinationDate.toISOString()),
        'vaccinations': ((value.vaccinations as Array<any>).map(VaccinationDtoToJSON)),
        'comments': value.comments,
    };
}

/**
* @export
* @enum {string}
*/
export enum DiseaseVaccinationDtoVaccinationStatusEnum {
    Valid = 'valid',
    Expired = 'expired',
    Complete = 'complete',
    Incomplete = 'incomplete',
    Undocumented = 'undocumented',
    Unvaccinated = 'unvaccinated',
    Rejected = 'rejected',
    Undetermined = 'undetermined'
}


