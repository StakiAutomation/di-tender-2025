/* tslint:disable */
/* eslint-disable */
/**
 * Vaccination API
 * The api provides access to information about individuals\' vaccination status and their administered vaccinations.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DiseaseRuleTranslationDto,
    DiseaseRuleTranslationDtoFromJSON,
    DiseaseRuleTranslationDtoFromJSONTyped,
    DiseaseRuleTranslationDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateDiseaseRuleDto
 */
export interface UpdateDiseaseRuleDto {
    /**
     * 
     * @type {number}
     * @memberof UpdateDiseaseRuleDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateDiseaseRuleDto
     */
    diseaseId?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateDiseaseRuleDto
     */
    order?: number;
    /**
     * 
     * @type {object}
     * @memberof UpdateDiseaseRuleDto
     */
    type?: object;
    /**
     * 
     * @type {string}
     * @memberof UpdateDiseaseRuleDto
     */
    vaccineCodes?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateDiseaseRuleDto
     */
    cond1Type?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateDiseaseRuleDto
     */
    cond1Min?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateDiseaseRuleDto
     */
    cond1Max?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateDiseaseRuleDto
     */
    cond2Type?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateDiseaseRuleDto
     */
    cond2Min?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateDiseaseRuleDto
     */
    cond2Max?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateDiseaseRuleDto
     */
    cond3Type?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateDiseaseRuleDto
     */
    cond3Min?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateDiseaseRuleDto
     */
    cond3Max?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateDiseaseRuleDto
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateDiseaseRuleDto
     */
    statusName?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateDiseaseRuleDto
     */
    internalComment?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateDiseaseRuleDto
     */
    publicComment?: string;
    /**
     * 
     * @type {Array<DiseaseRuleTranslationDto>}
     * @memberof UpdateDiseaseRuleDto
     */
    translations?: Array<DiseaseRuleTranslationDto>;
}

export function UpdateDiseaseRuleDtoFromJSON(json: any): UpdateDiseaseRuleDto {
    return UpdateDiseaseRuleDtoFromJSONTyped(json, false);
}

export function UpdateDiseaseRuleDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateDiseaseRuleDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'diseaseId': !exists(json, 'diseaseId') ? undefined : json['diseaseId'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'vaccineCodes': !exists(json, 'vaccineCodes') ? undefined : json['vaccineCodes'],
        'cond1Type': !exists(json, 'cond1Type') ? undefined : json['cond1Type'],
        'cond1Min': !exists(json, 'cond1Min') ? undefined : json['cond1Min'],
        'cond1Max': !exists(json, 'cond1Max') ? undefined : json['cond1Max'],
        'cond2Type': !exists(json, 'cond2Type') ? undefined : json['cond2Type'],
        'cond2Min': !exists(json, 'cond2Min') ? undefined : json['cond2Min'],
        'cond2Max': !exists(json, 'cond2Max') ? undefined : json['cond2Max'],
        'cond3Type': !exists(json, 'cond3Type') ? undefined : json['cond3Type'],
        'cond3Min': !exists(json, 'cond3Min') ? undefined : json['cond3Min'],
        'cond3Max': !exists(json, 'cond3Max') ? undefined : json['cond3Max'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'statusName': !exists(json, 'statusName') ? undefined : json['statusName'],
        'internalComment': !exists(json, 'internalComment') ? undefined : json['internalComment'],
        'publicComment': !exists(json, 'publicComment') ? undefined : json['publicComment'],
        'translations': !exists(json, 'translations') ? undefined : ((json['translations'] as Array<any>).map(DiseaseRuleTranslationDtoFromJSON)),
    };
}

export function UpdateDiseaseRuleDtoToJSON(value?: UpdateDiseaseRuleDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'diseaseId': value.diseaseId,
        'order': value.order,
        'type': value.type,
        'vaccineCodes': value.vaccineCodes,
        'cond1Type': value.cond1Type,
        'cond1Min': value.cond1Min,
        'cond1Max': value.cond1Max,
        'cond2Type': value.cond2Type,
        'cond2Min': value.cond2Min,
        'cond2Max': value.cond2Max,
        'cond3Type': value.cond3Type,
        'cond3Min': value.cond3Min,
        'cond3Max': value.cond3Max,
        'status': value.status,
        'statusName': value.statusName,
        'internalComment': value.internalComment,
        'publicComment': value.publicComment,
        'translations': value.translations === undefined ? undefined : ((value.translations as Array<any>).map(DiseaseRuleTranslationDtoToJSON)),
    };
}


