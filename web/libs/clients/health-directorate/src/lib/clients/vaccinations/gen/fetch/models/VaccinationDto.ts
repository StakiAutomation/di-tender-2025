/* tslint:disable */
/* eslint-disable */
/**
 * Vaccination API
 * The api provides access to information about individuals\' vaccination status and their administered vaccinations.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VaccinationDto
 */
export interface VaccinationDto {
    /**
     * 
     * @type {number}
     * @memberof VaccinationDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDto
     */
    nationalId: string;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDto
     */
    vaccineCode: string;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDto
     */
    vaccineCodingSystem: string;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDto
     */
    vaccineCodeDescription: string;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDto
     */
    vaccineCodeDescriptionShort: string;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDto
     */
    vaccineUrl?: string;
    /**
     * 
     * @type {Date}
     * @memberof VaccinationDto
     */
    vaccinationDate: Date;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDto
     */
    vaccinationLocation: string;
    /**
     * 
     * @type {object}
     * @memberof VaccinationDto
     */
    vaccinationAge: object;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDto
     */
    generalComment?: string;
    /**
     * 
     * @type {boolean}
     * @memberof VaccinationDto
     */
    rejected: boolean;
}

export function VaccinationDtoFromJSON(json: any): VaccinationDto {
    return VaccinationDtoFromJSONTyped(json, false);
}

export function VaccinationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VaccinationDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'nationalId': json['nationalId'],
        'vaccineCode': json['vaccineCode'],
        'vaccineCodingSystem': json['vaccineCodingSystem'],
        'vaccineCodeDescription': json['vaccineCodeDescription'],
        'vaccineCodeDescriptionShort': json['vaccineCodeDescriptionShort'],
        'vaccineUrl': !exists(json, 'vaccineUrl') ? undefined : json['vaccineUrl'],
        'vaccinationDate': (new Date(json['vaccinationDate'])),
        'vaccinationLocation': json['vaccinationLocation'],
        'vaccinationAge': json['vaccinationAge'],
        'generalComment': !exists(json, 'generalComment') ? undefined : json['generalComment'],
        'rejected': json['rejected'],
    };
}

export function VaccinationDtoToJSON(value?: VaccinationDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'nationalId': value.nationalId,
        'vaccineCode': value.vaccineCode,
        'vaccineCodingSystem': value.vaccineCodingSystem,
        'vaccineCodeDescription': value.vaccineCodeDescription,
        'vaccineCodeDescriptionShort': value.vaccineCodeDescriptionShort,
        'vaccineUrl': value.vaccineUrl,
        'vaccinationDate': (value.vaccinationDate.toISOString()),
        'vaccinationLocation': value.vaccinationLocation,
        'vaccinationAge': value.vaccinationAge,
        'generalComment': value.generalComment,
        'rejected': value.rejected,
    };
}


