/* tslint:disable */
/* eslint-disable */
/**
 * Vaccination API
 * The api provides access to information about individuals\' vaccination status and their administered vaccinations.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DiseaseRuleDto,
    DiseaseRuleDtoFromJSON,
    DiseaseRuleDtoFromJSONTyped,
    DiseaseRuleDtoToJSON,
    DiseaseTranslationDto,
    DiseaseTranslationDtoFromJSON,
    DiseaseTranslationDtoFromJSONTyped,
    DiseaseTranslationDtoToJSON,
    VaccineDiseaseDto,
    VaccineDiseaseDtoFromJSON,
    VaccineDiseaseDtoFromJSONTyped,
    VaccineDiseaseDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface DiseaseDto
 */
export interface DiseaseDto {
    /**
     * 
     * @type {string}
     * @memberof DiseaseDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof DiseaseDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DiseaseDto
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DiseaseDto
     */
    isFeatured: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DiseaseDto
     */
    isVisible: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DiseaseDto
     */
    hideIfNoVaccinations: boolean;
    /**
     * 
     * @type {Array<VaccineDiseaseDto>}
     * @memberof DiseaseDto
     */
    vaccines: Array<VaccineDiseaseDto>;
    /**
     * 
     * @type {Array<DiseaseRuleDto>}
     * @memberof DiseaseDto
     */
    rules: Array<DiseaseRuleDto>;
    /**
     * 
     * @type {Array<DiseaseTranslationDto>}
     * @memberof DiseaseDto
     */
    translations: Array<DiseaseTranslationDto>;
}

export function DiseaseDtoFromJSON(json: any): DiseaseDto {
    return DiseaseDtoFromJSONTyped(json, false);
}

export function DiseaseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiseaseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'isFeatured': json['isFeatured'],
        'isVisible': json['isVisible'],
        'hideIfNoVaccinations': json['hideIfNoVaccinations'],
        'vaccines': ((json['vaccines'] as Array<any>).map(VaccineDiseaseDtoFromJSON)),
        'rules': ((json['rules'] as Array<any>).map(DiseaseRuleDtoFromJSON)),
        'translations': ((json['translations'] as Array<any>).map(DiseaseTranslationDtoFromJSON)),
    };
}

export function DiseaseDtoToJSON(value?: DiseaseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'isFeatured': value.isFeatured,
        'isVisible': value.isVisible,
        'hideIfNoVaccinations': value.hideIfNoVaccinations,
        'vaccines': ((value.vaccines as Array<any>).map(VaccineDiseaseDtoToJSON)),
        'rules': ((value.rules as Array<any>).map(DiseaseRuleDtoToJSON)),
        'translations': ((value.translations as Array<any>).map(DiseaseTranslationDtoToJSON)),
    };
}


