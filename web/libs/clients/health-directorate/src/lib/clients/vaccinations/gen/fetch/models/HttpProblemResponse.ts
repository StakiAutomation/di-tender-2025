/* tslint:disable */
/* eslint-disable */
/**
 * Vaccination API
 * The api provides access to information about individuals\' vaccination status and their administered vaccinations.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HttpProblemResponse
 */
export interface HttpProblemResponse {
    /**
     * A URI reference that identifies the problem type
     * @type {object}
     * @memberof HttpProblemResponse
     */
    type: object;
    /**
     * A short, human-readable summary of the problem type
     * @type {string}
     * @memberof HttpProblemResponse
     */
    title: string;
    /**
     * The HTTP status code
     * @type {number}
     * @memberof HttpProblemResponse
     */
    status?: number;
    /**
     * A human-readable explanation specific to this occurrence of the problem
     * @type {string}
     * @memberof HttpProblemResponse
     */
    detail?: string;
    /**
     * A URI reference that identifies the specific occurrence of the problem.
     * @type {string}
     * @memberof HttpProblemResponse
     */
    instance?: string;
}

export function HttpProblemResponseFromJSON(json: any): HttpProblemResponse {
    return HttpProblemResponseFromJSONTyped(json, false);
}

export function HttpProblemResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HttpProblemResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'title': json['title'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'detail': !exists(json, 'detail') ? undefined : json['detail'],
        'instance': !exists(json, 'instance') ? undefined : json['instance'],
    };
}

export function HttpProblemResponseToJSON(value?: HttpProblemResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'title': value.title,
        'status': value.status,
        'detail': value.detail,
        'instance': value.instance,
    };
}


