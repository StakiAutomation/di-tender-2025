/* tslint:disable */
/* eslint-disable */
/**
 * Landlæknir API
 * Vefþjónustur á vegum Landlæknis.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: holmfridur.palsdottir@landlaeknir.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StarfsleyfiVottord
 */
export interface StarfsleyfiVottord {
    /**
     * Kennitala á Viðkomandi
     * @type {string}
     * @memberof StarfsleyfiVottord
     */
    ssnNumber?: string | null;
    /**
     * Nafn á viðkomandi
     * @type {string}
     * @memberof StarfsleyfiVottord
     */
    name?: string | null;
    /**
     * Auðkenni Starfstétts
     * @type {string}
     * @memberof StarfsleyfiVottord
     */
    idProfession?: string | null;
    /**
     * Heiti starfsstétt
     * @type {string}
     * @memberof StarfsleyfiVottord
     */
    professionIsl?: string | null;
    /**
     * Heiti starfsstétt á ensku
     * @type {string}
     * @memberof StarfsleyfiVottord
     */
    professionEn?: string | null;
    /**
     * Leyfi
     * @type {string}
     * @memberof StarfsleyfiVottord
     */
    specialityIsl?: string | null;
    /**
     * Leyfi á ensku
     * @type {string}
     * @memberof StarfsleyfiVottord
     */
    specialityEn?: string | null;
    /**
     * Er leyfið sérfræðileyfi?
     * @type {number}
     * @memberof StarfsleyfiVottord
     */
    isSpeciality?: number;
    /**
     * Gildir frá dagsetning
     * @type {Date}
     * @memberof StarfsleyfiVottord
     */
    validFrom?: Date | null;
    /**
     * Gildir Til dagsetning
     * @type {Date}
     * @memberof StarfsleyfiVottord
     */
    validTo?: Date | null;
    /**
     * Er Starfsmaður með takmarkað leyfi?
     * @type {number}
     * @memberof StarfsleyfiVottord
     */
    isRestricted?: number;
}

export function StarfsleyfiVottordFromJSON(json: any): StarfsleyfiVottord {
    return StarfsleyfiVottordFromJSONTyped(json, false);
}

export function StarfsleyfiVottordFromJSONTyped(json: any, ignoreDiscriminator: boolean): StarfsleyfiVottord {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ssnNumber': !exists(json, 'ssnNumber') ? undefined : json['ssnNumber'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'idProfession': !exists(json, 'idProfession') ? undefined : json['idProfession'],
        'professionIsl': !exists(json, 'professionIsl') ? undefined : json['professionIsl'],
        'professionEn': !exists(json, 'professionEn') ? undefined : json['professionEn'],
        'specialityIsl': !exists(json, 'specialityIsl') ? undefined : json['specialityIsl'],
        'specialityEn': !exists(json, 'specialityEn') ? undefined : json['specialityEn'],
        'isSpeciality': !exists(json, 'isSpeciality') ? undefined : json['isSpeciality'],
        'validFrom': !exists(json, 'validFrom') ? undefined : (json['validFrom'] === null ? null : new Date(json['validFrom'])),
        'validTo': !exists(json, 'validTo') ? undefined : (json['validTo'] === null ? null : new Date(json['validTo'])),
        'isRestricted': !exists(json, 'isRestricted') ? undefined : json['isRestricted'],
    };
}

export function StarfsleyfiVottordToJSON(value?: StarfsleyfiVottord | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ssnNumber': value.ssnNumber,
        'name': value.name,
        'idProfession': value.idProfession,
        'professionIsl': value.professionIsl,
        'professionEn': value.professionEn,
        'specialityIsl': value.specialityIsl,
        'specialityEn': value.specialityEn,
        'isSpeciality': value.isSpeciality,
        'validFrom': value.validFrom === undefined ? undefined : (value.validFrom === null ? null : value.validFrom.toISOString()),
        'validTo': value.validTo === undefined ? undefined : (value.validTo === null ? null : value.validTo.toISOString()),
        'isRestricted': value.isRestricted,
    };
}


