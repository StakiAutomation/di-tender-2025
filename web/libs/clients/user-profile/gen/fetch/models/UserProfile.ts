/* tslint:disable */
/* eslint-disable */
/**
 * User Profile backend
 * Backend providing user profiles for Island.is
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserProfile
 */
export interface UserProfile {
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof UserProfile
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserProfile
     */
    modified: Date;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    nationalId: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    mobilePhoneNumber: string;
    /**
     * User selected locale
     * @type {string}
     * @memberof UserProfile
     */
    locale: UserProfileLocaleEnum;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    email: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfile
     */
    emailVerified: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfile
     */
    mobilePhoneNumberVerified: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    profileImageUrl: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfile
     */
    documentNotifications: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    emailStatus: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    mobileStatus: string;
    /**
     * 
     * @type {Date}
     * @memberof UserProfile
     */
    lastNudge: Date;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfile
     */
    emailNotifications: boolean;
    /**
     * 
     * @type {Date}
     * @memberof UserProfile
     */
    nextNudge: Date;
}

export function UserProfileFromJSON(json: any): UserProfile {
    return UserProfileFromJSONTyped(json, false);
}

export function UserProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': (new Date(json['created'])),
        'modified': (new Date(json['modified'])),
        'nationalId': json['nationalId'],
        'mobilePhoneNumber': json['mobilePhoneNumber'],
        'locale': json['locale'],
        'email': json['email'],
        'emailVerified': json['emailVerified'],
        'mobilePhoneNumberVerified': json['mobilePhoneNumberVerified'],
        'profileImageUrl': json['profileImageUrl'],
        'documentNotifications': json['documentNotifications'],
        'emailStatus': json['emailStatus'],
        'mobileStatus': json['mobileStatus'],
        'lastNudge': (new Date(json['lastNudge'])),
        'emailNotifications': json['emailNotifications'],
        'nextNudge': (new Date(json['nextNudge'])),
    };
}

export function UserProfileToJSON(value?: UserProfile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created': (value.created.toISOString()),
        'modified': (value.modified.toISOString()),
        'nationalId': value.nationalId,
        'mobilePhoneNumber': value.mobilePhoneNumber,
        'locale': value.locale,
        'email': value.email,
        'emailVerified': value.emailVerified,
        'mobilePhoneNumberVerified': value.mobilePhoneNumberVerified,
        'profileImageUrl': value.profileImageUrl,
        'documentNotifications': value.documentNotifications,
        'emailStatus': value.emailStatus,
        'mobileStatus': value.mobileStatus,
        'lastNudge': (value.lastNudge.toISOString()),
        'emailNotifications': value.emailNotifications,
        'nextNudge': (value.nextNudge.toISOString()),
    };
}

/**
* @export
* @enum {string}
*/
export enum UserProfileLocaleEnum {
    En = 'en',
    Is = 'is'
}


