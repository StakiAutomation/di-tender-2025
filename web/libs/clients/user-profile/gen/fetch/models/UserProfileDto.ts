/* tslint:disable */
/* eslint-disable */
/**
 * User Profile backend
 * Backend providing user profiles for Island.is
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserProfileDto
 */
export interface UserProfileDto {
    /**
     * 
     * @type {string}
     * @memberof UserProfileDto
     */
    nationalId: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfileDto
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserProfileDto
     */
    mobilePhoneNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserProfileDto
     */
    locale?: UserProfileDtoLocaleEnum;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfileDto
     */
    mobilePhoneNumberVerified: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfileDto
     */
    emailVerified: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfileDto
     */
    documentNotifications: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserProfileDto
     */
    profileImageUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfileDto
     */
    needsNudge?: boolean | null;
    /**
     * 
     * @type {Date}
     * @memberof UserProfileDto
     */
    lastNudge?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserProfileDto
     */
    nextNudge?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfileDto
     */
    emailNotifications: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfileDto
     */
    isRestricted: boolean;
}

export function UserProfileDtoFromJSON(json: any): UserProfileDto {
    return UserProfileDtoFromJSONTyped(json, false);
}

export function UserProfileDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfileDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nationalId': json['nationalId'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'mobilePhoneNumber': !exists(json, 'mobilePhoneNumber') ? undefined : json['mobilePhoneNumber'],
        'locale': !exists(json, 'locale') ? undefined : json['locale'],
        'mobilePhoneNumberVerified': json['mobilePhoneNumberVerified'],
        'emailVerified': json['emailVerified'],
        'documentNotifications': json['documentNotifications'],
        'profileImageUrl': !exists(json, 'profileImageUrl') ? undefined : json['profileImageUrl'],
        'needsNudge': !exists(json, 'needsNudge') ? undefined : json['needsNudge'],
        'lastNudge': !exists(json, 'lastNudge') ? undefined : (new Date(json['lastNudge'])),
        'nextNudge': !exists(json, 'nextNudge') ? undefined : (new Date(json['nextNudge'])),
        'emailNotifications': json['emailNotifications'],
        'isRestricted': json['isRestricted'],
    };
}

export function UserProfileDtoToJSON(value?: UserProfileDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nationalId': value.nationalId,
        'email': value.email,
        'mobilePhoneNumber': value.mobilePhoneNumber,
        'locale': value.locale,
        'mobilePhoneNumberVerified': value.mobilePhoneNumberVerified,
        'emailVerified': value.emailVerified,
        'documentNotifications': value.documentNotifications,
        'profileImageUrl': value.profileImageUrl,
        'needsNudge': value.needsNudge,
        'lastNudge': value.lastNudge === undefined ? undefined : (value.lastNudge.toISOString()),
        'nextNudge': value.nextNudge === undefined ? undefined : (value.nextNudge.toISOString()),
        'emailNotifications': value.emailNotifications,
        'isRestricted': value.isRestricted,
    };
}

/**
* @export
* @enum {string}
*/
export enum UserProfileDtoLocaleEnum {
    En = 'en',
    Is = 'is'
}


