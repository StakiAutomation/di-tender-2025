/* tslint:disable */
/* eslint-disable */
/**
 * Fasteignir-Xroad
 * Uppfletting í fasteignaskrá.
 *
 * The version of the OpenAPI document: v1
 * Contact: skra@skra.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Fasteign,
    FasteignFromJSON,
    FasteignToJSON,
    FasteignSimpleWrapper,
    FasteignSimpleWrapperFromJSON,
    FasteignSimpleWrapperToJSON,
    NotkunareiningWrapper,
    NotkunareiningWrapperFromJSON,
    NotkunareiningWrapperToJSON,
    ThinglysturEigandiWrapper,
    ThinglysturEigandiWrapperFromJSON,
    ThinglysturEigandiWrapperToJSON,
} from '../models';

export interface FasteignirGetFasteignRequest {
    fasteignanumer: string | null;
}

export interface FasteignirGetFasteignEigendurRequest {
    fasteignanumer: string | null;
    cursor?: string | null;
    limit?: number | null;
}

export interface FasteignirGetFasteignNotkunareiningarRequest {
    fasteignanumer: string | null;
    cursor?: string | null;
    limit?: number | null;
}

export interface FasteignirGetFasteignirRequest {
    kennitala?: string | null;
    cursor?: string | null;
    limit?: number | null;
}

/**
 * 
 */
export class FasteignirApi extends runtime.BaseAPI {

    /**
     * Sækir fasteign eftir fasteignarnúmeri.
     */
    async fasteignirGetFasteignRaw(requestParameters: FasteignirGetFasteignRequest): Promise<runtime.ApiResponse<Fasteign>> {
        if (requestParameters.fasteignanumer === null || requestParameters.fasteignanumer === undefined) {
            throw new runtime.RequiredError('fasteignanumer','Required parameter requestParameters.fasteignanumer was null or undefined when calling fasteignirGetFasteign.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // auth authentication
        }

        const response = await this.request({
            path: `/api/v1/fasteignir/{fasteignanumer}`.replace(`{${"fasteignanumer"}}`, encodeURIComponent(String(requestParameters.fasteignanumer))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => FasteignFromJSON(jsonValue));
    }

    /**
     * Sækir fasteign eftir fasteignarnúmeri.
     */
    async fasteignirGetFasteign(requestParameters: FasteignirGetFasteignRequest): Promise<Fasteign> {
        const response = await this.fasteignirGetFasteignRaw(requestParameters);
        return await response.value();
    }

    /**
     * Sækir eigendur fasteignar.
     */
    async fasteignirGetFasteignEigendurRaw(requestParameters: FasteignirGetFasteignEigendurRequest): Promise<runtime.ApiResponse<ThinglysturEigandiWrapper>> {
        if (requestParameters.fasteignanumer === null || requestParameters.fasteignanumer === undefined) {
            throw new runtime.RequiredError('fasteignanumer','Required parameter requestParameters.fasteignanumer was null or undefined when calling fasteignirGetFasteignEigendur.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.cursor !== undefined) {
            queryParameters['cursor'] = requestParameters.cursor;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // auth authentication
        }

        const response = await this.request({
            path: `/api/v1/fasteignir/{fasteignanumer}/thinglystir-eigendur`.replace(`{${"fasteignanumer"}}`, encodeURIComponent(String(requestParameters.fasteignanumer))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => ThinglysturEigandiWrapperFromJSON(jsonValue));
    }

    /**
     * Sækir eigendur fasteignar.
     */
    async fasteignirGetFasteignEigendur(requestParameters: FasteignirGetFasteignEigendurRequest): Promise<ThinglysturEigandiWrapper> {
        const response = await this.fasteignirGetFasteignEigendurRaw(requestParameters);
        return await response.value();
    }

    /**
     * Sækir notkunareiningar fasteignar.
     */
    async fasteignirGetFasteignNotkunareiningarRaw(requestParameters: FasteignirGetFasteignNotkunareiningarRequest): Promise<runtime.ApiResponse<NotkunareiningWrapper>> {
        if (requestParameters.fasteignanumer === null || requestParameters.fasteignanumer === undefined) {
            throw new runtime.RequiredError('fasteignanumer','Required parameter requestParameters.fasteignanumer was null or undefined when calling fasteignirGetFasteignNotkunareiningar.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.cursor !== undefined) {
            queryParameters['cursor'] = requestParameters.cursor;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // auth authentication
        }

        const response = await this.request({
            path: `/api/v1/fasteignir/{fasteignanumer}/notkunareiningar`.replace(`{${"fasteignanumer"}}`, encodeURIComponent(String(requestParameters.fasteignanumer))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => NotkunareiningWrapperFromJSON(jsonValue));
    }

    /**
     * Sækir notkunareiningar fasteignar.
     */
    async fasteignirGetFasteignNotkunareiningar(requestParameters: FasteignirGetFasteignNotkunareiningarRequest): Promise<NotkunareiningWrapper> {
        const response = await this.fasteignirGetFasteignNotkunareiningarRaw(requestParameters);
        return await response.value();
    }

    /**
     * Sækir fasteignir skráðar á kennitölu.
     */
    async fasteignirGetFasteignirRaw(requestParameters: FasteignirGetFasteignirRequest): Promise<runtime.ApiResponse<FasteignSimpleWrapper>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.kennitala !== undefined) {
            queryParameters['kennitala'] = requestParameters.kennitala;
        }

        if (requestParameters.cursor !== undefined) {
            queryParameters['cursor'] = requestParameters.cursor;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // auth authentication
        }

        const response = await this.request({
            path: `/api/v1/fasteignir`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => FasteignSimpleWrapperFromJSON(jsonValue));
    }

    /**
     * Sækir fasteignir skráðar á kennitölu.
     */
    async fasteignirGetFasteignir(requestParameters: FasteignirGetFasteignirRequest): Promise<FasteignSimpleWrapper> {
        const response = await this.fasteignirGetFasteignirRaw(requestParameters);
        return await response.value();
    }

}
