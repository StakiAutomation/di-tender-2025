/* tslint:disable */
/* eslint-disable */
/**
 * Documents backend
 * Backend providing documents and document-providers info
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AdministrativeContact,
    AdministrativeContactFromJSON,
    AdministrativeContactFromJSONTyped,
    AdministrativeContactToJSON,
    Helpdesk,
    HelpdeskFromJSON,
    HelpdeskFromJSONTyped,
    HelpdeskToJSON,
    Provider,
    ProviderFromJSON,
    ProviderFromJSONTyped,
    ProviderToJSON,
    TechnicalContact,
    TechnicalContactFromJSON,
    TechnicalContactFromJSONTyped,
    TechnicalContactToJSON,
} from './';

/**
 * 
 * @export
 * @interface Organisation
 */
export interface Organisation {
    /**
     * 
     * @type {string}
     * @memberof Organisation
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Organisation
     */
    nationalId: string;
    /**
     * 
     * @type {string}
     * @memberof Organisation
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Organisation
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof Organisation
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof Organisation
     */
    phoneNumber: string;
    /**
     * 
     * @type {Array<Provider>}
     * @memberof Organisation
     */
    providers?: Array<Provider>;
    /**
     * 
     * @type {AdministrativeContact}
     * @memberof Organisation
     */
    administrativeContact?: AdministrativeContact;
    /**
     * 
     * @type {TechnicalContact}
     * @memberof Organisation
     */
    technicalContact?: TechnicalContact;
    /**
     * 
     * @type {Helpdesk}
     * @memberof Organisation
     */
    helpdesk?: Helpdesk;
    /**
     * 
     * @type {string}
     * @memberof Organisation
     */
    modifiedBy: string;
    /**
     * 
     * @type {Date}
     * @memberof Organisation
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof Organisation
     */
    modified: Date;
}

export function OrganisationFromJSON(json: any): Organisation {
    return OrganisationFromJSONTyped(json, false);
}

export function OrganisationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Organisation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'nationalId': json['nationalId'],
        'name': json['name'],
        'address': json['address'],
        'email': json['email'],
        'phoneNumber': json['phoneNumber'],
        'providers': !exists(json, 'providers') ? undefined : ((json['providers'] as Array<any>).map(ProviderFromJSON)),
        'administrativeContact': !exists(json, 'administrativeContact') ? undefined : AdministrativeContactFromJSON(json['administrativeContact']),
        'technicalContact': !exists(json, 'technicalContact') ? undefined : TechnicalContactFromJSON(json['technicalContact']),
        'helpdesk': !exists(json, 'helpdesk') ? undefined : HelpdeskFromJSON(json['helpdesk']),
        'modifiedBy': json['modifiedBy'],
        'created': (new Date(json['created'])),
        'modified': (new Date(json['modified'])),
    };
}

export function OrganisationToJSON(value?: Organisation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'nationalId': value.nationalId,
        'name': value.name,
        'address': value.address,
        'email': value.email,
        'phoneNumber': value.phoneNumber,
        'providers': value.providers === undefined ? undefined : ((value.providers as Array<any>).map(ProviderToJSON)),
        'administrativeContact': AdministrativeContactToJSON(value.administrativeContact),
        'technicalContact': TechnicalContactToJSON(value.technicalContact),
        'helpdesk': HelpdeskToJSON(value.helpdesk),
        'modifiedBy': value.modifiedBy,
        'created': (value.created.toISOString()),
        'modified': (value.modified.toISOString()),
    };
}


