/* tslint:disable */
/* eslint-disable */
/**
 * Form System API
 * This is an API for formbuilder and form-rendering (application) system
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Month,
    MonthFromJSON,
    MonthFromJSONTyped,
    MonthToJSON,
} from './';

/**
 * 
 * @export
 * @interface ValueType
 */
export interface ValueType {
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    text?: string;
    /**
     * 
     * @type {number}
     * @memberof ValueType
     */
    number?: number;
    /**
     * 
     * @type {Date}
     * @memberof ValueType
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    listValue?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    nationalId?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    address?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    postalCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    municipality?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    jobTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    altName?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    homestayNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    propertyNumber?: string;
    /**
     * 
     * @type {number}
     * @memberof ValueType
     */
    totalDays?: number;
    /**
     * 
     * @type {number}
     * @memberof ValueType
     */
    totalAmount?: number;
    /**
     * 
     * @type {number}
     * @memberof ValueType
     */
    year?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ValueType
     */
    isNullReport?: boolean;
    /**
     * 
     * @type {Array<Month>}
     * @memberof ValueType
     */
    months?: Array<Month>;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    iskNumber?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ValueType
     */
    checkboxValue?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    phoneNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    bankAccount?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    time?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    s3Key?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    s3Url?: string;
    /**
     * 
     * @type {string}
     * @memberof ValueType
     */
    paymentCode?: string;
}

export function ValueTypeFromJSON(json: any): ValueType {
    return ValueTypeFromJSONTyped(json, false);
}

export function ValueTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValueType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'text': !exists(json, 'text') ? undefined : json['text'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'listValue': !exists(json, 'listValue') ? undefined : json['listValue'],
        'nationalId': !exists(json, 'nationalId') ? undefined : json['nationalId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'postalCode': !exists(json, 'postalCode') ? undefined : json['postalCode'],
        'municipality': !exists(json, 'municipality') ? undefined : json['municipality'],
        'jobTitle': !exists(json, 'jobTitle') ? undefined : json['jobTitle'],
        'altName': !exists(json, 'altName') ? undefined : json['altName'],
        'homestayNumber': !exists(json, 'homestayNumber') ? undefined : json['homestayNumber'],
        'propertyNumber': !exists(json, 'propertyNumber') ? undefined : json['propertyNumber'],
        'totalDays': !exists(json, 'totalDays') ? undefined : json['totalDays'],
        'totalAmount': !exists(json, 'totalAmount') ? undefined : json['totalAmount'],
        'year': !exists(json, 'year') ? undefined : json['year'],
        'isNullReport': !exists(json, 'isNullReport') ? undefined : json['isNullReport'],
        'months': !exists(json, 'months') ? undefined : ((json['months'] as Array<any>).map(MonthFromJSON)),
        'email': !exists(json, 'email') ? undefined : json['email'],
        'iskNumber': !exists(json, 'iskNumber') ? undefined : json['iskNumber'],
        'checkboxValue': !exists(json, 'checkboxValue') ? undefined : json['checkboxValue'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'bankAccount': !exists(json, 'bankAccount') ? undefined : json['bankAccount'],
        'time': !exists(json, 'time') ? undefined : json['time'],
        's3Key': !exists(json, 's3Key') ? undefined : json['s3Key'],
        's3Url': !exists(json, 's3Url') ? undefined : json['s3Url'],
        'paymentCode': !exists(json, 'paymentCode') ? undefined : json['paymentCode'],
    };
}

export function ValueTypeToJSON(value?: ValueType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'text': value.text,
        'number': value.number,
        'date': value.date === undefined ? undefined : (value.date.toISOString()),
        'listValue': value.listValue,
        'nationalId': value.nationalId,
        'name': value.name,
        'address': value.address,
        'postalCode': value.postalCode,
        'municipality': value.municipality,
        'jobTitle': value.jobTitle,
        'altName': value.altName,
        'homestayNumber': value.homestayNumber,
        'propertyNumber': value.propertyNumber,
        'totalDays': value.totalDays,
        'totalAmount': value.totalAmount,
        'year': value.year,
        'isNullReport': value.isNullReport,
        'months': value.months === undefined ? undefined : ((value.months as Array<any>).map(MonthToJSON)),
        'email': value.email,
        'iskNumber': value.iskNumber,
        'checkboxValue': value.checkboxValue,
        'phoneNumber': value.phoneNumber,
        'bankAccount': value.bankAccount,
        'time': value.time,
        's3Key': value.s3Key,
        's3Url': value.s3Url,
        'paymentCode': value.paymentCode,
    };
}


