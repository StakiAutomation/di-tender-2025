/* tslint:disable */
/* eslint-disable */
/**
 * Form System API
 * This is an API for formbuilder and form-rendering (application) system
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Dependency,
    DependencyFromJSON,
    DependencyFromJSONTyped,
    DependencyToJSON,
    LanguageType,
    LanguageTypeFromJSON,
    LanguageTypeFromJSONTyped,
    LanguageTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateFormDto
 */
export interface UpdateFormDto {
    /**
     * 
     * @type {string}
     * @memberof UpdateFormDto
     */
    organizationId?: string;
    /**
     * 
     * @type {LanguageType}
     * @memberof UpdateFormDto
     */
    name?: LanguageType;
    /**
     * 
     * @type {LanguageType}
     * @memberof UpdateFormDto
     */
    organizationDisplayName?: LanguageType;
    /**
     * 
     * @type {string}
     * @memberof UpdateFormDto
     */
    slug?: string;
    /**
     * 
     * @type {Date}
     * @memberof UpdateFormDto
     */
    invalidationDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateFormDto
     */
    hasPayment?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateFormDto
     */
    beenPublished?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateFormDto
     */
    isTranslated?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UpdateFormDto
     */
    applicationDaysToRemove?: number;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateFormDto
     */
    stopProgressOnValidatingScreen?: boolean;
    /**
     * 
     * @type {LanguageType}
     * @memberof UpdateFormDto
     */
    completedMessage?: LanguageType;
    /**
     * 
     * @type {Array<Dependency>}
     * @memberof UpdateFormDto
     */
    dependencies?: Array<Dependency>;
}

export function UpdateFormDtoFromJSON(json: any): UpdateFormDto {
    return UpdateFormDtoFromJSONTyped(json, false);
}

export function UpdateFormDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateFormDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'organizationId': !exists(json, 'organizationId') ? undefined : json['organizationId'],
        'name': !exists(json, 'name') ? undefined : LanguageTypeFromJSON(json['name']),
        'organizationDisplayName': !exists(json, 'organizationDisplayName') ? undefined : LanguageTypeFromJSON(json['organizationDisplayName']),
        'slug': !exists(json, 'slug') ? undefined : json['slug'],
        'invalidationDate': !exists(json, 'invalidationDate') ? undefined : (new Date(json['invalidationDate'])),
        'hasPayment': !exists(json, 'hasPayment') ? undefined : json['hasPayment'],
        'beenPublished': !exists(json, 'beenPublished') ? undefined : json['beenPublished'],
        'isTranslated': !exists(json, 'isTranslated') ? undefined : json['isTranslated'],
        'applicationDaysToRemove': !exists(json, 'applicationDaysToRemove') ? undefined : json['applicationDaysToRemove'],
        'stopProgressOnValidatingScreen': !exists(json, 'stopProgressOnValidatingScreen') ? undefined : json['stopProgressOnValidatingScreen'],
        'completedMessage': !exists(json, 'completedMessage') ? undefined : LanguageTypeFromJSON(json['completedMessage']),
        'dependencies': !exists(json, 'dependencies') ? undefined : ((json['dependencies'] as Array<any>).map(DependencyFromJSON)),
    };
}

export function UpdateFormDtoToJSON(value?: UpdateFormDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'organizationId': value.organizationId,
        'name': LanguageTypeToJSON(value.name),
        'organizationDisplayName': LanguageTypeToJSON(value.organizationDisplayName),
        'slug': value.slug,
        'invalidationDate': value.invalidationDate === undefined ? undefined : (value.invalidationDate.toISOString()),
        'hasPayment': value.hasPayment,
        'beenPublished': value.beenPublished,
        'isTranslated': value.isTranslated,
        'applicationDaysToRemove': value.applicationDaysToRemove,
        'stopProgressOnValidatingScreen': value.stopProgressOnValidatingScreen,
        'completedMessage': LanguageTypeToJSON(value.completedMessage),
        'dependencies': value.dependencies === undefined ? undefined : ((value.dependencies as Array<any>).map(DependencyToJSON)),
    };
}


