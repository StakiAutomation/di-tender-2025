/* tslint:disable */
/* eslint-disable */
/**
 * Form System API
 * This is an API for formbuilder and form-rendering (application) system
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApplicationEventDto,
    ApplicationEventDtoFromJSON,
    ApplicationEventDtoFromJSONTyped,
    ApplicationEventDtoToJSON,
    ValueType,
    ValueTypeFromJSON,
    ValueTypeFromJSONTyped,
    ValueTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface ValueDto
 */
export interface ValueDto {
    /**
     * 
     * @type {string}
     * @memberof ValueDto
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof ValueDto
     */
    order: number;
    /**
     * 
     * @type {ValueType}
     * @memberof ValueDto
     */
    json?: ValueType;
    /**
     * 
     * @type {Array<ApplicationEventDto>}
     * @memberof ValueDto
     */
    events: Array<ApplicationEventDto>;
}

export function ValueDtoFromJSON(json: any): ValueDto {
    return ValueDtoFromJSONTyped(json, false);
}

export function ValueDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValueDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'order': json['order'],
        'json': !exists(json, 'json') ? undefined : ValueTypeFromJSON(json['json']),
        'events': ((json['events'] as Array<any>).map(ApplicationEventDtoFromJSON)),
    };
}

export function ValueDtoToJSON(value?: ValueDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'order': value.order,
        'json': ValueTypeToJSON(value.json),
        'events': ((value.events as Array<any>).map(ApplicationEventDtoToJSON)),
    };
}


