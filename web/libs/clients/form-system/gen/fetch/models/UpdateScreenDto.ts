/* tslint:disable */
/* eslint-disable */
/**
 * Form System API
 * This is an API for formbuilder and form-rendering (application) system
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LanguageType,
    LanguageTypeFromJSON,
    LanguageTypeFromJSONTyped,
    LanguageTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateScreenDto
 */
export interface UpdateScreenDto {
    /**
     * 
     * @type {LanguageType}
     * @memberof UpdateScreenDto
     */
    name?: LanguageType;
    /**
     * 
     * @type {number}
     * @memberof UpdateScreenDto
     */
    multiset?: number;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateScreenDto
     */
    callRuleset?: boolean;
}

export function UpdateScreenDtoFromJSON(json: any): UpdateScreenDto {
    return UpdateScreenDtoFromJSONTyped(json, false);
}

export function UpdateScreenDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateScreenDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : LanguageTypeFromJSON(json['name']),
        'multiset': !exists(json, 'multiset') ? undefined : json['multiset'],
        'callRuleset': !exists(json, 'callRuleset') ? undefined : json['callRuleset'],
    };
}

export function UpdateScreenDtoToJSON(value?: UpdateScreenDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': LanguageTypeToJSON(value.name),
        'multiset': value.multiset,
        'callRuleset': value.callRuleset,
    };
}


