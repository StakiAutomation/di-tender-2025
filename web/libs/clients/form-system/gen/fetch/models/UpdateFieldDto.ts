/* tslint:disable */
/* eslint-disable */
/**
 * Form System API
 * This is an API for formbuilder and form-rendering (application) system
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FieldSettings,
    FieldSettingsFromJSON,
    FieldSettingsFromJSONTyped,
    FieldSettingsToJSON,
    LanguageType,
    LanguageTypeFromJSON,
    LanguageTypeFromJSONTyped,
    LanguageTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateFieldDto
 */
export interface UpdateFieldDto {
    /**
     * 
     * @type {LanguageType}
     * @memberof UpdateFieldDto
     */
    name?: LanguageType;
    /**
     * 
     * @type {LanguageType}
     * @memberof UpdateFieldDto
     */
    description?: LanguageType;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateFieldDto
     */
    isPartOfMultiset?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateFieldDto
     */
    isRequired?: boolean;
    /**
     * 
     * @type {FieldSettings}
     * @memberof UpdateFieldDto
     */
    fieldSettings?: FieldSettings;
    /**
     * 
     * @type {string}
     * @memberof UpdateFieldDto
     */
    fieldType?: string;
}

export function UpdateFieldDtoFromJSON(json: any): UpdateFieldDto {
    return UpdateFieldDtoFromJSONTyped(json, false);
}

export function UpdateFieldDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateFieldDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : LanguageTypeFromJSON(json['name']),
        'description': !exists(json, 'description') ? undefined : LanguageTypeFromJSON(json['description']),
        'isPartOfMultiset': !exists(json, 'isPartOfMultiset') ? undefined : json['isPartOfMultiset'],
        'isRequired': !exists(json, 'isRequired') ? undefined : json['isRequired'],
        'fieldSettings': !exists(json, 'fieldSettings') ? undefined : FieldSettingsFromJSON(json['fieldSettings']),
        'fieldType': !exists(json, 'fieldType') ? undefined : json['fieldType'],
    };
}

export function UpdateFieldDtoToJSON(value?: UpdateFieldDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': LanguageTypeToJSON(value.name),
        'description': LanguageTypeToJSON(value.description),
        'isPartOfMultiset': value.isPartOfMultiset,
        'isRequired': value.isRequired,
        'fieldSettings': FieldSettingsToJSON(value.fieldSettings),
        'fieldType': value.fieldType,
    };
}


