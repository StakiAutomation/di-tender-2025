/* tslint:disable */
/* eslint-disable */
/**
 * Digital DrivingLicenceBook API
 * Vefþjónusta fyrir rafræna ökunámsbók - f9a51338fc6bb51bf829cfc1123ddd104a8439cd-20240530.1
 *
 * The version of the OpenAPI document: v1
 * Contact: samgongustofa@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Reason,
    ReasonFromJSON,
    ReasonFromJSONTyped,
    ReasonToJSON,
} from './';

/**
 * Contains a response indicating whether a student can start driving school 3 and the reasons if they cannot.
 * @export
 * @interface CanStartDrivingSchoolThree
 */
export interface CanStartDrivingSchoolThree {
    /**
     * Gets or sets whether the student can start driving school 3 based on progress and exemption.
     * @type {boolean}
     * @memberof CanStartDrivingSchoolThree
     */
    response?: boolean;
    /**
     * Gets or sets the reasons why the student cannot start driving school 3.
     * @type {Array<Reason>}
     * @memberof CanStartDrivingSchoolThree
     */
    reasons?: Array<Reason> | null;
}

export function CanStartDrivingSchoolThreeFromJSON(json: any): CanStartDrivingSchoolThree {
    return CanStartDrivingSchoolThreeFromJSONTyped(json, false);
}

export function CanStartDrivingSchoolThreeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CanStartDrivingSchoolThree {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'response': !exists(json, 'response') ? undefined : json['response'],
        'reasons': !exists(json, 'reasons') ? undefined : (json['reasons'] === null ? null : (json['reasons'] as Array<any>).map(ReasonFromJSON)),
    };
}

export function CanStartDrivingSchoolThreeToJSON(value?: CanStartDrivingSchoolThree | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'response': value.response,
        'reasons': value.reasons === undefined ? undefined : (value.reasons === null ? null : (value.reasons as Array<any>).map(ReasonToJSON)),
    };
}


