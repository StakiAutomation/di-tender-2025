/* tslint:disable */
/* eslint-disable */
/**
 * Digital DrivingLicenceBook API
 * Vefþjónusta fyrir rafræna ökunámsbók - f9a51338fc6bb51bf829cfc1123ddd104a8439cd-20240530.1
 *
 * The version of the OpenAPI document: v1
 * Contact: samgongustofa@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TestFactorScore,
    TestFactorScoreFromJSON,
    TestFactorScoreFromJSONTyped,
    TestFactorScoreToJSON,
} from './';

/**
 * Represents a factor associated with a test.
 * @export
 * @interface TestFactor
 */
export interface TestFactor {
    /**
     * Gets or sets the factor ID.
     * @type {string}
     * @memberof TestFactor
     */
    id?: string | null;
    /**
     * Gets or sets the factor name.
     * @type {string}
     * @memberof TestFactor
     */
    factor?: string | null;
    /**
     * Gets or sets the order number of the factor.
     * @type {number}
     * @memberof TestFactor
     */
    orderNumber?: number;
    /**
     * Gets or sets the optional card number associated with the factor.
     * @type {number}
     * @memberof TestFactor
     */
    cardNumber?: number | null;
    /**
     * Gets or sets the scores associated with the factor.
     * @type {Array<TestFactorScore>}
     * @memberof TestFactor
     */
    scores?: Array<TestFactorScore> | null;
}

export function TestFactorFromJSON(json: any): TestFactor {
    return TestFactorFromJSONTyped(json, false);
}

export function TestFactorFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestFactor {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'factor': !exists(json, 'factor') ? undefined : json['factor'],
        'orderNumber': !exists(json, 'orderNumber') ? undefined : json['orderNumber'],
        'cardNumber': !exists(json, 'cardNumber') ? undefined : json['cardNumber'],
        'scores': !exists(json, 'scores') ? undefined : (json['scores'] === null ? null : (json['scores'] as Array<any>).map(TestFactorScoreFromJSON)),
    };
}

export function TestFactorToJSON(value?: TestFactor | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'factor': value.factor,
        'orderNumber': value.orderNumber,
        'cardNumber': value.cardNumber,
        'scores': value.scores === undefined ? undefined : (value.scores === null ? null : (value.scores as Array<any>).map(TestFactorScoreToJSON)),
    };
}


