/* tslint:disable */
/* eslint-disable */
/**
 * Digital DrivingLicenceBook API
 * Vefþjónusta fyrir rafræna ökunámsbók - f9a51338fc6bb51bf829cfc1123ddd104a8439cd-20240530.1
 *
 * The version of the OpenAPI document: v1
 * Contact: samgongustofa@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents the request body for creating a school test result.
 * @export
 * @interface SchoolTestResultCreateRequestBody
 */
export interface SchoolTestResultCreateRequestBody {
    /**
     * Gets or sets the unique id for the digital driving license book.
     * @type {string}
     * @memberof SchoolTestResultCreateRequestBody
     */
    bookId: string;
    /**
     * Gets or sets the type of driving school (Ö1 = 1, Ö2 = 2, Ö3 = 3).
     * @type {number}
     * @memberof SchoolTestResultCreateRequestBody
     */
    schoolTypeId: number;
    /**
     * Gets or sets the social security number for the driving school.
     * @type {string}
     * @memberof SchoolTestResultCreateRequestBody
     */
    schoolSsn: string;
    /**
     * Gets or sets the social security number for the driving school employee.
     * @type {string}
     * @memberof SchoolTestResultCreateRequestBody
     */
    schoolEmployeeSsn: string;
    /**
     * Gets or sets the date registered (yyyy-MM-dd).
     * @type {string}
     * @memberof SchoolTestResultCreateRequestBody
     */
    createdOn: string;
    /**
     * Gets or sets comments about the registered results.
     * @type {string}
     * @memberof SchoolTestResultCreateRequestBody
     */
    comments?: string | null;
}

export function SchoolTestResultCreateRequestBodyFromJSON(json: any): SchoolTestResultCreateRequestBody {
    return SchoolTestResultCreateRequestBodyFromJSONTyped(json, false);
}

export function SchoolTestResultCreateRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchoolTestResultCreateRequestBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookId': json['bookId'],
        'schoolTypeId': json['schoolTypeId'],
        'schoolSsn': json['schoolSsn'],
        'schoolEmployeeSsn': json['schoolEmployeeSsn'],
        'createdOn': json['createdOn'],
        'comments': !exists(json, 'comments') ? undefined : json['comments'],
    };
}

export function SchoolTestResultCreateRequestBodyToJSON(value?: SchoolTestResultCreateRequestBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookId': value.bookId,
        'schoolTypeId': value.schoolTypeId,
        'schoolSsn': value.schoolSsn,
        'schoolEmployeeSsn': value.schoolEmployeeSsn,
        'createdOn': value.createdOn,
        'comments': value.comments,
    };
}


