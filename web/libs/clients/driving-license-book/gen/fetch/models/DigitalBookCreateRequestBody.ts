/* tslint:disable */
/* eslint-disable */
/**
 * Digital DrivingLicenceBook API
 * Vefþjónusta fyrir rafræna ökunámsbók - f9a51338fc6bb51bf829cfc1123ddd104a8439cd-20240530.1
 *
 * The version of the OpenAPI document: v1
 * Contact: samgongustofa@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents the request body for creating a digital driving license book.
 * @export
 * @interface DigitalBookCreateRequestBody
 */
export interface DigitalBookCreateRequestBody {
    /**
     * Gets or sets the type of driving license.
     * @type {string}
     * @memberof DigitalBookCreateRequestBody
     */
    licenseCategory: string;
    /**
     * Gets or sets the date when the book is registered (yyyy-MM-dd).
     * @type {string}
     * @memberof DigitalBookCreateRequestBody
     */
    createdOn: string;
    /**
     * Gets or sets the student's application number.
     * @type {string}
     * @memberof DigitalBookCreateRequestBody
     */
    applicationNumber?: string | null;
    /**
     * Gets or sets the student's driving license number
     * @type {number}
     * @memberof DigitalBookCreateRequestBody
     */
    drivingLicenseNumber?: number | null;
    /**
     * Gets or sets the student's social security number.
     * @type {string}
     * @memberof DigitalBookCreateRequestBody
     */
    studentSsn: string;
    /**
     * Gets or sets the driving instructor's social security number.
     * @type {string}
     * @memberof DigitalBookCreateRequestBody
     */
    teacherSsn?: string | null;
    /**
     * Gets or sets the driving school's social security number.
     * @type {string}
     * @memberof DigitalBookCreateRequestBody
     */
    schoolSsn?: string | null;
    /**
     * Gets or sets the student's email.
     * @type {string}
     * @memberof DigitalBookCreateRequestBody
     */
    studentEmail?: string | null;
    /**
     * Gets or sets the student's primary phone number.
     * @type {string}
     * @memberof DigitalBookCreateRequestBody
     */
    studentPrimaryPhoneNumber?: string | null;
    /**
     * Gets or sets the student's secondary phone number.
     * @type {string}
     * @memberof DigitalBookCreateRequestBody
     */
    studentSecondaryPhoneNumber?: string | null;
    /**
     * Gets or sets whether the driving license book is digital or on paper.
     * @type {boolean}
     * @memberof DigitalBookCreateRequestBody
     */
    isDigital?: boolean;
}

export function DigitalBookCreateRequestBodyFromJSON(json: any): DigitalBookCreateRequestBody {
    return DigitalBookCreateRequestBodyFromJSONTyped(json, false);
}

export function DigitalBookCreateRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): DigitalBookCreateRequestBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'licenseCategory': json['licenseCategory'],
        'createdOn': json['createdOn'],
        'applicationNumber': !exists(json, 'applicationNumber') ? undefined : json['applicationNumber'],
        'drivingLicenseNumber': !exists(json, 'drivingLicenseNumber') ? undefined : json['drivingLicenseNumber'],
        'studentSsn': json['studentSsn'],
        'teacherSsn': !exists(json, 'teacherSsn') ? undefined : json['teacherSsn'],
        'schoolSsn': !exists(json, 'schoolSsn') ? undefined : json['schoolSsn'],
        'studentEmail': !exists(json, 'studentEmail') ? undefined : json['studentEmail'],
        'studentPrimaryPhoneNumber': !exists(json, 'studentPrimaryPhoneNumber') ? undefined : json['studentPrimaryPhoneNumber'],
        'studentSecondaryPhoneNumber': !exists(json, 'studentSecondaryPhoneNumber') ? undefined : json['studentSecondaryPhoneNumber'],
        'isDigital': !exists(json, 'isDigital') ? undefined : json['isDigital'],
    };
}

export function DigitalBookCreateRequestBodyToJSON(value?: DigitalBookCreateRequestBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'licenseCategory': value.licenseCategory,
        'createdOn': value.createdOn,
        'applicationNumber': value.applicationNumber,
        'drivingLicenseNumber': value.drivingLicenseNumber,
        'studentSsn': value.studentSsn,
        'teacherSsn': value.teacherSsn,
        'schoolSsn': value.schoolSsn,
        'studentEmail': value.studentEmail,
        'studentPrimaryPhoneNumber': value.studentPrimaryPhoneNumber,
        'studentSecondaryPhoneNumber': value.studentSecondaryPhoneNumber,
        'isDigital': value.isDigital,
    };
}


