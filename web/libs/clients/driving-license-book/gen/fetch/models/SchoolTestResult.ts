/* tslint:disable */
/* eslint-disable */
/**
 * Digital DrivingLicenceBook API
 * Vefþjónusta fyrir rafræna ökunámsbók - f9a51338fc6bb51bf829cfc1123ddd104a8439cd-20240530.1
 *
 * The version of the OpenAPI document: v1
 * Contact: samgongustofa@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents a data transfer object for a school test result.
 * @export
 * @interface SchoolTestResult
 */
export interface SchoolTestResult {
    /**
     * Gets or sets the unique ID for the digital driving license book associated with the result.
     * @type {string}
     * @memberof SchoolTestResult
     */
    bookId?: string | null;
    /**
     * Gets or sets the unique ID for the test result.
     * @type {string}
     * @memberof SchoolTestResult
     */
    id?: string | null;
    /**
     * Gets or sets the student's social security number.
     * @type {string}
     * @memberof SchoolTestResult
     */
    studentSsn?: string | null;
    /**
     * Gets or sets the name of the student.
     * @type {string}
     * @memberof SchoolTestResult
     */
    studentName?: string | null;
    /**
     * Gets or sets the type of driving license.
     * @type {string}
     * @memberof SchoolTestResult
     */
    licenseCategory?: string | null;
    /**
     * Gets or sets the type of driving school (1, 2, 3).
     * @type {number}
     * @memberof SchoolTestResult
     */
    schoolTypeId?: number;
    /**
     * Gets or sets the name of the driving school type.
     * @type {string}
     * @memberof SchoolTestResult
     */
    schoolTypeName?: string | null;
    /**
     * Gets or sets the code for the driving school type.
     * @type {string}
     * @memberof SchoolTestResult
     */
    schoolTypeCode?: string | null;
    /**
     * Gets or sets the driving school's social security number.
     * @type {string}
     * @memberof SchoolTestResult
     */
    schoolSsn?: string | null;
    /**
     * Gets or sets the name of the driving school.
     * @type {string}
     * @memberof SchoolTestResult
     */
    schoolName?: string | null;
    /**
     * Gets or sets the driving school employee's social security number.
     * @type {string}
     * @memberof SchoolTestResult
     */
    schoolEmployeeSsn?: string | null;
    /**
     * Gets or sets the name of the driving school employee.
     * @type {string}
     * @memberof SchoolTestResult
     */
    schoolEmployeeName?: string | null;
    /**
     * Gets or sets the status id of the driving school test (2=Finished, 4=Expired, 9=Canceled).
     * @type {number}
     * @memberof SchoolTestResult
     */
    statusId?: number;
    /**
     * Gets or sets the name of the driving school test status.
     * @type {string}
     * @memberof SchoolTestResult
     */
    statusName?: string | null;
    /**
     * Gets or sets the date when the result was registered (yyyy-MM-dd).
     * @type {string}
     * @memberof SchoolTestResult
     */
    createdOn?: string | null;
    /**
     * Gets or sets comments about the results.
     * @type {string}
     * @memberof SchoolTestResult
     */
    comments?: string | null;
}

export function SchoolTestResultFromJSON(json: any): SchoolTestResult {
    return SchoolTestResultFromJSONTyped(json, false);
}

export function SchoolTestResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchoolTestResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookId': !exists(json, 'bookId') ? undefined : json['bookId'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'studentSsn': !exists(json, 'studentSsn') ? undefined : json['studentSsn'],
        'studentName': !exists(json, 'studentName') ? undefined : json['studentName'],
        'licenseCategory': !exists(json, 'licenseCategory') ? undefined : json['licenseCategory'],
        'schoolTypeId': !exists(json, 'schoolTypeId') ? undefined : json['schoolTypeId'],
        'schoolTypeName': !exists(json, 'schoolTypeName') ? undefined : json['schoolTypeName'],
        'schoolTypeCode': !exists(json, 'schoolTypeCode') ? undefined : json['schoolTypeCode'],
        'schoolSsn': !exists(json, 'schoolSsn') ? undefined : json['schoolSsn'],
        'schoolName': !exists(json, 'schoolName') ? undefined : json['schoolName'],
        'schoolEmployeeSsn': !exists(json, 'schoolEmployeeSsn') ? undefined : json['schoolEmployeeSsn'],
        'schoolEmployeeName': !exists(json, 'schoolEmployeeName') ? undefined : json['schoolEmployeeName'],
        'statusId': !exists(json, 'statusId') ? undefined : json['statusId'],
        'statusName': !exists(json, 'statusName') ? undefined : json['statusName'],
        'createdOn': !exists(json, 'createdOn') ? undefined : json['createdOn'],
        'comments': !exists(json, 'comments') ? undefined : json['comments'],
    };
}

export function SchoolTestResultToJSON(value?: SchoolTestResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookId': value.bookId,
        'id': value.id,
        'studentSsn': value.studentSsn,
        'studentName': value.studentName,
        'licenseCategory': value.licenseCategory,
        'schoolTypeId': value.schoolTypeId,
        'schoolTypeName': value.schoolTypeName,
        'schoolTypeCode': value.schoolTypeCode,
        'schoolSsn': value.schoolSsn,
        'schoolName': value.schoolName,
        'schoolEmployeeSsn': value.schoolEmployeeSsn,
        'schoolEmployeeName': value.schoolEmployeeName,
        'statusId': value.statusId,
        'statusName': value.statusName,
        'createdOn': value.createdOn,
        'comments': value.comments,
    };
}


