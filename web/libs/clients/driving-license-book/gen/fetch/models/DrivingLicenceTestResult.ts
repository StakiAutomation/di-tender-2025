/* tslint:disable */
/* eslint-disable */
/**
 * Digital DrivingLicenceBook API
 * Vefþjónusta fyrir rafræna ökunámsbók - f9a51338fc6bb51bf829cfc1123ddd104a8439cd-20240530.1
 *
 * The version of the OpenAPI document: v1
 * Contact: samgongustofa@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information about test resulst for student
 * @export
 * @interface DrivingLicenceTestResult
 */
export interface DrivingLicenceTestResult {
    /**
     * Unique id for test result
     * @type {string}
     * @memberof DrivingLicenceTestResult
     */
    id?: string | null;
    /**
     * Date of test (yyyy-MM-dd)
     * @type {string}
     * @memberof DrivingLicenceTestResult
     */
    examDate?: string | null;
    /**
     * Test results
     * @type {number}
     * @memberof DrivingLicenceTestResult
     */
    score?: number;
    /**
     * How many points did student get in part 1 (applies to written test)
     * @type {number}
     * @memberof DrivingLicenceTestResult
     */
    scorePart1?: number | null;
    /**
     * How many points did student get in part 2 (applies to written test)
     * @type {number}
     * @memberof DrivingLicenceTestResult
     */
    scorePart2?: number | null;
    /**
     * Whether student passed the test
     * @type {boolean}
     * @memberof DrivingLicenceTestResult
     */
    hasPassed?: boolean;
    /**
     * Test center social security number
     * @type {string}
     * @memberof DrivingLicenceTestResult
     */
    testCenterSsn?: string | null;
    /**
     * Name of test center
     * @type {string}
     * @memberof DrivingLicenceTestResult
     */
    testCenterName?: string | null;
    /**
     * Test examiner social security number
     * @type {string}
     * @memberof DrivingLicenceTestResult
     */
    testExaminerSsn?: string | null;
    /**
     * Name of test examiner
     * @type {string}
     * @memberof DrivingLicenceTestResult
     */
    testExaminerName?: string | null;
    /**
     * Type of test (1, 2, 3)
     * @type {number}
     * @memberof DrivingLicenceTestResult
     */
    testTypeId?: number;
    /**
     * Name of test
     * @type {string}
     * @memberof DrivingLicenceTestResult
     */
    testTypeName?: string | null;
    /**
     * Code for test type
     * @type {string}
     * @memberof DrivingLicenceTestResult
     */
    testTypeCode?: string | null;
    /**
     * Comments about registration
     * @type {string}
     * @memberof DrivingLicenceTestResult
     */
    comments?: string | null;
}

export function DrivingLicenceTestResultFromJSON(json: any): DrivingLicenceTestResult {
    return DrivingLicenceTestResultFromJSONTyped(json, false);
}

export function DrivingLicenceTestResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): DrivingLicenceTestResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'examDate': !exists(json, 'examDate') ? undefined : json['examDate'],
        'score': !exists(json, 'score') ? undefined : json['score'],
        'scorePart1': !exists(json, 'scorePart1') ? undefined : json['scorePart1'],
        'scorePart2': !exists(json, 'scorePart2') ? undefined : json['scorePart2'],
        'hasPassed': !exists(json, 'hasPassed') ? undefined : json['hasPassed'],
        'testCenterSsn': !exists(json, 'testCenterSsn') ? undefined : json['testCenterSsn'],
        'testCenterName': !exists(json, 'testCenterName') ? undefined : json['testCenterName'],
        'testExaminerSsn': !exists(json, 'testExaminerSsn') ? undefined : json['testExaminerSsn'],
        'testExaminerName': !exists(json, 'testExaminerName') ? undefined : json['testExaminerName'],
        'testTypeId': !exists(json, 'testTypeId') ? undefined : json['testTypeId'],
        'testTypeName': !exists(json, 'testTypeName') ? undefined : json['testTypeName'],
        'testTypeCode': !exists(json, 'testTypeCode') ? undefined : json['testTypeCode'],
        'comments': !exists(json, 'comments') ? undefined : json['comments'],
    };
}

export function DrivingLicenceTestResultToJSON(value?: DrivingLicenceTestResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'examDate': value.examDate,
        'score': value.score,
        'scorePart1': value.scorePart1,
        'scorePart2': value.scorePart2,
        'hasPassed': value.hasPassed,
        'testCenterSsn': value.testCenterSsn,
        'testCenterName': value.testCenterName,
        'testExaminerSsn': value.testExaminerSsn,
        'testExaminerName': value.testExaminerName,
        'testTypeId': value.testTypeId,
        'testTypeName': value.testTypeName,
        'testTypeCode': value.testTypeCode,
        'comments': value.comments,
    };
}


