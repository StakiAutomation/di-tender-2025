/* tslint:disable */
/* eslint-disable */
/**
 * Digital DrivingLicenceBook API
 * Vefþjónusta fyrir rafræna ökunámsbók - f9a51338fc6bb51bf829cfc1123ddd104a8439cd-20240530.1
 *
 * The version of the OpenAPI document: v1
 * Contact: samgongustofa@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents a data transfer object for a driving school exam.
 * @export
 * @interface DrivingSchoolExam
 */
export interface DrivingSchoolExam {
    /**
     * Gets or sets the unique ID for the test result.
     * @type {string}
     * @memberof DrivingSchoolExam
     */
    id?: string | null;
    /**
     * Gets or sets the date of the exam in the format (yyyy-MM-dd).
     * @type {string}
     * @memberof DrivingSchoolExam
     */
    examDate?: string | null;
    /**
     * Gets or sets the social security number of the driving school.
     * @type {string}
     * @memberof DrivingSchoolExam
     */
    schoolSsn?: string | null;
    /**
     * Gets or sets the name of the driving school.
     * @type {string}
     * @memberof DrivingSchoolExam
     */
    schoolName?: string | null;
    /**
     * Gets or sets the social security number of the driving school employee.
     * @type {string}
     * @memberof DrivingSchoolExam
     */
    schoolEmployeeSsn?: string | null;
    /**
     * Gets or sets the name of the driving school employee.
     * @type {string}
     * @memberof DrivingSchoolExam
     */
    schoolEmployeeName?: string | null;
    /**
     * Gets or sets the type of driving school (1, 2, 3).
     * @type {number}
     * @memberof DrivingSchoolExam
     */
    schoolTypeId?: number;
    /**
     * Gets or sets the name of the driving school type.
     * @type {string}
     * @memberof DrivingSchoolExam
     */
    schoolTypeName?: string | null;
    /**
     * Gets or sets the code for the driving school type.
     * @type {string}
     * @memberof DrivingSchoolExam
     */
    schoolTypeCode?: string | null;
    /**
     * Gets or sets the status ID of the driving school exam (2 = Completed, 4 = Expired, 9 = Canceled).
     * @type {number}
     * @memberof DrivingSchoolExam
     */
    status?: number;
    /**
     * Gets or sets the status name of the driving school exam.
     * @type {string}
     * @memberof DrivingSchoolExam
     */
    statusName?: string | null;
    /**
     * Gets or sets comments about the exam registration.
     * @type {string}
     * @memberof DrivingSchoolExam
     */
    comments?: string | null;
}

export function DrivingSchoolExamFromJSON(json: any): DrivingSchoolExam {
    return DrivingSchoolExamFromJSONTyped(json, false);
}

export function DrivingSchoolExamFromJSONTyped(json: any, ignoreDiscriminator: boolean): DrivingSchoolExam {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'examDate': !exists(json, 'examDate') ? undefined : json['examDate'],
        'schoolSsn': !exists(json, 'schoolSsn') ? undefined : json['schoolSsn'],
        'schoolName': !exists(json, 'schoolName') ? undefined : json['schoolName'],
        'schoolEmployeeSsn': !exists(json, 'schoolEmployeeSsn') ? undefined : json['schoolEmployeeSsn'],
        'schoolEmployeeName': !exists(json, 'schoolEmployeeName') ? undefined : json['schoolEmployeeName'],
        'schoolTypeId': !exists(json, 'schoolTypeId') ? undefined : json['schoolTypeId'],
        'schoolTypeName': !exists(json, 'schoolTypeName') ? undefined : json['schoolTypeName'],
        'schoolTypeCode': !exists(json, 'schoolTypeCode') ? undefined : json['schoolTypeCode'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'statusName': !exists(json, 'statusName') ? undefined : json['statusName'],
        'comments': !exists(json, 'comments') ? undefined : json['comments'],
    };
}

export function DrivingSchoolExamToJSON(value?: DrivingSchoolExam | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'examDate': value.examDate,
        'schoolSsn': value.schoolSsn,
        'schoolName': value.schoolName,
        'schoolEmployeeSsn': value.schoolEmployeeSsn,
        'schoolEmployeeName': value.schoolEmployeeName,
        'schoolTypeId': value.schoolTypeId,
        'schoolTypeName': value.schoolTypeName,
        'schoolTypeCode': value.schoolTypeCode,
        'status': value.status,
        'statusName': value.statusName,
        'comments': value.comments,
    };
}


