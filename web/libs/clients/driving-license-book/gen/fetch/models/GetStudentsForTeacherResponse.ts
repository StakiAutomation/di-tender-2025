/* tslint:disable */
/* eslint-disable */
/**
 * Digital DrivingLicenceBook API
 * Vefþjónusta fyrir rafræna ökunámsbók - f9a51338fc6bb51bf829cfc1123ddd104a8439cd-20240530.1
 *
 * The version of the OpenAPI document: v1
 * Contact: samgongustofa@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DigitalBook,
    DigitalBookFromJSON,
    DigitalBookFromJSONTyped,
    DigitalBookToJSON,
} from './';

/**
 * Represents the response DTO used by teachers to get a list of students.
 * @export
 * @interface GetStudentsForTeacherResponse
 */
export interface GetStudentsForTeacherResponse {
    /**
     * Gets or sets the list of digital driving license books associated with students.
     * @type {Array<DigitalBook>}
     * @memberof GetStudentsForTeacherResponse
     */
    data?: Array<DigitalBook> | null;
    /**
     * Gets or sets the cursor for the next item that should be fetched.
     * @type {string}
     * @memberof GetStudentsForTeacherResponse
     */
    nextCursor?: string | null;
}

export function GetStudentsForTeacherResponseFromJSON(json: any): GetStudentsForTeacherResponse {
    return GetStudentsForTeacherResponseFromJSONTyped(json, false);
}

export function GetStudentsForTeacherResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetStudentsForTeacherResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : (json['data'] === null ? null : (json['data'] as Array<any>).map(DigitalBookFromJSON)),
        'nextCursor': !exists(json, 'nextCursor') ? undefined : json['nextCursor'],
    };
}

export function GetStudentsForTeacherResponseToJSON(value?: GetStudentsForTeacherResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data === undefined ? undefined : (value.data === null ? null : (value.data as Array<any>).map(DigitalBookToJSON)),
        'nextCursor': value.nextCursor,
    };
}


