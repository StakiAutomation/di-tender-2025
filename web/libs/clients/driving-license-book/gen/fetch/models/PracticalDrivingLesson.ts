/* tslint:disable */
/* eslint-disable */
/**
 * Digital DrivingLicenceBook API
 * Vefþjónusta fyrir rafræna ökunámsbók - f9a51338fc6bb51bf829cfc1123ddd104a8439cd-20240530.1
 *
 * The version of the OpenAPI document: v1
 * Contact: samgongustofa@samgongustofa.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents a data transfer object for a practical driving lesson.
 * @export
 * @interface PracticalDrivingLesson
 */
export interface PracticalDrivingLesson {
    /**
     * Gets or sets the unique ID for the digital driving license book associated with the lesson.
     * @type {string}
     * @memberof PracticalDrivingLesson
     */
    bookId?: string | null;
    /**
     * Gets or sets the unique ID for the practical lesson.
     * @type {string}
     * @memberof PracticalDrivingLesson
     */
    id?: string | null;
    /**
     * Gets or sets the student's social security number.
     * @type {string}
     * @memberof PracticalDrivingLesson
     */
    studentSsn?: string | null;
    /**
     * Gets or sets the name of the student.
     * @type {string}
     * @memberof PracticalDrivingLesson
     */
    studentName?: string | null;
    /**
     * Gets or sets the type of driving license.
     * @type {string}
     * @memberof PracticalDrivingLesson
     */
    licenseCategory?: string | null;
    /**
     * Gets or sets the driving instructor's social security number.
     * @type {string}
     * @memberof PracticalDrivingLesson
     */
    teacherSsn?: string | null;
    /**
     * Gets or sets the name of the driving instructor.
     * @type {string}
     * @memberof PracticalDrivingLesson
     */
    teacherName?: string | null;
    /**
     * Gets or sets the amount of minutes in the practical lesson.
     * @type {number}
     * @memberof PracticalDrivingLesson
     */
    minutes?: number;
    /**
     * Gets or sets the date when the lesson was registered (yyyy-MM-dd).
     * @type {string}
     * @memberof PracticalDrivingLesson
     */
    createdOn?: string | null;
    /**
     * Gets or sets comments about the lesson.
     * @type {string}
     * @memberof PracticalDrivingLesson
     */
    comments?: string | null;
}

export function PracticalDrivingLessonFromJSON(json: any): PracticalDrivingLesson {
    return PracticalDrivingLessonFromJSONTyped(json, false);
}

export function PracticalDrivingLessonFromJSONTyped(json: any, ignoreDiscriminator: boolean): PracticalDrivingLesson {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookId': !exists(json, 'bookId') ? undefined : json['bookId'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'studentSsn': !exists(json, 'studentSsn') ? undefined : json['studentSsn'],
        'studentName': !exists(json, 'studentName') ? undefined : json['studentName'],
        'licenseCategory': !exists(json, 'licenseCategory') ? undefined : json['licenseCategory'],
        'teacherSsn': !exists(json, 'teacherSsn') ? undefined : json['teacherSsn'],
        'teacherName': !exists(json, 'teacherName') ? undefined : json['teacherName'],
        'minutes': !exists(json, 'minutes') ? undefined : json['minutes'],
        'createdOn': !exists(json, 'createdOn') ? undefined : json['createdOn'],
        'comments': !exists(json, 'comments') ? undefined : json['comments'],
    };
}

export function PracticalDrivingLessonToJSON(value?: PracticalDrivingLesson | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookId': value.bookId,
        'id': value.id,
        'studentSsn': value.studentSsn,
        'studentName': value.studentName,
        'licenseCategory': value.licenseCategory,
        'teacherSsn': value.teacherSsn,
        'teacherName': value.teacherName,
        'minutes': value.minutes,
        'createdOn': value.createdOn,
        'comments': value.comments,
    };
}


