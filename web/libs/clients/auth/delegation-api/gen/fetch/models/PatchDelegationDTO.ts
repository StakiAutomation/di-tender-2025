/* tslint:disable */
/* eslint-disable */
/**
 * IdentityServer Internal Delegation API
 * Internal API for IdentityServer to manage delegations.   The swagger document can be downloaded by appending `-json` to the last path segment.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UpdateDelegationScopeDTO,
    UpdateDelegationScopeDTOFromJSON,
    UpdateDelegationScopeDTOFromJSONTyped,
    UpdateDelegationScopeDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface PatchDelegationDTO
 */
export interface PatchDelegationDTO {
    /**
     * List of scopes to be added or updated for a delegation.
     * @type {Array<UpdateDelegationScopeDTO>}
     * @memberof PatchDelegationDTO
     */
    updateScopes?: Array<UpdateDelegationScopeDTO>;
    /**
     * List of scopes to be removed from a delegation.
     * @type {Array<string>}
     * @memberof PatchDelegationDTO
     */
    deleteScopes?: Array<string>;
}

export function PatchDelegationDTOFromJSON(json: any): PatchDelegationDTO {
    return PatchDelegationDTOFromJSONTyped(json, false);
}

export function PatchDelegationDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchDelegationDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'updateScopes': !exists(json, 'updateScopes') ? undefined : ((json['updateScopes'] as Array<any>).map(UpdateDelegationScopeDTOFromJSON)),
        'deleteScopes': !exists(json, 'deleteScopes') ? undefined : json['deleteScopes'],
    };
}

export function PatchDelegationDTOToJSON(value?: PatchDelegationDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'updateScopes': value.updateScopes === undefined ? undefined : ((value.updateScopes as Array<any>).map(UpdateDelegationScopeDTOToJSON)),
        'deleteScopes': value.deleteScopes,
    };
}


