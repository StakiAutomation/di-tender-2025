/* tslint:disable */
/* eslint-disable */
/**
 * IdentityServer Admin api
 * Api for administration.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TranslatedValueDto,
    TranslatedValueDtoFromJSON,
    TranslatedValueDtoFromJSONTyped,
    TranslatedValueDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface AdminScopeDTO
 */
export interface AdminScopeDTO {
    /**
     * 
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    enabled: boolean;
    /**
     * 
     * @type {string}
     * @memberof AdminScopeDTO
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AdminScopeDTO
     */
    domainName: string;
    /**
     * 
     * @type {number}
     * @memberof AdminScopeDTO
     */
    order: number;
    /**
     * 
     * @type {string}
     * @memberof AdminScopeDTO
     */
    groupId: string;
    /**
     * 
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    showInDiscoveryDocument: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    required: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    emphasize: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    grantToAuthenticatedUser: boolean;
    /**
     * Use supportedDelegationTypes instead
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    grantToLegalGuardians: boolean;
    /**
     * Use supportedDelegationTypes instead
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    grantToProcuringHolders: boolean;
    /**
     * Use supportedDelegationTypes instead
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    grantToPersonalRepresentatives: boolean;
    /**
     * Use supportedDelegationTypes instead
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    allowExplicitDelegationGrant: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    automaticDelegationGrant: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof AdminScopeDTO
     */
    supportedDelegationTypes: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    alsoForDelegatedUser: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AdminScopeDTO
     */
    isAccessControlled: boolean;
    /**
     * 
     * @type {Array<TranslatedValueDto>}
     * @memberof AdminScopeDTO
     */
    displayName: Array<TranslatedValueDto>;
    /**
     * 
     * @type {Array<TranslatedValueDto>}
     * @memberof AdminScopeDTO
     */
    description: Array<TranslatedValueDto>;
}

export function AdminScopeDTOFromJSON(json: any): AdminScopeDTO {
    return AdminScopeDTOFromJSONTyped(json, false);
}

export function AdminScopeDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminScopeDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'name': json['name'],
        'domainName': json['domainName'],
        'order': json['order'],
        'groupId': json['groupId'],
        'showInDiscoveryDocument': json['showInDiscoveryDocument'],
        'required': json['required'],
        'emphasize': json['emphasize'],
        'grantToAuthenticatedUser': json['grantToAuthenticatedUser'],
        'grantToLegalGuardians': json['grantToLegalGuardians'],
        'grantToProcuringHolders': json['grantToProcuringHolders'],
        'grantToPersonalRepresentatives': json['grantToPersonalRepresentatives'],
        'allowExplicitDelegationGrant': json['allowExplicitDelegationGrant'],
        'automaticDelegationGrant': json['automaticDelegationGrant'],
        'supportedDelegationTypes': json['supportedDelegationTypes'],
        'alsoForDelegatedUser': json['alsoForDelegatedUser'],
        'isAccessControlled': json['isAccessControlled'],
        'displayName': ((json['displayName'] as Array<any>).map(TranslatedValueDtoFromJSON)),
        'description': ((json['description'] as Array<any>).map(TranslatedValueDtoFromJSON)),
    };
}

export function AdminScopeDTOToJSON(value?: AdminScopeDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'name': value.name,
        'domainName': value.domainName,
        'order': value.order,
        'groupId': value.groupId,
        'showInDiscoveryDocument': value.showInDiscoveryDocument,
        'required': value.required,
        'emphasize': value.emphasize,
        'grantToAuthenticatedUser': value.grantToAuthenticatedUser,
        'grantToLegalGuardians': value.grantToLegalGuardians,
        'grantToProcuringHolders': value.grantToProcuringHolders,
        'grantToPersonalRepresentatives': value.grantToPersonalRepresentatives,
        'allowExplicitDelegationGrant': value.allowExplicitDelegationGrant,
        'automaticDelegationGrant': value.automaticDelegationGrant,
        'supportedDelegationTypes': value.supportedDelegationTypes,
        'alsoForDelegatedUser': value.alsoForDelegatedUser,
        'isAccessControlled': value.isAccessControlled,
        'displayName': ((value.displayName as Array<any>).map(TranslatedValueDtoToJSON)),
        'description': ((value.description as Array<any>).map(TranslatedValueDtoToJSON)),
    };
}


