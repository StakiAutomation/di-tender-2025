/* tslint:disable */
/* eslint-disable */
/**
 * Icelandic Health Insurance (IHI) - Island.is
 * Webservices for the X-Road serveces for Island.is
 *
 * The version of the OpenAPI document: v1
 * Contact: hjalp@sjukra.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * When IHI receives a document, it goes through some checks to see if the document is valid. If it's not valid for some reason, an error will be sent to the sender.
 * The document could possibly have more than one error, therefore a list of the DocumentError class will be included in the response.
 * @export
 * @interface DocumentError
 */
export interface DocumentError {
    /**
     * If the document includes many lines of errors, this indicates for which line error refers to.
     * @type {number}
     * @memberof DocumentError
     */
    lineNumber?: number;
    /**
     * 1 = Yes, 0 = No
     * @type {number}
     * @memberof DocumentError
     */
    isError?: number;
    /**
     * Indicates which type of error this is.
     * @type {string}
     * @memberof DocumentError
     */
    errorType?: string | null;
    /**
     * Description of the error.
     * @type {string}
     * @memberof DocumentError
     */
    errorDesc?: string | null;
}

export function DocumentErrorFromJSON(json: any): DocumentError {
    return DocumentErrorFromJSONTyped(json, false);
}

export function DocumentErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lineNumber': !exists(json, 'lineNumber') ? undefined : json['lineNumber'],
        'isError': !exists(json, 'isError') ? undefined : json['isError'],
        'errorType': !exists(json, 'errorType') ? undefined : json['errorType'],
        'errorDesc': !exists(json, 'errorDesc') ? undefined : json['errorDesc'],
    };
}

export function DocumentErrorToJSON(value?: DocumentError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lineNumber': value.lineNumber,
        'isError': value.isError,
        'errorType': value.errorType,
        'errorDesc': value.errorDesc,
    };
}


