/* tslint:disable */
/* eslint-disable */
/**
 * Icelandic Health Insurance (IHI) - Island.is
 * Webservices for the X-Road serveces for Island.is
 *
 * The version of the OpenAPI document: v1
 * Contact: hjalp@sjukra.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HealthInsuranceApplication,
    HealthInsuranceApplicationFromJSON,
    HealthInsuranceApplicationFromJSONTyped,
    HealthInsuranceApplicationToJSON,
} from './';

/**
 * 
 * @export
 * @interface GetHealthInsuranceApplicationType
 */
export interface GetHealthInsuranceApplicationType {
    /**
     * Unique number for the request from IHI database.
     * @type {number}
     * @memberof GetHealthInsuranceApplicationType
     */
    numberIHI?: number;
    /**
     * List of person's health insurance applications in IHI systems
     * @type {Array<HealthInsuranceApplication>}
     * @memberof GetHealthInsuranceApplicationType
     */
    applications?: Array<HealthInsuranceApplication> | null;
}

export function GetHealthInsuranceApplicationTypeFromJSON(json: any): GetHealthInsuranceApplicationType {
    return GetHealthInsuranceApplicationTypeFromJSONTyped(json, false);
}

export function GetHealthInsuranceApplicationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetHealthInsuranceApplicationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'numberIHI': !exists(json, 'numberIHI') ? undefined : json['numberIHI'],
        'applications': !exists(json, 'applications') ? undefined : (json['applications'] === null ? null : (json['applications'] as Array<any>).map(HealthInsuranceApplicationFromJSON)),
    };
}

export function GetHealthInsuranceApplicationTypeToJSON(value?: GetHealthInsuranceApplicationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'numberIHI': value.numberIHI,
        'applications': value.applications === undefined ? undefined : (value.applications === null ? null : (value.applications as Array<any>).map(HealthInsuranceApplicationToJSON)),
    };
}


