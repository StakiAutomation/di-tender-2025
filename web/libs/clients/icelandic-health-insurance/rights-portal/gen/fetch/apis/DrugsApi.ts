/* tslint:disable */
/* eslint-disable */
/**
 * Minarsidur
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    MinarsidurAPIModelsDrugsDrugBillDTO,
    MinarsidurAPIModelsDrugsDrugBillDTOFromJSON,
    MinarsidurAPIModelsDrugsDrugBillDTOToJSON,
    MinarsidurAPIModelsDrugsDrugBillLineItemDTO,
    MinarsidurAPIModelsDrugsDrugBillLineItemDTOFromJSON,
    MinarsidurAPIModelsDrugsDrugBillLineItemDTOToJSON,
    MinarsidurAPIModelsDrugsDrugCalculatorRequestDTO,
    MinarsidurAPIModelsDrugsDrugCalculatorRequestDTOFromJSON,
    MinarsidurAPIModelsDrugsDrugCalculatorRequestDTOToJSON,
    MinarsidurAPIModelsDrugsDrugCalculatorResponseDTO,
    MinarsidurAPIModelsDrugsDrugCalculatorResponseDTOFromJSON,
    MinarsidurAPIModelsDrugsDrugCalculatorResponseDTOToJSON,
    MinarsidurAPIModelsDrugsDrugCertificateDTO,
    MinarsidurAPIModelsDrugsDrugCertificateDTOFromJSON,
    MinarsidurAPIModelsDrugsDrugCertificateDTOToJSON,
    MinarsidurAPIModelsDrugsDrugPaymentPeriodDTO,
    MinarsidurAPIModelsDrugsDrugPaymentPeriodDTOFromJSON,
    MinarsidurAPIModelsDrugsDrugPaymentPeriodDTOToJSON,
    MinarsidurAPIModelsDrugsGetDrugsResponseDTO,
    MinarsidurAPIModelsDrugsGetDrugsResponseDTOFromJSON,
    MinarsidurAPIModelsDrugsGetDrugsResponseDTOToJSON,
} from '../models';

export interface DrugCalculatorRequest {
    minarsidurAPIModelsDrugsDrugCalculatorRequestDTO: MinarsidurAPIModelsDrugsDrugCalculatorRequestDTO;
}

export interface GetDrugBillLineItemsRequest {
    paymentPeriodId: number;
    billId: number;
}

export interface GetDrugBillsRequest {
    paymentPeriodId: number;
}

export interface GetDrugsRequest {
    nameStartsWith?: string;
    limit?: number;
    pageNumber?: number;
    before?: string;
    after?: string;
}

/**
 * 
 */
export class DrugsApi extends runtime.BaseAPI {

    /**
     */
    async drugCalculatorRaw(requestParameters: DrugCalculatorRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsDrugsDrugCalculatorResponseDTO>> {
        if (requestParameters.minarsidurAPIModelsDrugsDrugCalculatorRequestDTO === null || requestParameters.minarsidurAPIModelsDrugsDrugCalculatorRequestDTO === undefined) {
            throw new runtime.RequiredError('minarsidurAPIModelsDrugsDrugCalculatorRequestDTO','Required parameter requestParameters.minarsidurAPIModelsDrugsDrugCalculatorRequestDTO was null or undefined when calling drugCalculator.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/drugs/drugcalculator`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MinarsidurAPIModelsDrugsDrugCalculatorRequestDTOToJSON(requestParameters.minarsidurAPIModelsDrugsDrugCalculatorRequestDTO),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsDrugsDrugCalculatorResponseDTOFromJSON(jsonValue));
    }

    /**
     */
    async drugCalculator(requestParameters: DrugCalculatorRequest): Promise<MinarsidurAPIModelsDrugsDrugCalculatorResponseDTO> {
        const response = await this.drugCalculatorRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async getDrugBillLineItemsRaw(requestParameters: GetDrugBillLineItemsRequest): Promise<runtime.ApiResponse<Array<MinarsidurAPIModelsDrugsDrugBillLineItemDTO>>> {
        if (requestParameters.paymentPeriodId === null || requestParameters.paymentPeriodId === undefined) {
            throw new runtime.RequiredError('paymentPeriodId','Required parameter requestParameters.paymentPeriodId was null or undefined when calling getDrugBillLineItems.');
        }

        if (requestParameters.billId === null || requestParameters.billId === undefined) {
            throw new runtime.RequiredError('billId','Required parameter requestParameters.billId was null or undefined when calling getDrugBillLineItems.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/drugs/paymentperiods/{paymentPeriodId}/bills/{billId}/lineitems`.replace(`{${"paymentPeriodId"}}`, encodeURIComponent(String(requestParameters.paymentPeriodId))).replace(`{${"billId"}}`, encodeURIComponent(String(requestParameters.billId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MinarsidurAPIModelsDrugsDrugBillLineItemDTOFromJSON));
    }

    /**
     */
    async getDrugBillLineItems(requestParameters: GetDrugBillLineItemsRequest): Promise<Array<MinarsidurAPIModelsDrugsDrugBillLineItemDTO>> {
        const response = await this.getDrugBillLineItemsRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async getDrugBillsRaw(requestParameters: GetDrugBillsRequest): Promise<runtime.ApiResponse<Array<MinarsidurAPIModelsDrugsDrugBillDTO>>> {
        if (requestParameters.paymentPeriodId === null || requestParameters.paymentPeriodId === undefined) {
            throw new runtime.RequiredError('paymentPeriodId','Required parameter requestParameters.paymentPeriodId was null or undefined when calling getDrugBills.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/drugs/paymentperiods/{paymentPeriodId}/bills`.replace(`{${"paymentPeriodId"}}`, encodeURIComponent(String(requestParameters.paymentPeriodId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MinarsidurAPIModelsDrugsDrugBillDTOFromJSON));
    }

    /**
     */
    async getDrugBills(requestParameters: GetDrugBillsRequest): Promise<Array<MinarsidurAPIModelsDrugsDrugBillDTO>> {
        const response = await this.getDrugBillsRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async getDrugCertificatesRaw(): Promise<runtime.ApiResponse<Array<MinarsidurAPIModelsDrugsDrugCertificateDTO>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/drugs/certificates`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MinarsidurAPIModelsDrugsDrugCertificateDTOFromJSON));
    }

    /**
     */
    async getDrugCertificates(): Promise<Array<MinarsidurAPIModelsDrugsDrugCertificateDTO>> {
        const response = await this.getDrugCertificatesRaw();
        return await response.value();
    }

    /**
     */
    async getDrugPaymentPeriodsRaw(): Promise<runtime.ApiResponse<Array<MinarsidurAPIModelsDrugsDrugPaymentPeriodDTO>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/drugs/paymentperiods`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MinarsidurAPIModelsDrugsDrugPaymentPeriodDTOFromJSON));
    }

    /**
     */
    async getDrugPaymentPeriods(): Promise<Array<MinarsidurAPIModelsDrugsDrugPaymentPeriodDTO>> {
        const response = await this.getDrugPaymentPeriodsRaw();
        return await response.value();
    }

    /**
     */
    async getDrugsRaw(requestParameters: GetDrugsRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsDrugsGetDrugsResponseDTO>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.nameStartsWith !== undefined) {
            queryParameters['nameStartsWith'] = requestParameters.nameStartsWith;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pageNumber !== undefined) {
            queryParameters['pageNumber'] = requestParameters.pageNumber;
        }

        if (requestParameters.before !== undefined) {
            queryParameters['before'] = requestParameters.before;
        }

        if (requestParameters.after !== undefined) {
            queryParameters['after'] = requestParameters.after;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/drugs/drugs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsDrugsGetDrugsResponseDTOFromJSON(jsonValue));
    }

    /**
     */
    async getDrugs(requestParameters: GetDrugsRequest): Promise<MinarsidurAPIModelsDrugsGetDrugsResponseDTO> {
        const response = await this.getDrugsRaw(requestParameters);
        return await response.value();
    }

}
