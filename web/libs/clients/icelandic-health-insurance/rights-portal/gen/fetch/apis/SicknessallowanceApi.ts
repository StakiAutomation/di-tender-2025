/* tslint:disable */
/* eslint-disable */
/**
 * Minarsidur
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    MinarsidurAPIModelsDocumentDTO,
    MinarsidurAPIModelsDocumentDTOFromJSON,
    MinarsidurAPIModelsDocumentDTOToJSON,
    MinarsidurAPIModelsSicknessAllowanceApplicationDTO,
    MinarsidurAPIModelsSicknessAllowanceApplicationDTOFromJSON,
    MinarsidurAPIModelsSicknessAllowanceApplicationDTOToJSON,
    MinarsidurAPIModelsSicknessAllowanceDoctorCertificateDTO,
    MinarsidurAPIModelsSicknessAllowanceDoctorCertificateDTOFromJSON,
    MinarsidurAPIModelsSicknessAllowanceDoctorCertificateDTOToJSON,
    MinarsidurAPIModelsSicknessAllowancePastApplicationDTO,
    MinarsidurAPIModelsSicknessAllowancePastApplicationDTOFromJSON,
    MinarsidurAPIModelsSicknessAllowancePastApplicationDTOToJSON,
    MinarsidurAPIModelsSicknessAllowanceResponseSubmitSicknessAllowanceApplicationResponseDTO,
    MinarsidurAPIModelsSicknessAllowanceResponseSubmitSicknessAllowanceApplicationResponseDTOFromJSON,
    MinarsidurAPIModelsSicknessAllowanceResponseSubmitSicknessAllowanceApplicationResponseDTOToJSON,
} from '../models';

export interface GetSicknessAllowanceApplicationDocumentRequest {
    documentId: number;
}

export interface GetSicknessAllowanceApplicationsRequest {
    dateFrom: Date;
    dateTo: Date;
}

export interface SubmitSicknessAllowanceApplicationRequest {
    minarsidurAPIModelsSicknessAllowanceApplicationDTO: MinarsidurAPIModelsSicknessAllowanceApplicationDTO;
}

export interface SubmitSicknessAllowanceApplicationAttachmentRequest {
    applicationId: number;
    minarsidurAPIModelsDocumentDTO: MinarsidurAPIModelsDocumentDTO;
}

/**
 * 
 */
export class SicknessallowanceApi extends runtime.BaseAPI {

    /**
     */
    async getSicknessAllowanceApplicationDocumentRaw(requestParameters: GetSicknessAllowanceApplicationDocumentRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsDocumentDTO>> {
        if (requestParameters.documentId === null || requestParameters.documentId === undefined) {
            throw new runtime.RequiredError('documentId','Required parameter requestParameters.documentId was null or undefined when calling getSicknessAllowanceApplicationDocument.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/sicknessallowance/applications/documents/{documentId}`.replace(`{${"documentId"}}`, encodeURIComponent(String(requestParameters.documentId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsDocumentDTOFromJSON(jsonValue));
    }

    /**
     */
    async getSicknessAllowanceApplicationDocument(requestParameters: GetSicknessAllowanceApplicationDocumentRequest): Promise<MinarsidurAPIModelsDocumentDTO> {
        const response = await this.getSicknessAllowanceApplicationDocumentRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async getSicknessAllowanceApplicationsRaw(requestParameters: GetSicknessAllowanceApplicationsRequest): Promise<runtime.ApiResponse<Array<MinarsidurAPIModelsSicknessAllowancePastApplicationDTO>>> {
        if (requestParameters.dateFrom === null || requestParameters.dateFrom === undefined) {
            throw new runtime.RequiredError('dateFrom','Required parameter requestParameters.dateFrom was null or undefined when calling getSicknessAllowanceApplications.');
        }

        if (requestParameters.dateTo === null || requestParameters.dateTo === undefined) {
            throw new runtime.RequiredError('dateTo','Required parameter requestParameters.dateTo was null or undefined when calling getSicknessAllowanceApplications.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.dateFrom !== undefined) {
            queryParameters['dateFrom'] = (requestParameters.dateFrom as any).toISOString().substr(0,10);
        }

        if (requestParameters.dateTo !== undefined) {
            queryParameters['dateTo'] = (requestParameters.dateTo as any).toISOString().substr(0,10);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/sicknessallowance/applications`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MinarsidurAPIModelsSicknessAllowancePastApplicationDTOFromJSON));
    }

    /**
     */
    async getSicknessAllowanceApplications(requestParameters: GetSicknessAllowanceApplicationsRequest): Promise<Array<MinarsidurAPIModelsSicknessAllowancePastApplicationDTO>> {
        const response = await this.getSicknessAllowanceApplicationsRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async getSicknessAllowanceDoctorCertificatesRaw(): Promise<runtime.ApiResponse<Array<MinarsidurAPIModelsSicknessAllowanceDoctorCertificateDTO>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/sicknessallowance/doctorCertificates`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MinarsidurAPIModelsSicknessAllowanceDoctorCertificateDTOFromJSON));
    }

    /**
     */
    async getSicknessAllowanceDoctorCertificates(): Promise<Array<MinarsidurAPIModelsSicknessAllowanceDoctorCertificateDTO>> {
        const response = await this.getSicknessAllowanceDoctorCertificatesRaw();
        return await response.value();
    }

    /**
     */
    async submitSicknessAllowanceApplicationRaw(requestParameters: SubmitSicknessAllowanceApplicationRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsSicknessAllowanceResponseSubmitSicknessAllowanceApplicationResponseDTO>> {
        if (requestParameters.minarsidurAPIModelsSicknessAllowanceApplicationDTO === null || requestParameters.minarsidurAPIModelsSicknessAllowanceApplicationDTO === undefined) {
            throw new runtime.RequiredError('minarsidurAPIModelsSicknessAllowanceApplicationDTO','Required parameter requestParameters.minarsidurAPIModelsSicknessAllowanceApplicationDTO was null or undefined when calling submitSicknessAllowanceApplication.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/sicknessallowance/applications/submit`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MinarsidurAPIModelsSicknessAllowanceApplicationDTOToJSON(requestParameters.minarsidurAPIModelsSicknessAllowanceApplicationDTO),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsSicknessAllowanceResponseSubmitSicknessAllowanceApplicationResponseDTOFromJSON(jsonValue));
    }

    /**
     */
    async submitSicknessAllowanceApplication(requestParameters: SubmitSicknessAllowanceApplicationRequest): Promise<MinarsidurAPIModelsSicknessAllowanceResponseSubmitSicknessAllowanceApplicationResponseDTO> {
        const response = await this.submitSicknessAllowanceApplicationRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async submitSicknessAllowanceApplicationAttachmentRaw(requestParameters: SubmitSicknessAllowanceApplicationAttachmentRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.applicationId === null || requestParameters.applicationId === undefined) {
            throw new runtime.RequiredError('applicationId','Required parameter requestParameters.applicationId was null or undefined when calling submitSicknessAllowanceApplicationAttachment.');
        }

        if (requestParameters.minarsidurAPIModelsDocumentDTO === null || requestParameters.minarsidurAPIModelsDocumentDTO === undefined) {
            throw new runtime.RequiredError('minarsidurAPIModelsDocumentDTO','Required parameter requestParameters.minarsidurAPIModelsDocumentDTO was null or undefined when calling submitSicknessAllowanceApplicationAttachment.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/sicknessallowance/applications/{applicationId}/attachment`.replace(`{${"applicationId"}}`, encodeURIComponent(String(requestParameters.applicationId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MinarsidurAPIModelsDocumentDTOToJSON(requestParameters.minarsidurAPIModelsDocumentDTO),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async submitSicknessAllowanceApplicationAttachment(requestParameters: SubmitSicknessAllowanceApplicationAttachmentRequest): Promise<void> {
        await this.submitSicknessAllowanceApplicationAttachmentRaw(requestParameters);
    }

}
