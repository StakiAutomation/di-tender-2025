/* tslint:disable */
/* eslint-disable */
/**
 * Minarsidur
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    MinarsidurAPIModelsApplicationApplicationFilesContent,
    MinarsidurAPIModelsApplicationApplicationFilesContentFromJSON,
    MinarsidurAPIModelsApplicationApplicationFilesContentToJSON,
    MinarsidurAPIModelsApplicationApplicationSystem,
    MinarsidurAPIModelsApplicationApplicationSystemFromJSON,
    MinarsidurAPIModelsApplicationApplicationSystemToJSON,
    MinarsidurAPIModelsApplicationResponseApplicationResponseDTO,
    MinarsidurAPIModelsApplicationResponseApplicationResponseDTOFromJSON,
    MinarsidurAPIModelsApplicationResponseApplicationResponseDTOToJSON,
} from '../models';

export interface ApplicationRequest {
    minarsidurAPIModelsApplicationApplicationSystem: MinarsidurAPIModelsApplicationApplicationSystem;
}

export interface ApplicationUploadRequest {
    minarsidurAPIModelsApplicationApplicationFilesContent: MinarsidurAPIModelsApplicationApplicationFilesContent;
}

/**
 * 
 */
export class ApplicationApi extends runtime.BaseAPI {

    /**
     */
    async applicationRaw(requestParameters: ApplicationRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsApplicationResponseApplicationResponseDTO>> {
        if (requestParameters.minarsidurAPIModelsApplicationApplicationSystem === null || requestParameters.minarsidurAPIModelsApplicationApplicationSystem === undefined) {
            throw new runtime.RequiredError('minarsidurAPIModelsApplicationApplicationSystem','Required parameter requestParameters.minarsidurAPIModelsApplicationApplicationSystem was null or undefined when calling application.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/application`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MinarsidurAPIModelsApplicationApplicationSystemToJSON(requestParameters.minarsidurAPIModelsApplicationApplicationSystem),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsApplicationResponseApplicationResponseDTOFromJSON(jsonValue));
    }

    /**
     */
    async application(requestParameters: ApplicationRequest): Promise<MinarsidurAPIModelsApplicationResponseApplicationResponseDTO> {
        const response = await this.applicationRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async applicationUploadRaw(requestParameters: ApplicationUploadRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsApplicationResponseApplicationResponseDTO>> {
        if (requestParameters.minarsidurAPIModelsApplicationApplicationFilesContent === null || requestParameters.minarsidurAPIModelsApplicationApplicationFilesContent === undefined) {
            throw new runtime.RequiredError('minarsidurAPIModelsApplicationApplicationFilesContent','Required parameter requestParameters.minarsidurAPIModelsApplicationApplicationFilesContent was null or undefined when calling applicationUpload.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/application/upload`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MinarsidurAPIModelsApplicationApplicationFilesContentToJSON(requestParameters.minarsidurAPIModelsApplicationApplicationFilesContent),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsApplicationResponseApplicationResponseDTOFromJSON(jsonValue));
    }

    /**
     */
    async applicationUpload(requestParameters: ApplicationUploadRequest): Promise<MinarsidurAPIModelsApplicationResponseApplicationResponseDTO> {
        const response = await this.applicationUploadRaw(requestParameters);
        return await response.value();
    }

}
