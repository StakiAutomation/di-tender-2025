/* tslint:disable */
/* eslint-disable */
/**
 * Minarsidur
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    MinarsidurAPIModelsDocumentDTO,
    MinarsidurAPIModelsDocumentDTOFromJSON,
    MinarsidurAPIModelsDocumentDTOToJSON,
    MinarsidurAPIModelsPaymentsPaymentOverviewDTO,
    MinarsidurAPIModelsPaymentsPaymentOverviewDTOFromJSON,
    MinarsidurAPIModelsPaymentsPaymentOverviewDTOToJSON,
    MinarsidurAPIModelsPaymentsPaymentOverviewServiceTypeDTO,
    MinarsidurAPIModelsPaymentsPaymentOverviewServiceTypeDTOFromJSON,
    MinarsidurAPIModelsPaymentsPaymentOverviewServiceTypeDTOToJSON,
} from '../models';

export interface GetPaymentsOverviewRequest {
    dateFrom: Date;
    dateTo: Date;
    serviceTypeCode?: string;
}

export interface GetPaymentsOverviewDocumentRequest {
    documentId: number;
}

/**
 * 
 */
export class PaymentsOverviewApi extends runtime.BaseAPI {

    /**
     */
    async getPaymentsOverviewRaw(requestParameters: GetPaymentsOverviewRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsPaymentsPaymentOverviewDTO>> {
        if (requestParameters.dateFrom === null || requestParameters.dateFrom === undefined) {
            throw new runtime.RequiredError('dateFrom','Required parameter requestParameters.dateFrom was null or undefined when calling getPaymentsOverview.');
        }

        if (requestParameters.dateTo === null || requestParameters.dateTo === undefined) {
            throw new runtime.RequiredError('dateTo','Required parameter requestParameters.dateTo was null or undefined when calling getPaymentsOverview.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.dateFrom !== undefined) {
            queryParameters['dateFrom'] = (requestParameters.dateFrom as any).toISOString().substr(0,10);
        }

        if (requestParameters.dateTo !== undefined) {
            queryParameters['dateTo'] = (requestParameters.dateTo as any).toISOString().substr(0,10);
        }

        if (requestParameters.serviceTypeCode !== undefined) {
            queryParameters['serviceTypeCode'] = requestParameters.serviceTypeCode;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/payments/overview`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsPaymentsPaymentOverviewDTOFromJSON(jsonValue));
    }

    /**
     */
    async getPaymentsOverview(requestParameters: GetPaymentsOverviewRequest): Promise<MinarsidurAPIModelsPaymentsPaymentOverviewDTO> {
        const response = await this.getPaymentsOverviewRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async getPaymentsOverviewDocumentRaw(requestParameters: GetPaymentsOverviewDocumentRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsDocumentDTO>> {
        if (requestParameters.documentId === null || requestParameters.documentId === undefined) {
            throw new runtime.RequiredError('documentId','Required parameter requestParameters.documentId was null or undefined when calling getPaymentsOverviewDocument.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/payments/overview/documents/{documentId}`.replace(`{${"documentId"}}`, encodeURIComponent(String(requestParameters.documentId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsDocumentDTOFromJSON(jsonValue));
    }

    /**
     */
    async getPaymentsOverviewDocument(requestParameters: GetPaymentsOverviewDocumentRequest): Promise<MinarsidurAPIModelsDocumentDTO> {
        const response = await this.getPaymentsOverviewDocumentRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async getPaymentsOverviewServiceTypesRaw(): Promise<runtime.ApiResponse<Array<MinarsidurAPIModelsPaymentsPaymentOverviewServiceTypeDTO>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/payments/overview/servicetypes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MinarsidurAPIModelsPaymentsPaymentOverviewServiceTypeDTOFromJSON));
    }

    /**
     */
    async getPaymentsOverviewServiceTypes(): Promise<Array<MinarsidurAPIModelsPaymentsPaymentOverviewServiceTypeDTO>> {
        const response = await this.getPaymentsOverviewServiceTypesRaw();
        return await response.value();
    }

}
