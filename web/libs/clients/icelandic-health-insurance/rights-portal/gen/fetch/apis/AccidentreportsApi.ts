/* tslint:disable */
/* eslint-disable */
/**
 * Minarsidur
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    MinarsidurAPIModelsAccidentReportsAccidentReportAttachmentDTO,
    MinarsidurAPIModelsAccidentReportsAccidentReportAttachmentDTOFromJSON,
    MinarsidurAPIModelsAccidentReportsAccidentReportAttachmentDTOToJSON,
    MinarsidurAPIModelsAccidentReportsAccidentReportConfirmationDTO,
    MinarsidurAPIModelsAccidentReportsAccidentReportConfirmationDTOFromJSON,
    MinarsidurAPIModelsAccidentReportsAccidentReportConfirmationDTOToJSON,
    MinarsidurAPIModelsAccidentReportsAccidentReportDTO,
    MinarsidurAPIModelsAccidentReportsAccidentReportDTOFromJSON,
    MinarsidurAPIModelsAccidentReportsAccidentReportDTOToJSON,
    MinarsidurAPIModelsAccidentReportsResponseGetAccidentReportStatusResponseDTO,
    MinarsidurAPIModelsAccidentReportsResponseGetAccidentReportStatusResponseDTOFromJSON,
    MinarsidurAPIModelsAccidentReportsResponseGetAccidentReportStatusResponseDTOToJSON,
    MinarsidurAPIModelsAccidentReportsResponseSubmitAccidentReportResponseDTO,
    MinarsidurAPIModelsAccidentReportsResponseSubmitAccidentReportResponseDTOFromJSON,
    MinarsidurAPIModelsAccidentReportsResponseSubmitAccidentReportResponseDTOToJSON,
    MinarsidurAPIModelsMethodResponseDTO,
    MinarsidurAPIModelsMethodResponseDTOFromJSON,
    MinarsidurAPIModelsMethodResponseDTOToJSON,
} from '../models';

export interface GetAccidentReportStatusRequest {
    reportId: number;
}

export interface SubmitAccidentReportRequest {
    minarsidurAPIModelsAccidentReportsAccidentReportDTO: MinarsidurAPIModelsAccidentReportsAccidentReportDTO;
}

export interface SubmitAccidentReportAttachmentRequest {
    reportId: number;
    minarsidurAPIModelsAccidentReportsAccidentReportAttachmentDTO: MinarsidurAPIModelsAccidentReportsAccidentReportAttachmentDTO;
}

export interface SubmitAccidentReportConfirmationRequest {
    reportId: number;
    minarsidurAPIModelsAccidentReportsAccidentReportConfirmationDTO: MinarsidurAPIModelsAccidentReportsAccidentReportConfirmationDTO;
}

/**
 * 
 */
export class AccidentreportsApi extends runtime.BaseAPI {

    /**
     */
    async getAccidentReportStatusRaw(requestParameters: GetAccidentReportStatusRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsAccidentReportsResponseGetAccidentReportStatusResponseDTO>> {
        if (requestParameters.reportId === null || requestParameters.reportId === undefined) {
            throw new runtime.RequiredError('reportId','Required parameter requestParameters.reportId was null or undefined when calling getAccidentReportStatus.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/accidentreports/{reportId}/status`.replace(`{${"reportId"}}`, encodeURIComponent(String(requestParameters.reportId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsAccidentReportsResponseGetAccidentReportStatusResponseDTOFromJSON(jsonValue));
    }

    /**
     */
    async getAccidentReportStatus(requestParameters: GetAccidentReportStatusRequest): Promise<MinarsidurAPIModelsAccidentReportsResponseGetAccidentReportStatusResponseDTO> {
        const response = await this.getAccidentReportStatusRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async submitAccidentReportRaw(requestParameters: SubmitAccidentReportRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsAccidentReportsResponseSubmitAccidentReportResponseDTO>> {
        if (requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportDTO === null || requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportDTO === undefined) {
            throw new runtime.RequiredError('minarsidurAPIModelsAccidentReportsAccidentReportDTO','Required parameter requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportDTO was null or undefined when calling submitAccidentReport.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/accidentreports/submit`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MinarsidurAPIModelsAccidentReportsAccidentReportDTOToJSON(requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportDTO),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsAccidentReportsResponseSubmitAccidentReportResponseDTOFromJSON(jsonValue));
    }

    /**
     */
    async submitAccidentReport(requestParameters: SubmitAccidentReportRequest): Promise<MinarsidurAPIModelsAccidentReportsResponseSubmitAccidentReportResponseDTO> {
        const response = await this.submitAccidentReportRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async submitAccidentReportAttachmentRaw(requestParameters: SubmitAccidentReportAttachmentRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsMethodResponseDTO>> {
        if (requestParameters.reportId === null || requestParameters.reportId === undefined) {
            throw new runtime.RequiredError('reportId','Required parameter requestParameters.reportId was null or undefined when calling submitAccidentReportAttachment.');
        }

        if (requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportAttachmentDTO === null || requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportAttachmentDTO === undefined) {
            throw new runtime.RequiredError('minarsidurAPIModelsAccidentReportsAccidentReportAttachmentDTO','Required parameter requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportAttachmentDTO was null or undefined when calling submitAccidentReportAttachment.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/accidentreports/{reportId}/attachment`.replace(`{${"reportId"}}`, encodeURIComponent(String(requestParameters.reportId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MinarsidurAPIModelsAccidentReportsAccidentReportAttachmentDTOToJSON(requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportAttachmentDTO),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsMethodResponseDTOFromJSON(jsonValue));
    }

    /**
     */
    async submitAccidentReportAttachment(requestParameters: SubmitAccidentReportAttachmentRequest): Promise<MinarsidurAPIModelsMethodResponseDTO> {
        const response = await this.submitAccidentReportAttachmentRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async submitAccidentReportConfirmationRaw(requestParameters: SubmitAccidentReportConfirmationRequest): Promise<runtime.ApiResponse<MinarsidurAPIModelsMethodResponseDTO>> {
        if (requestParameters.reportId === null || requestParameters.reportId === undefined) {
            throw new runtime.RequiredError('reportId','Required parameter requestParameters.reportId was null or undefined when calling submitAccidentReportConfirmation.');
        }

        if (requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportConfirmationDTO === null || requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportConfirmationDTO === undefined) {
            throw new runtime.RequiredError('minarsidurAPIModelsAccidentReportsAccidentReportConfirmationDTO','Required parameter requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportConfirmationDTO was null or undefined when calling submitAccidentReportConfirmation.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/accidentreports/{reportId}/confirmation`.replace(`{${"reportId"}}`, encodeURIComponent(String(requestParameters.reportId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MinarsidurAPIModelsAccidentReportsAccidentReportConfirmationDTOToJSON(requestParameters.minarsidurAPIModelsAccidentReportsAccidentReportConfirmationDTO),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MinarsidurAPIModelsMethodResponseDTOFromJSON(jsonValue));
    }

    /**
     */
    async submitAccidentReportConfirmation(requestParameters: SubmitAccidentReportConfirmationRequest): Promise<MinarsidurAPIModelsMethodResponseDTO> {
        const response = await this.submitAccidentReportConfirmationRaw(requestParameters);
        return await response.value();
    }

}
