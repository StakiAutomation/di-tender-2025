/* tslint:disable */
/* eslint-disable */
/**
 * LibraAPI
 * LibraAPI gives information about loans in HMS.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CoPayerReturnModel,
    CoPayerReturnModelFromJSON,
    CoPayerReturnModelFromJSONTyped,
    CoPayerReturnModelToJSON,
    PropertyReturnModel,
    PropertyReturnModelFromJSON,
    PropertyReturnModelFromJSONTyped,
    PropertyReturnModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface LoanHistoryReturnModel
 */
export interface LoanHistoryReturnModel {
    /**
     * Unique id of loan.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    loanId?: number;
    /**
     * Name of borrower.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    name?: string | null;
    /**
     * Home address of borrower.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    homeAddress?: string | null;
    /**
     * Postal code of borrower.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    postNumber?: number;
    /**
     * Municipality of the borrower.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    municipality?: string | null;
    /**
     * First interest date of loan.
     * @type {Date}
     * @memberof LoanHistoryReturnModel
     */
    firstInterestDate?: Date | null;
    /**
     * First payment date.
     * @type {Date}
     * @memberof LoanHistoryReturnModel
     */
    firstPaymentDate?: Date | null;
    /**
     * Total number of payments.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    totalNumberOfPayments?: number | null;
    /**
     * Number of payments per year.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    numberOfPaymentPerYear?: number | null;
    /**
     * Balance of payment. Returns yes or no.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    balancePayment?: string | null;
    /**
     * Payment Fee that needs to be paid if loan borrower pays loan fully or pays payment exceeding agreed payments.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    paymentFee?: string | null;
    /**
     * Payment Delayment. Returns yes if loan payment has or is delayed.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    paymentDelayment?: string | null;
    /**
     * Temporarily delayment of payments.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    temporaryPaymentDelayment?: string | null;
    /**
     * Variable interest (Yes/No) - (Já/Nei)
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    variableInterest?: string | null;
    /**
     * Number loan type. If empty then the loan is not type 48 which is (AffiliateLoan)Hlutdeildarlán.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    affiliateLoan?: string | null;
    /**
     * Type of price index. For example: CPI(NEY) - Consumer Price Index
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    priceIndexType?: string | null;
    /**
     * Base Index on date when loan is issued.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    baseIndex?: number | null;
    /**
     * Interest
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    interest?: number | null;
    /**
     * Original Loan Amount
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    originalLoanAmount?: number;
    /**
     * Next payment date.
     * @type {Date}
     * @memberof LoanHistoryReturnModel
     */
    nextPaymentDate?: Date | null;
    /**
     * Last payment date
     * @type {Date}
     * @memberof LoanHistoryReturnModel
     */
    lastPaymentDate?: Date | null;
    /**
     * Last unpaid invoice by borrower.
     * @type {Date}
     * @memberof LoanHistoryReturnModel
     */
    lastUnpaidInvoiceDate?: Date | null;
    /**
     * Number of payment dates remaining.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    numberOfPaymentDatesRemaining?: number | null;
    /**
     * Status of settlement payment. Rarely used.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    statusSettlementPayment?: number;
    /**
     * Last paid amount.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    lastPaymentAmount?: number | null;
    /**
     * Total Payment that is due because borrower has defaulted on his loan.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    totalDueAmount?: number;
    /**
     * Remaining balance without price improvements and interests.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    balanceWithoutInterestPriceImprovements?: number | null;
    /**
     * Accrued interest and price improvements.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    accruedInterestPriceImprovements?: number | null;
    /**
     * Remaining of balance assuming that the borrower has no debt.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    remainingBalanceWithoutDebt?: number | null;
    /**
     * Fee for repayment of loan.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    repaymentFee?: number | null;
    /**
     * Loan amount with repayment fee.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    loanAmountWithRepayment?: number | null;
    /**
     * Status of loan. Active/Inactive.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    loanStatus?: string | null;
    /**
     * National Id(Kennitala) of a person.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    nationalId?: string | null;
    /**
     * Property ID of mortgage.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    propertyId?: string | null;
    /**
     * Property address.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    propertyAddress?: string | null;
    /**
     * Municipality of property.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    propertyMunicipality?: string | null;
    /**
     * Epilog(Matshluti) is a number from the Icelandic property registry that represents a part of the property. For example a garage. Term from Property registry.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    epilog?: string | null;
    /**
     * Municipality number of property.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    municipalityNumber?: string | null;
    /**
     * Type of loan.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    loanType?: string | null;
    /**
     * Only applies to loan of the type "ádráttarlán". Number reflects number of payments to the loan taker by HMS. Each payment might have different interest rate etc.
     * @type {number}
     * @memberof LoanHistoryReturnModel
     */
    installments?: number;
    /**
     * Name of the co-payer.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    coPayerName?: string | null;
    /**
     * National id of the co-payer.
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    coPayerNationalId?: string | null;
    /**
     * List of properties that this loan is for.
     * @type {Array<PropertyReturnModel>}
     * @memberof LoanHistoryReturnModel
     */
    properties?: Array<PropertyReturnModel> | null;
    /**
     * List of co-payers that are registered on this loan.
     * @type {Array<CoPayerReturnModel>}
     * @memberof LoanHistoryReturnModel
     */
    coPayers?: Array<CoPayerReturnModel> | null;
    /**
     * Name of creditor
     * @type {string}
     * @memberof LoanHistoryReturnModel
     */
    readonly creditor?: string | null;
}

export function LoanHistoryReturnModelFromJSON(json: any): LoanHistoryReturnModel {
    return LoanHistoryReturnModelFromJSONTyped(json, false);
}

export function LoanHistoryReturnModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoanHistoryReturnModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'loanId': !exists(json, 'loanId') ? undefined : json['loanId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'homeAddress': !exists(json, 'homeAddress') ? undefined : json['homeAddress'],
        'postNumber': !exists(json, 'postNumber') ? undefined : json['postNumber'],
        'municipality': !exists(json, 'municipality') ? undefined : json['municipality'],
        'firstInterestDate': !exists(json, 'firstInterestDate') ? undefined : (json['firstInterestDate'] === null ? null : new Date(json['firstInterestDate'])),
        'firstPaymentDate': !exists(json, 'firstPaymentDate') ? undefined : (json['firstPaymentDate'] === null ? null : new Date(json['firstPaymentDate'])),
        'totalNumberOfPayments': !exists(json, 'totalNumberOfPayments') ? undefined : json['totalNumberOfPayments'],
        'numberOfPaymentPerYear': !exists(json, 'numberOfPaymentPerYear') ? undefined : json['numberOfPaymentPerYear'],
        'balancePayment': !exists(json, 'balancePayment') ? undefined : json['balancePayment'],
        'paymentFee': !exists(json, 'paymentFee') ? undefined : json['paymentFee'],
        'paymentDelayment': !exists(json, 'paymentDelayment') ? undefined : json['paymentDelayment'],
        'temporaryPaymentDelayment': !exists(json, 'temporaryPaymentDelayment') ? undefined : json['temporaryPaymentDelayment'],
        'variableInterest': !exists(json, 'variableInterest') ? undefined : json['variableInterest'],
        'affiliateLoan': !exists(json, 'affiliateLoan') ? undefined : json['affiliateLoan'],
        'priceIndexType': !exists(json, 'priceIndexType') ? undefined : json['priceIndexType'],
        'baseIndex': !exists(json, 'baseIndex') ? undefined : json['baseIndex'],
        'interest': !exists(json, 'interest') ? undefined : json['interest'],
        'originalLoanAmount': !exists(json, 'originalLoanAmount') ? undefined : json['originalLoanAmount'],
        'nextPaymentDate': !exists(json, 'nextPaymentDate') ? undefined : (json['nextPaymentDate'] === null ? null : new Date(json['nextPaymentDate'])),
        'lastPaymentDate': !exists(json, 'lastPaymentDate') ? undefined : (json['lastPaymentDate'] === null ? null : new Date(json['lastPaymentDate'])),
        'lastUnpaidInvoiceDate': !exists(json, 'lastUnpaidInvoiceDate') ? undefined : (json['lastUnpaidInvoiceDate'] === null ? null : new Date(json['lastUnpaidInvoiceDate'])),
        'numberOfPaymentDatesRemaining': !exists(json, 'numberOfPaymentDatesRemaining') ? undefined : json['numberOfPaymentDatesRemaining'],
        'statusSettlementPayment': !exists(json, 'statusSettlementPayment') ? undefined : json['statusSettlementPayment'],
        'lastPaymentAmount': !exists(json, 'lastPaymentAmount') ? undefined : json['lastPaymentAmount'],
        'totalDueAmount': !exists(json, 'totalDueAmount') ? undefined : json['totalDueAmount'],
        'balanceWithoutInterestPriceImprovements': !exists(json, 'balanceWithoutInterestPriceImprovements') ? undefined : json['balanceWithoutInterestPriceImprovements'],
        'accruedInterestPriceImprovements': !exists(json, 'accruedInterestPriceImprovements') ? undefined : json['accruedInterestPriceImprovements'],
        'remainingBalanceWithoutDebt': !exists(json, 'remainingBalanceWithoutDebt') ? undefined : json['remainingBalanceWithoutDebt'],
        'repaymentFee': !exists(json, 'repaymentFee') ? undefined : json['repaymentFee'],
        'loanAmountWithRepayment': !exists(json, 'loanAmountWithRepayment') ? undefined : json['loanAmountWithRepayment'],
        'loanStatus': !exists(json, 'loanStatus') ? undefined : json['loanStatus'],
        'nationalId': !exists(json, 'nationalId') ? undefined : json['nationalId'],
        'propertyId': !exists(json, 'propertyId') ? undefined : json['propertyId'],
        'propertyAddress': !exists(json, 'propertyAddress') ? undefined : json['propertyAddress'],
        'propertyMunicipality': !exists(json, 'propertyMunicipality') ? undefined : json['propertyMunicipality'],
        'epilog': !exists(json, 'epilog') ? undefined : json['epilog'],
        'municipalityNumber': !exists(json, 'municipalityNumber') ? undefined : json['municipalityNumber'],
        'loanType': !exists(json, 'loanType') ? undefined : json['loanType'],
        'installments': !exists(json, 'installments') ? undefined : json['installments'],
        'coPayerName': !exists(json, 'coPayerName') ? undefined : json['coPayerName'],
        'coPayerNationalId': !exists(json, 'coPayerNationalId') ? undefined : json['coPayerNationalId'],
        'properties': !exists(json, 'properties') ? undefined : (json['properties'] === null ? null : (json['properties'] as Array<any>).map(PropertyReturnModelFromJSON)),
        'coPayers': !exists(json, 'coPayers') ? undefined : (json['coPayers'] === null ? null : (json['coPayers'] as Array<any>).map(CoPayerReturnModelFromJSON)),
        'creditor': !exists(json, 'creditor') ? undefined : json['creditor'],
    };
}

export function LoanHistoryReturnModelToJSON(value?: LoanHistoryReturnModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'loanId': value.loanId,
        'name': value.name,
        'homeAddress': value.homeAddress,
        'postNumber': value.postNumber,
        'municipality': value.municipality,
        'firstInterestDate': value.firstInterestDate === undefined ? undefined : (value.firstInterestDate === null ? null : value.firstInterestDate.toISOString()),
        'firstPaymentDate': value.firstPaymentDate === undefined ? undefined : (value.firstPaymentDate === null ? null : value.firstPaymentDate.toISOString()),
        'totalNumberOfPayments': value.totalNumberOfPayments,
        'numberOfPaymentPerYear': value.numberOfPaymentPerYear,
        'balancePayment': value.balancePayment,
        'paymentFee': value.paymentFee,
        'paymentDelayment': value.paymentDelayment,
        'temporaryPaymentDelayment': value.temporaryPaymentDelayment,
        'variableInterest': value.variableInterest,
        'affiliateLoan': value.affiliateLoan,
        'priceIndexType': value.priceIndexType,
        'baseIndex': value.baseIndex,
        'interest': value.interest,
        'originalLoanAmount': value.originalLoanAmount,
        'nextPaymentDate': value.nextPaymentDate === undefined ? undefined : (value.nextPaymentDate === null ? null : value.nextPaymentDate.toISOString()),
        'lastPaymentDate': value.lastPaymentDate === undefined ? undefined : (value.lastPaymentDate === null ? null : value.lastPaymentDate.toISOString()),
        'lastUnpaidInvoiceDate': value.lastUnpaidInvoiceDate === undefined ? undefined : (value.lastUnpaidInvoiceDate === null ? null : value.lastUnpaidInvoiceDate.toISOString()),
        'numberOfPaymentDatesRemaining': value.numberOfPaymentDatesRemaining,
        'statusSettlementPayment': value.statusSettlementPayment,
        'lastPaymentAmount': value.lastPaymentAmount,
        'totalDueAmount': value.totalDueAmount,
        'balanceWithoutInterestPriceImprovements': value.balanceWithoutInterestPriceImprovements,
        'accruedInterestPriceImprovements': value.accruedInterestPriceImprovements,
        'remainingBalanceWithoutDebt': value.remainingBalanceWithoutDebt,
        'repaymentFee': value.repaymentFee,
        'loanAmountWithRepayment': value.loanAmountWithRepayment,
        'loanStatus': value.loanStatus,
        'nationalId': value.nationalId,
        'propertyId': value.propertyId,
        'propertyAddress': value.propertyAddress,
        'propertyMunicipality': value.propertyMunicipality,
        'epilog': value.epilog,
        'municipalityNumber': value.municipalityNumber,
        'loanType': value.loanType,
        'installments': value.installments,
        'coPayerName': value.coPayerName,
        'coPayerNationalId': value.coPayerNationalId,
        'properties': value.properties === undefined ? undefined : (value.properties === null ? null : (value.properties as Array<any>).map(PropertyReturnModelToJSON)),
        'coPayers': value.coPayers === undefined ? undefined : (value.coPayers === null ? null : (value.coPayers as Array<any>).map(CoPayerReturnModelToJSON)),
    };
}


