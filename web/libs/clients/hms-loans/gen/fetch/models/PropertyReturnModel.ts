/* tslint:disable */
/* eslint-disable */
/**
 * LibraAPI
 * LibraAPI gives information about loans in HMS.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Return model for property.
 * @export
 * @interface PropertyReturnModel
 */
export interface PropertyReturnModel {
    /**
     * Property ID of mortgage.
     * @type {string}
     * @memberof PropertyReturnModel
     */
    propertyId?: string | null;
    /**
     * Property address.
     * @type {string}
     * @memberof PropertyReturnModel
     */
    propertyAddress?: string | null;
    /**
     * Municipality of property.
     * @type {string}
     * @memberof PropertyReturnModel
     */
    propertyMunicipality?: string | null;
    /**
     * Epilog(Matshluti) is a number from the Icelandic property registry that represents a part of the property. For example a garage. Term from Property registry.
     * @type {string}
     * @memberof PropertyReturnModel
     */
    epilog?: string | null;
    /**
     * Municipality number of property.
     * @type {string}
     * @memberof PropertyReturnModel
     */
    municipalityNumber?: string | null;
}

export function PropertyReturnModelFromJSON(json: any): PropertyReturnModel {
    return PropertyReturnModelFromJSONTyped(json, false);
}

export function PropertyReturnModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyReturnModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'propertyId': !exists(json, 'propertyId') ? undefined : json['propertyId'],
        'propertyAddress': !exists(json, 'propertyAddress') ? undefined : json['propertyAddress'],
        'propertyMunicipality': !exists(json, 'propertyMunicipality') ? undefined : json['propertyMunicipality'],
        'epilog': !exists(json, 'epilog') ? undefined : json['epilog'],
        'municipalityNumber': !exists(json, 'municipalityNumber') ? undefined : json['municipalityNumber'],
    };
}

export function PropertyReturnModelToJSON(value?: PropertyReturnModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'propertyId': value.propertyId,
        'propertyAddress': value.propertyAddress,
        'propertyMunicipality': value.propertyMunicipality,
        'epilog': value.epilog,
        'municipalityNumber': value.municipalityNumber,
    };
}


