/* tslint:disable */
/* eslint-disable */
/**
 * Payments API
 * This service handles and encapsulates all lgoic related to payment flows, from creation to payment. It handles communication with FJS for the payments.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CardInformation,
    CardInformationFromJSON,
    CardInformationFromJSONTyped,
    CardInformationToJSON,
} from './';

/**
 * 
 * @export
 * @interface ChargeCardResponse
 */
export interface ChargeCardResponse {
    /**
     * Acquirer reference number
     * @type {string}
     * @memberof ChargeCardResponse
     */
    acquirerReferenceNumber: string;
    /**
     * Transaction ID
     * @type {string}
     * @memberof ChargeCardResponse
     */
    transactionID: string;
    /**
     * Authorization code
     * @type {string}
     * @memberof ChargeCardResponse
     */
    authorizationCode: string;
    /**
     * Transaction lifecycle ID
     * @type {string}
     * @memberof ChargeCardResponse
     */
    transactionLifecycleId: string;
    /**
     * Masked card number
     * @type {string}
     * @memberof ChargeCardResponse
     */
    maskedCardNumber: string;
    /**
     * Indicates if the transaction was successful
     * @type {boolean}
     * @memberof ChargeCardResponse
     */
    isSuccess: boolean;
    /**
     * Card information
     * @type {CardInformation}
     * @memberof ChargeCardResponse
     */
    cardInformation: CardInformation;
    /**
     * Authorization identifier
     * @type {string}
     * @memberof ChargeCardResponse
     */
    authorizationIdentifier: string;
    /**
     * Response code from the charge
     * @type {string}
     * @memberof ChargeCardResponse
     */
    responseCode: string;
    /**
     * Description of the response
     * @type {string}
     * @memberof ChargeCardResponse
     */
    responseDescription: string;
    /**
     * Response time of the charge
     * @type {string}
     * @memberof ChargeCardResponse
     */
    responseTime: string;
    /**
     * Correlation ID for tracking
     * @type {string}
     * @memberof ChargeCardResponse
     */
    correlationId: string;
}

export function ChargeCardResponseFromJSON(json: any): ChargeCardResponse {
    return ChargeCardResponseFromJSONTyped(json, false);
}

export function ChargeCardResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChargeCardResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'acquirerReferenceNumber': json['acquirerReferenceNumber'],
        'transactionID': json['transactionID'],
        'authorizationCode': json['authorizationCode'],
        'transactionLifecycleId': json['transactionLifecycleId'],
        'maskedCardNumber': json['maskedCardNumber'],
        'isSuccess': json['isSuccess'],
        'cardInformation': CardInformationFromJSON(json['cardInformation']),
        'authorizationIdentifier': json['authorizationIdentifier'],
        'responseCode': json['responseCode'],
        'responseDescription': json['responseDescription'],
        'responseTime': json['responseTime'],
        'correlationId': json['correlationId'],
    };
}

export function ChargeCardResponseToJSON(value?: ChargeCardResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'acquirerReferenceNumber': value.acquirerReferenceNumber,
        'transactionID': value.transactionID,
        'authorizationCode': value.authorizationCode,
        'transactionLifecycleId': value.transactionLifecycleId,
        'maskedCardNumber': value.maskedCardNumber,
        'isSuccess': value.isSuccess,
        'cardInformation': CardInformationToJSON(value.cardInformation),
        'authorizationIdentifier': value.authorizationIdentifier,
        'responseCode': value.responseCode,
        'responseDescription': value.responseDescription,
        'responseTime': value.responseTime,
        'correlationId': value.correlationId,
    };
}


