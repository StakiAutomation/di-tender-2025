/* tslint:disable */
/* eslint-disable */
/**
 * Payments API
 * This service handles and encapsulates all lgoic related to payment flows, from creation to payment. It handles communication with FJS for the payments.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetPaymentFlowStatusDTO
 */
export interface GetPaymentFlowStatusDTO {
    /**
     * Unique identifier for the payment flow
     * @type {string}
     * @memberof GetPaymentFlowStatusDTO
     */
    id: string;
    /**
     * Status of the payment: unpaid, pending invoice or paid
     * @type {string}
     * @memberof GetPaymentFlowStatusDTO
     */
    paymentStatus: GetPaymentFlowStatusDTOPaymentStatusEnum;
    /**
     * Last updated at
     * @type {Date}
     * @memberof GetPaymentFlowStatusDTO
     */
    updatedAt: Date;
}

export function GetPaymentFlowStatusDTOFromJSON(json: any): GetPaymentFlowStatusDTO {
    return GetPaymentFlowStatusDTOFromJSONTyped(json, false);
}

export function GetPaymentFlowStatusDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPaymentFlowStatusDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'paymentStatus': json['paymentStatus'],
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function GetPaymentFlowStatusDTOToJSON(value?: GetPaymentFlowStatusDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'paymentStatus': value.paymentStatus,
        'updatedAt': (value.updatedAt.toISOString()),
    };
}

/**
* @export
* @enum {string}
*/
export enum GetPaymentFlowStatusDTOPaymentStatusEnum {
    unpaid = 'unpaid',
    invoice_pending = 'invoice_pending',
    paid = 'paid'
}


