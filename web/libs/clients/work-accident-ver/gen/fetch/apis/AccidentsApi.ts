/* tslint:disable */
/* eslint-disable */
/**
 * Tilkynna vinnuslys
 * Vefþjónusta til þess að senda inn tilkynningar um vinnuslys.
 *
 * The version of the OpenAPI document: v1
 * Contact: ut@vinnueftirlit.is
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AccidentDto,
    AccidentDtoFromJSON,
    AccidentDtoToJSON,
    AccidentForCreationDto,
    AccidentForCreationDtoFromJSON,
    AccidentForCreationDtoToJSON,
    AccidentForCreationResponseDto,
    AccidentForCreationResponseDtoFromJSON,
    AccidentForCreationResponseDtoToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

export interface CreateAccidentRequest {
    xCorrelationID?: string;
    accidentForCreationDto?: AccidentForCreationDto;
}

export interface GetAccidentRequest {
    id: string;
    locale?: string;
    xCorrelationID?: string;
}

export interface GetAccidentOptionsRequest {
    xCorrelationID?: string;
}

export interface GetAccidentsRequest {
    searchQuery?: string;
    pageNumber?: number;
    pageSize?: number;
    orderBy?: string;
    locale?: string;
    xCorrelationID?: string;
}

/**
 * 
 */
export class AccidentsApi extends runtime.BaseAPI {

    /**
     * This endpoint consumes a data model `AccidentForCreationDto` for occupational accident reporting.  Þessi endapunktúr tekur á móti gagnamódeli fyrir tilkynningar um vinnuslys.    This endpoint returns `AccidentForCreationResponseDto` Data model for confirmation of the submission of a notification of an occupational accident. Gagnalíkan fyrir staðfestingu á innsendingu tilkynningar um vinnuslys.    If a user is logged in with a mandate, the company social security number must be the same as the company social security number for which the user has a mandate for.    If the user is logged in as an individual, the user can register the notification on their own social security number or register a company\'s social security number.  The exception is if a company has blocked notifications from individuals.  An individual cannot send in a notification with another person\'s social security number as company social security number.    Ef notandi er innskráður með umboð þá verður kennitala fyrirtækis að vera sú sama og fyrirtækis sem notandinn er með umboð fyrir.    Ef notandi er skráður inn sem einstaklingur þá getur notaninn skráð tilkynninguna á eigin kennitölu eða skráð kennitölu fyrirtækis.  Undantekningin er ef fyrirtæki hefur lokað á tilkynningar frá einstaklingum.  Einstaklingur getur ekki sent inn tilkynnigu með kennitölu annars einstaklings í kennitölu fyrirtækis.    This endpoint returns `AccidentForCreationResponseDto` Data model for confirmation of the submission of a notification of an occupational accident. Gagnalíkan fyrir staðfestingu á innsendingu tilkynningar um vinnuslys.
     * Endpoint for reporting a occupational accident.
     */
    async createAccidentRaw(requestParameters: CreateAccidentRequest): Promise<runtime.ApiResponse<AccidentForCreationResponseDto>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xCorrelationID !== undefined && requestParameters.xCorrelationID !== null) {
            headerParameters['X-Correlation-ID'] = String(requestParameters.xCorrelationID);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Accidents`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AccidentForCreationDtoToJSON(requestParameters.accidentForCreationDto),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AccidentForCreationResponseDtoFromJSON(jsonValue));
    }

    /**
     * This endpoint consumes a data model `AccidentForCreationDto` for occupational accident reporting.  Þessi endapunktúr tekur á móti gagnamódeli fyrir tilkynningar um vinnuslys.    This endpoint returns `AccidentForCreationResponseDto` Data model for confirmation of the submission of a notification of an occupational accident. Gagnalíkan fyrir staðfestingu á innsendingu tilkynningar um vinnuslys.    If a user is logged in with a mandate, the company social security number must be the same as the company social security number for which the user has a mandate for.    If the user is logged in as an individual, the user can register the notification on their own social security number or register a company\'s social security number.  The exception is if a company has blocked notifications from individuals.  An individual cannot send in a notification with another person\'s social security number as company social security number.    Ef notandi er innskráður með umboð þá verður kennitala fyrirtækis að vera sú sama og fyrirtækis sem notandinn er með umboð fyrir.    Ef notandi er skráður inn sem einstaklingur þá getur notaninn skráð tilkynninguna á eigin kennitölu eða skráð kennitölu fyrirtækis.  Undantekningin er ef fyrirtæki hefur lokað á tilkynningar frá einstaklingum.  Einstaklingur getur ekki sent inn tilkynnigu með kennitölu annars einstaklings í kennitölu fyrirtækis.    This endpoint returns `AccidentForCreationResponseDto` Data model for confirmation of the submission of a notification of an occupational accident. Gagnalíkan fyrir staðfestingu á innsendingu tilkynningar um vinnuslys.
     * Endpoint for reporting a occupational accident.
     */
    async createAccident(requestParameters: CreateAccidentRequest): Promise<AccidentForCreationResponseDto> {
        const response = await this.createAccidentRaw(requestParameters);
        return await response.value();
    }

    /**
     * This endpoint is not implemented and returns `AccidentDto` with only AccidentId set.  Það er ekki búið að útfæra þessa aðgerð og hún skilar NotImplementedException.
     * This endpoint returns `AccidentDto` Data model for the submission of a notification of a work accident. Gagnalíkan fyrir innsenda tilkynningu um vinnuslys.
     */
    async getAccidentRaw(requestParameters: GetAccidentRequest): Promise<runtime.ApiResponse<AccidentDto>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getAccident.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.locale !== undefined) {
            queryParameters['locale'] = requestParameters.locale;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xCorrelationID !== undefined && requestParameters.xCorrelationID !== null) {
            headerParameters['X-Correlation-ID'] = String(requestParameters.xCorrelationID);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Accidents/{Id}`.replace(`{${"Id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AccidentDtoFromJSON(jsonValue));
    }

    /**
     * This endpoint is not implemented and returns `AccidentDto` with only AccidentId set.  Það er ekki búið að útfæra þessa aðgerð og hún skilar NotImplementedException.
     * This endpoint returns `AccidentDto` Data model for the submission of a notification of a work accident. Gagnalíkan fyrir innsenda tilkynningu um vinnuslys.
     */
    async getAccident(requestParameters: GetAccidentRequest): Promise<AccidentDto> {
        const response = await this.getAccidentRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async getAccidentOptionsRaw(requestParameters: GetAccidentOptionsRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xCorrelationID !== undefined && requestParameters.xCorrelationID !== null) {
            headerParameters['X-Correlation-ID'] = String(requestParameters.xCorrelationID);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Accidents`,
            method: 'OPTIONS',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async getAccidentOptions(requestParameters: GetAccidentOptionsRequest): Promise<void> {
        await this.getAccidentOptionsRaw(requestParameters);
    }

    /**
     * This endpoint is not implemented and returns NotImplementedException.  Það er ekki búið að útfæra þessa aðgerð og hún skilar NotImplementedException.
     * This endpoint returns `AccidentDto` Data model for the submission of a notification of a work accident. Þessi aðgerð skila lista yfir af gagnalíkönum fyrir innsenda tilkynningu um vinnuslys.
     */
    async getAccidentsRaw(requestParameters: GetAccidentsRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.searchQuery !== undefined) {
            queryParameters['searchQuery'] = requestParameters.searchQuery;
        }

        if (requestParameters.pageNumber !== undefined) {
            queryParameters['PageNumber'] = requestParameters.pageNumber;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['PageSize'] = requestParameters.pageSize;
        }

        if (requestParameters.orderBy !== undefined) {
            queryParameters['OrderBy'] = requestParameters.orderBy;
        }

        if (requestParameters.locale !== undefined) {
            queryParameters['locale'] = requestParameters.locale;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xCorrelationID !== undefined && requestParameters.xCorrelationID !== null) {
            headerParameters['X-Correlation-ID'] = String(requestParameters.xCorrelationID);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Accidents`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     * This endpoint is not implemented and returns NotImplementedException.  Það er ekki búið að útfæra þessa aðgerð og hún skilar NotImplementedException.
     * This endpoint returns `AccidentDto` Data model for the submission of a notification of a work accident. Þessi aðgerð skila lista yfir af gagnalíkönum fyrir innsenda tilkynningu um vinnuslys.
     */
    async getAccidents(requestParameters: GetAccidentsRequest): Promise<void> {
        await this.getAccidentsRaw(requestParameters);
    }

}
