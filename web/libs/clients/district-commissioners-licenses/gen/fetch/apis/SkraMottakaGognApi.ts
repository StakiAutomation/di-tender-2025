/* tslint:disable */
/* eslint-disable */
/**
 * Þjónustugátt starfskerfa sýslumanna
 * Rafrænn aðgengi að gögnum og aðgerðum starfskerfis sýslumanna
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Skilabod,
    SkilabodFromJSON,
    SkilabodToJSON,
    SyslSkeyti,
    SyslSkeytiFromJSON,
    SyslSkeytiToJSON,
} from '../models';

export interface SkraMottakaGognPostRequest {
    payload: SyslSkeyti;
}

/**
 * 
 */
export class SkraMottakaGognApi extends runtime.BaseAPI {

    /**
     */
    async skraMottakaGognPostRaw(requestParameters: SkraMottakaGognPostRequest): Promise<runtime.ApiResponse<Skilabod>> {
        if (requestParameters.payload === null || requestParameters.payload === undefined) {
            throw new runtime.RequiredError('payload','Required parameter requestParameters.payload was null or undefined when calling skraMottakaGognPost.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // JWT Token authentication
        }

        const response = await this.request({
            path: `/v1/SkraMottakaGogn`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SyslSkeytiToJSON(requestParameters.payload),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => SkilabodFromJSON(jsonValue));
    }

    /**
     */
    async skraMottakaGognPost(requestParameters: SkraMottakaGognPostRequest): Promise<Skilabod> {
        const response = await this.skraMottakaGognPostRaw(requestParameters);
        return await response.value();
    }

}
