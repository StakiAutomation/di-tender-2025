/* tslint:disable */
/* eslint-disable */
/**
 * Þjónustugátt starfskerfa sýslumanna
 * Rafrænn aðgengi að gögnum og aðgerðum starfskerfis sýslumanna
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Postnumer,
    PostnumerFromJSON,
    PostnumerToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

export interface PostnumerGetPostnumerRequest {
    id: number;
}

/**
 * 
 */
export class PostnumerApi extends runtime.BaseAPI {

    /**
     */
    async postnumerGetPostnumerRaw(requestParameters: PostnumerGetPostnumerRequest): Promise<runtime.ApiResponse<Postnumer>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling postnumerGetPostnumer.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // JWT Token authentication
        }

        const response = await this.request({
            path: `/v1/Postnumer/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => PostnumerFromJSON(jsonValue));
    }

    /**
     */
    async postnumerGetPostnumer(requestParameters: PostnumerGetPostnumerRequest): Promise<Postnumer> {
        const response = await this.postnumerGetPostnumerRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async postnumerGetPostnumerAllRaw(): Promise<runtime.ApiResponse<Array<Postnumer>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // JWT Token authentication
        }

        const response = await this.request({
            path: `/v1/Postnumer`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PostnumerFromJSON));
    }

    /**
     */
    async postnumerGetPostnumerAll(): Promise<Array<Postnumer>> {
        const response = await this.postnumerGetPostnumerAllRaw();
        return await response.value();
    }

}
