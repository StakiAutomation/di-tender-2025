/* tslint:disable */
/* eslint-disable */
/**
 * Application backend
 * This is provided as a reference to implement other backends.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateApplicationDto
 */
export interface CreateApplicationDto {
    /**
     * 
     * @type {string}
     * @memberof CreateApplicationDto
     */
    typeId: CreateApplicationDtoTypeIdEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateApplicationDto
     */
    initialQuery?: string;
}

export function CreateApplicationDtoFromJSON(json: any): CreateApplicationDto {
    return CreateApplicationDtoFromJSONTyped(json, false);
}

export function CreateApplicationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateApplicationDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'typeId': json['typeId'],
        'initialQuery': !exists(json, 'initialQuery') ? undefined : json['initialQuery'],
    };
}

export function CreateApplicationDtoToJSON(value?: CreateApplicationDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'typeId': value.typeId,
        'initialQuery': value.initialQuery,
    };
}

/**
* @export
* @enum {string}
*/
export enum CreateApplicationDtoTypeIdEnum {
    ExampleForm = 'ExampleForm',
    ExampleCommonActions = 'ExampleCommonActions',
    ExampleInputs = 'ExampleInputs',
    ExampleNoInputs = 'ExampleNoInputs',
    ExamplePayment = 'ExamplePayment',
    ExampleStateTransfers = 'ExampleStateTransfers',
    Passport = 'Passport',
    PassportAnnulment = 'PassportAnnulment',
    DrivingLearnersPermit = 'DrivingLearnersPermit',
    DrivingLicense = 'DrivingLicense',
    DrivingAssessmentApproval = 'DrivingAssessmentApproval',
    ParentalLeave = 'ParentalLeave',
    DocumentProviderOnboarding = 'DocumentProviderOnboarding',
    HealthInsurance = 'HealthInsurance',
    ChildrenResidenceChangeV2 = 'ChildrenResidenceChangeV2',
    DataProtectionAuthorityComplaint = 'DataProtectionAuthorityComplaint',
    LoginService = 'LoginService',
    InheritanceReport = 'InheritanceReport',
    InstitutionCollaboration = 'InstitutionCollaboration',
    FundingGovernmentProjects = 'FundingGovernmentProjects',
    PublicDebtPaymentPlan = 'PublicDebtPaymentPlan',
    ComplaintsToAlthingiOmbudsman = 'ComplaintsToAlthingiOmbudsman',
    AccidentNotification = 'AccidentNotification',
    GeneralPetitionService = 'GeneralPetitionService',
    GeneralFishingLicense = 'GeneralFishingLicense',
    PSign = 'PSign',
    AnnouncementOfDeath = 'AnnouncementOfDeath',
    CriminalRecord = 'CriminalRecord',
    FinancialAid = 'FinancialAid',
    DrivingInstructorRegistrations = 'DrivingInstructorRegistrations',
    DrivingSchoolConfirmation = 'DrivingSchoolConfirmation',
    MortgageCertificate = 'MortgageCertificate',
    MarriageConditions = 'MarriageConditions',
    NoDebtCertificate = 'NoDebtCertificate',
    FinancialStatementCemetery = 'FinancialStatementCemetery',
    FinancialStatementsInao = 'FinancialStatementsInao',
    FinancialStatementIndividualElection = 'FinancialStatementIndividualElection',
    FinancialStatementPoliticalParty = 'FinancialStatementPoliticalParty',
    OperatingLicense = 'OperatingLicense',
    Estate = 'Estate',
    DrivingLicenseDuplicate = 'DrivingLicenseDuplicate',
    AnonymityInVehicleRegistry = 'AnonymityInVehicleRegistry',
    ChangeCoOwnerOfVehicle = 'ChangeCoOwnerOfVehicle',
    ChangeOperatorOfVehicle = 'ChangeOperatorOfVehicle',
    DigitalTachographDriversCard = 'DigitalTachographDriversCard',
    LicensePlateRenewal = 'LicensePlateRenewal',
    OrderVehicleLicensePlate = 'OrderVehicleLicensePlate',
    OrderVehicleRegistrationCertificate = 'OrderVehicleRegistrationCertificate',
    TransferOfVehicleOwnership = 'TransferOfVehicleOwnership',
    DrivingLicenseBookUpdateInstructor = 'DrivingLicenseBookUpdateInstructor',
    AlcoholTaxRedemption = 'AlcoholTaxRedemption',
    EuropeanHealthInsuranceCard = 'EuropeanHealthInsuranceCard',
    OldAgePension = 'OldAgePension',
    HouseholdSupplement = 'HouseholdSupplement',
    CarRecycling = 'CarRecycling',
    PresidentialListCreation = 'PresidentialListCreation',
    PresidentialListSigning = 'PresidentialListSigning',
    ParliamentaryListCreation = 'ParliamentaryListCreation',
    ParliamentaryListSigning = 'ParliamentaryListSigning',
    MunicipalListCreation = 'MunicipalListCreation',
    MunicipalListSigning = 'MunicipalListSigning',
    Citizenship = 'Citizenship',
    AdditionalSupportForTheElderly = 'AdditionalSupportForTheElderly',
    EnergyFunds = 'EnergyFunds',
    HealthcareLicenseCertificate = 'HealthcareLicenseCertificate',
    HealthcareWorkPermit = 'HealthcareWorkPermit',
    PensionSupplement = 'PensionSupplement',
    TransferOfMachineOwnership = 'TransferOfMachineOwnership',
    DeathBenefits = 'DeathBenefits',
    University = 'University',
    HomeSupport = 'HomeSupport',
    ChangeMachineSupervisor = 'ChangeMachineSupervisor',
    DeregisterMachine = 'DeregisterMachine',
    GrindavikHousingBuyout = 'GrindavikHousingBuyout',
    RequestInspectionForMachine = 'RequestInspectionForMachine',
    OfficialJournalOfIceland = 'OfficialJournalOfIceland',
    IdCard = 'IdCard',
    HealthInsuranceDeclaration = 'HealthInsuranceDeclaration',
    StreetRegistration = 'StreetRegistration',
    IncomePlan = 'IncomePlan',
    NewPrimarySchool = 'NewPrimarySchool',
    WorkAccidentNotification = 'WorkAccidentNotification',
    MachineRegistration = 'MachineRegistration',
    SeminarRegistration = 'SeminarRegistration',
    TrainingLicenseOnAWorkMachine = 'TrainingLicenseOnAWorkMachine',
    SecondarySchool = 'SecondarySchool'
}


