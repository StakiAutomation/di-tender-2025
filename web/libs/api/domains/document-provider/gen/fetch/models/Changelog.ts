/* tslint:disable */
/* eslint-disable */
/**
 * Documents backend
 * Backend providing documents and document-providers info
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Changelog
 */
export interface Changelog {
    /**
     * 
     * @type {string}
     * @memberof Changelog
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Changelog
     */
    entityId: string;
    /**
     * 
     * @type {string}
     * @memberof Changelog
     */
    entityType: ChangelogEntityTypeEnum;
    /**
     * 
     * @type {object}
     * @memberof Changelog
     */
    data?: object;
    /**
     * 
     * @type {Date}
     * @memberof Changelog
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof Changelog
     */
    modified: Date;
}

export function ChangelogFromJSON(json: any): Changelog {
    return ChangelogFromJSONTyped(json, false);
}

export function ChangelogFromJSONTyped(json: any, ignoreDiscriminator: boolean): Changelog {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'entityId': json['entityId'],
        'entityType': json['entityType'],
        'data': !exists(json, 'data') ? undefined : json['data'],
        'created': (new Date(json['created'])),
        'modified': (new Date(json['modified'])),
    };
}

export function ChangelogToJSON(value?: Changelog | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'entityId': value.entityId,
        'entityType': value.entityType,
        'data': value.data,
        'created': (value.created.toISOString()),
        'modified': (value.modified.toISOString()),
    };
}

/**
* @export
* @enum {string}
*/
export enum ChangelogEntityTypeEnum {
    Organisation = 'Organisation',
    AdministrativeContact = 'AdministrativeContact',
    TechnicalContact = 'TechnicalContact',
    Helpdesk = 'Helpdesk',
    Provider = 'Provider'
}


