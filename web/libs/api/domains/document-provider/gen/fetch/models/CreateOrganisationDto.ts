/* tslint:disable */
/* eslint-disable */
/**
 * Documents backend
 * Backend providing documents and document-providers info
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CreateContactDto,
    CreateContactDtoFromJSON,
    CreateContactDtoFromJSONTyped,
    CreateContactDtoToJSON,
    CreateHelpdeskDto,
    CreateHelpdeskDtoFromJSON,
    CreateHelpdeskDtoFromJSONTyped,
    CreateHelpdeskDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface CreateOrganisationDto
 */
export interface CreateOrganisationDto {
    /**
     * 
     * @type {string}
     * @memberof CreateOrganisationDto
     */
    nationalId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateOrganisationDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateOrganisationDto
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof CreateOrganisationDto
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof CreateOrganisationDto
     */
    phoneNumber: string;
    /**
     * 
     * @type {CreateContactDto}
     * @memberof CreateOrganisationDto
     */
    administrativeContact?: CreateContactDto;
    /**
     * 
     * @type {CreateContactDto}
     * @memberof CreateOrganisationDto
     */
    technicalContact?: CreateContactDto;
    /**
     * 
     * @type {CreateHelpdeskDto}
     * @memberof CreateOrganisationDto
     */
    helpdesk?: CreateHelpdeskDto;
}

export function CreateOrganisationDtoFromJSON(json: any): CreateOrganisationDto {
    return CreateOrganisationDtoFromJSONTyped(json, false);
}

export function CreateOrganisationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrganisationDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nationalId': json['nationalId'],
        'name': json['name'],
        'address': json['address'],
        'email': json['email'],
        'phoneNumber': json['phoneNumber'],
        'administrativeContact': !exists(json, 'administrativeContact') ? undefined : CreateContactDtoFromJSON(json['administrativeContact']),
        'technicalContact': !exists(json, 'technicalContact') ? undefined : CreateContactDtoFromJSON(json['technicalContact']),
        'helpdesk': !exists(json, 'helpdesk') ? undefined : CreateHelpdeskDtoFromJSON(json['helpdesk']),
    };
}

export function CreateOrganisationDtoToJSON(value?: CreateOrganisationDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nationalId': value.nationalId,
        'name': value.name,
        'address': value.address,
        'email': value.email,
        'phoneNumber': value.phoneNumber,
        'administrativeContact': CreateContactDtoToJSON(value.administrativeContact),
        'technicalContact': CreateContactDtoToJSON(value.technicalContact),
        'helpdesk': CreateHelpdeskDtoToJSON(value.helpdesk),
    };
}


