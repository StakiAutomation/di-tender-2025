/* tslint:disable */
/* eslint-disable */
/**
 * GoPro.JusticePortal.Rest
 * Provides access to Justice Portal rest service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gopro.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateCaseData
 */
export interface CreateCaseData {
    /**
     * Authentication token. Returned by AuthenticateUser
     * @type {string}
     * @memberof CreateCaseData
     */
    authenticationToken: string;
    /**
     * Possible values: 'A - Aðfarabeiðnir', 'Æ - Aðfinnslur við skiptastjóra', 'B - Bráðabirgðaforsjá og farbann', 'C - Beiðni um fjárhagslega endurskipulagningu', 'D - Opinber skipti', 'E - Einkamál', 'F - Beiðni um flýtimeðferð', 'G - Gjaldþrotaskipti', 'H - Horfnir menn', 'I - Beiðni um endurupptöku', 'J - Greiðslustöðvunarbeiðnir', 'K - Ágreiningsmál v/kyrrsetningar og lögbanns', 'L - Lögræðismál', 'M - Matsmál', 'N - Nauðasamningar', 'N - Nauðasamningsumleitanir', 'Ö - Annað', 'P - Sjópróf', 'Q - Ágreiningsmál v/ opinberra skipta', 'R - Rannsóknarmál', 'R - Rannsóknarmál önnur aðild', 'S - Ákærumál', 'S - Sektarboð', 'T - Ágreiningsmál v/þinglýsingar', 'U - Barnaverndarmál', 'V - Vitnamál', 'X - Ágreiningsmál v/gjaldþrotaskipta', 'Y - Ágreiningsmál v/aðfarargerða', 'Z - Ágreiningsmál v/nauðungarsölu'
     * @type {string}
     * @memberof CreateCaseData
     */
    caseType: string;
    /**
     * All of the case types have the value 'Skráð' in the status list. E.g. possible values for case type 'D - Opinber skipti' are: 'Ágreiningur (Q mál)', 'Í fresti', 'Skráð', 'Tekið til úrskurðar'; possible values for case type 'H - Horfnir menn' are only these two: 'Í fresti', 'Skráð'
     * @type {string}
     * @memberof CreateCaseData
     */
    status?: string;
    /**
     * Receival date
     * @type {string}
     * @memberof CreateCaseData
     */
    receivalDate: string;
    /**
     * Sub type. If you don't know what value to provide here - use GetCaseSubtypes method to see possible values
     * @type {string}
     * @memberof CreateCaseData
     */
    subtype?: string;
    /**
     * Only for 'R - Rannsóknarmál' and 'R - Rannsóknarmál önnur aðild' case types. Possible values: 'Almannahagsmunir', 'Annað', 'Rannsóknarhagsmunir', 'Síbrotagæsla'
     * @type {string}
     * @memberof CreateCaseData
     */
    basedOn?: string;
    /**
     * The source number
     * @type {string}
     * @memberof CreateCaseData
     */
    sourceNumber?: string;
    /**
     * Only for 'E - Einkamál' case type. Possible values: 'Munnlegt' and 'Útivist'
     * @type {string}
     * @memberof CreateCaseData
     */
    defaultOrVerbal?: string;
}

export function CreateCaseDataFromJSON(json: any): CreateCaseData {
    return CreateCaseDataFromJSONTyped(json, false);
}

export function CreateCaseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCaseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authenticationToken': json['authenticationToken'],
        'caseType': json['caseType'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'receivalDate': json['receivalDate'],
        'subtype': !exists(json, 'subtype') ? undefined : json['subtype'],
        'basedOn': !exists(json, 'basedOn') ? undefined : json['basedOn'],
        'sourceNumber': !exists(json, 'sourceNumber') ? undefined : json['sourceNumber'],
        'defaultOrVerbal': !exists(json, 'defaultOrVerbal') ? undefined : json['defaultOrVerbal'],
    };
}

export function CreateCaseDataToJSON(value?: CreateCaseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'authenticationToken': value.authenticationToken,
        'caseType': value.caseType,
        'status': value.status,
        'receivalDate': value.receivalDate,
        'subtype': value.subtype,
        'basedOn': value.basedOn,
        'sourceNumber': value.sourceNumber,
        'defaultOrVerbal': value.defaultOrVerbal,
    };
}


