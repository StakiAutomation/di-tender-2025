/* tslint:disable */
/* eslint-disable */
/**
 * GoPro.JusticePortal.Rest
 * Provides access to Justice Portal rest service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gopro.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateDocumentData
 */
export interface CreateDocumentData {
    /**
     * Authentication token. Returned by AuthenticateUser
     * @type {string}
     * @memberof CreateDocumentData
     */
    authenticationToken: string;
    /**
     * The case number
     * @type {string}
     * @memberof CreateDocumentData
     */
    caseNumber: string;
    /**
     * The document subject
     * @type {string}
     * @memberof CreateDocumentData
     */
    subject: string;
    /**
     * Name of the file
     * @type {string}
     * @memberof CreateDocumentData
     */
    fileName: string;
    /**
     * The container identifier. Returned by UploadStream
     * @type {string}
     * @memberof CreateDocumentData
     */
    streamID: string;
    /**
     * Folder name. If not exist it will be created.
     * @type {string}
     * @memberof CreateDocumentData
     */
    caseFolder: string;
}

export function CreateDocumentDataFromJSON(json: any): CreateDocumentData {
    return CreateDocumentDataFromJSONTyped(json, false);
}

export function CreateDocumentDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDocumentData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authenticationToken': json['authenticationToken'],
        'caseNumber': json['caseNumber'],
        'subject': json['subject'],
        'fileName': json['fileName'],
        'streamID': json['streamID'],
        'caseFolder': json['caseFolder'],
    };
}

export function CreateDocumentDataToJSON(value?: CreateDocumentData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'authenticationToken': value.authenticationToken,
        'caseNumber': value.caseNumber,
        'subject': value.subject,
        'fileName': value.fileName,
        'streamID': value.streamID,
        'caseFolder': value.caseFolder,
    };
}


