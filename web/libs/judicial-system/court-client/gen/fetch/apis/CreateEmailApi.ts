/* tslint:disable */
/* eslint-disable */
/**
 * GoPro.JusticePortal.Rest
 * Provides access to Justice Portal rest service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gopro.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateEmailData,
    CreateEmailDataFromJSON,
    CreateEmailDataToJSON,
} from '../models';

export interface CreateEmailRequest {
    createEmailData: CreateEmailData;
}

/**
 * 
 */
export class CreateEmailApi extends runtime.BaseAPI {

    /**
     * Creates Email and returns email identificator (Guid). This method is saving the email (not sending it) - email is already sent with another system and is put in GoPro for archiving purposes
     */
    async createEmailRaw(requestParameters: CreateEmailRequest): Promise<runtime.ApiResponse<string>> {
        if (requestParameters.createEmailData === null || requestParameters.createEmailData === undefined) {
            throw new runtime.RequiredError('createEmailData','Required parameter requestParameters.createEmailData was null or undefined when calling createEmail.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/CreateEmail`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateEmailDataToJSON(requestParameters.createEmailData),
        });

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Creates Email and returns email identificator (Guid). This method is saving the email (not sending it) - email is already sent with another system and is put in GoPro for archiving purposes
     */
    async createEmail(requestParameters: CreateEmailRequest): Promise<string> {
        const response = await this.createEmailRaw(requestParameters);
        return await response.value();
    }

}
