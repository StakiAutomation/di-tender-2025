/* tslint:disable */
/* eslint-disable */
/**
 * GoPro.JusticePortal.Rest
 * Provides access to Justice Portal rest service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@gopro.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface CreateCustodyCaseRequest {
    basedOn: string;
    sourceNumber: string;
    authenticationToken: string;
}

/**
 * 
 */
export class CreateCustodyCaseApi extends runtime.BaseAPI {

    /**
     * Creates Custody case and returns the case number.
     */
    async createCustodyCaseRaw(requestParameters: CreateCustodyCaseRequest): Promise<runtime.ApiResponse<string>> {
        if (requestParameters.basedOn === null || requestParameters.basedOn === undefined) {
            throw new runtime.RequiredError('basedOn','Required parameter requestParameters.basedOn was null or undefined when calling createCustodyCase.');
        }

        if (requestParameters.sourceNumber === null || requestParameters.sourceNumber === undefined) {
            throw new runtime.RequiredError('sourceNumber','Required parameter requestParameters.sourceNumber was null or undefined when calling createCustodyCase.');
        }

        if (requestParameters.authenticationToken === null || requestParameters.authenticationToken === undefined) {
            throw new runtime.RequiredError('authenticationToken','Required parameter requestParameters.authenticationToken was null or undefined when calling createCustodyCase.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.basedOn !== undefined) {
            queryParameters['basedOn'] = requestParameters.basedOn;
        }

        if (requestParameters.sourceNumber !== undefined) {
            queryParameters['sourceNumber'] = requestParameters.sourceNumber;
        }

        if (requestParameters.authenticationToken !== undefined) {
            queryParameters['authenticationToken'] = requestParameters.authenticationToken;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/CreateCustodyCase`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Creates Custody case and returns the case number.
     */
    async createCustodyCase(requestParameters: CreateCustodyCaseRequest): Promise<string> {
        const response = await this.createCustodyCaseRaw(requestParameters);
        return await response.value();
    }

}
