/* tslint:disable */
/* eslint-disable */
/**
 * EndorsementSystem
 * This API manages endorsement lists and associated endorsements collected by systems within island.is.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EndorsementListOpen,
    EndorsementListOpenFromJSON,
    EndorsementListOpenFromJSONTyped,
    EndorsementListOpenToJSON,
    EndorsementMetadata,
    EndorsementMetadataFromJSON,
    EndorsementMetadataFromJSONTyped,
    EndorsementMetadataToJSON,
} from './';

/**
 * 
 * @export
 * @interface Endorsement
 */
export interface Endorsement {
    /**
     * 
     * @type {string}
     * @memberof Endorsement
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof Endorsement
     */
    counter: number;
    /**
     * 
     * @type {string}
     * @memberof Endorsement
     */
    endorser: string;
    /**
     * 
     * @type {string}
     * @memberof Endorsement
     */
    endorsementListId: string;
    /**
     * 
     * @type {EndorsementListOpen}
     * @memberof Endorsement
     */
    endorsementList?: EndorsementListOpen;
    /**
     * 
     * @type {EndorsementMetadata}
     * @memberof Endorsement
     */
    meta: EndorsementMetadata;
    /**
     * 
     * @type {string}
     * @memberof Endorsement
     */
    created: string;
    /**
     * 
     * @type {string}
     * @memberof Endorsement
     */
    modified: string;
}

export function EndorsementFromJSON(json: any): Endorsement {
    return EndorsementFromJSONTyped(json, false);
}

export function EndorsementFromJSONTyped(json: any, ignoreDiscriminator: boolean): Endorsement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'counter': json['counter'],
        'endorser': json['endorser'],
        'endorsementListId': json['endorsementListId'],
        'endorsementList': !exists(json, 'endorsementList') ? undefined : EndorsementListOpenFromJSON(json['endorsementList']),
        'meta': EndorsementMetadataFromJSON(json['meta']),
        'created': json['created'],
        'modified': json['modified'],
    };
}

export function EndorsementToJSON(value?: Endorsement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'counter': value.counter,
        'endorser': value.endorser,
        'endorsementListId': value.endorsementListId,
        'endorsementList': EndorsementListOpenToJSON(value.endorsementList),
        'meta': EndorsementMetadataToJSON(value.meta),
        'created': value.created,
        'modified': value.modified,
    };
}


