/* tslint:disable */
/* eslint-disable */
/**
 * EndorsementSystem
 * This API manages endorsement lists and associated endorsements collected by systems within island.is.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EndorsementMetadataDto,
    EndorsementMetadataDtoFromJSON,
    EndorsementMetadataDtoFromJSONTyped,
    EndorsementMetadataDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface EndorsementListDto
 */
export interface EndorsementListDto {
    /**
     * 
     * @type {string}
     * @memberof EndorsementListDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof EndorsementListDto
     */
    description?: string | null;
    /**
     * 
     * @type {Array<EndorsementMetadataDto>}
     * @memberof EndorsementListDto
     */
    endorsementMetadata: Array<EndorsementMetadataDto> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof EndorsementListDto
     */
    tags: Array<EndorsementListDtoTagsEnum>;
    /**
     * 
     * @type {object}
     * @memberof EndorsementListDto
     */
    meta: object | null;
    /**
     * 
     * @type {Date}
     * @memberof EndorsementListDto
     */
    openedDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof EndorsementListDto
     */
    closedDate: Date;
    /**
     * 
     * @type {boolean}
     * @memberof EndorsementListDto
     */
    adminLock: boolean;
}

export function EndorsementListDtoFromJSON(json: any): EndorsementListDto {
    return EndorsementListDtoFromJSONTyped(json, false);
}

export function EndorsementListDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EndorsementListDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'endorsementMetadata': (json['endorsementMetadata'] === null ? null : (json['endorsementMetadata'] as Array<any>).map(EndorsementMetadataDtoFromJSON)),
        'tags': json['tags'],
        'meta': json['meta'],
        'openedDate': (new Date(json['openedDate'])),
        'closedDate': (new Date(json['closedDate'])),
        'adminLock': json['adminLock'],
    };
}

export function EndorsementListDtoToJSON(value?: EndorsementListDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'description': value.description,
        'endorsementMetadata': (value.endorsementMetadata === null ? null : (value.endorsementMetadata as Array<any>).map(EndorsementMetadataDtoToJSON)),
        'tags': value.tags,
        'meta': value.meta,
        'openedDate': (value.openedDate.toISOString()),
        'closedDate': (value.closedDate.toISOString()),
        'adminLock': value.adminLock,
    };
}

/**
* @export
* @enum {string}
*/
export enum EndorsementListDtoTagsEnum {
    generalPetition = 'generalPetition'
}


