openapi: 3.0.0
paths:
  /liveness:
    get:
      operationId: InfraController_liveness
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Liveness'
      tags:
        - internal
  /version:
    get:
      operationId: InfraController_version
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      tags:
        - internal
  /health/check:
    get:
      operationId: HealthController_check
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
  /api/icelandic-names-registry/names:
    get:
      operationId: IcelandicNameController_getAll
      parameters: []
      responses:
        '200':
          description: Gets all icelandic names.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IcelandicName'
      tags:
        - icelandic-names-registry
    post:
      operationId: IcelandicNameController_createName
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIcelandicNameBodyDto'
      responses:
        '200':
          description: ''
        '201':
          description: The name has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IcelandicName'
        '400':
          description: The request data was missing or had invalid values.
      tags:
        - icelandic-names-registry
      security:
        - bearer: []
  /api/icelandic-names-registry/names/{id}:
    get:
      operationId: IcelandicNameController_getById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: Gets icelandic name by id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IcelandicName'
        '404':
          description: The name was not found.
      tags:
        - icelandic-names-registry
    patch:
      operationId: IcelandicNameController_updateNameById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIcelandicNameBodyDto'
      responses:
        '200':
          description: ''
      tags:
        - icelandic-names-registry
      security:
        - bearer: []
    delete:
      operationId: IcelandicNameController_deleteById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
        '204':
          description: The name has been successfully deleted.
        '404':
          description: The name was not found.
      tags:
        - icelandic-names-registry
      security:
        - bearer: []
  /api/icelandic-names-registry/names/initial-letter/{initialLetter}:
    get:
      operationId: IcelandicNameController_getByInitialLetter
      parameters:
        - name: initialLetter
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Gets all icelandic names by initial letter.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IcelandicName'
      tags:
        - icelandic-names-registry
  /api/icelandic-names-registry/names/search/{q}:
    get:
      operationId: IcelandicNameController_getBySearch
      parameters:
        - name: q
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Gets all icelandic names by search.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IcelandicName'
      tags:
        - icelandic-names-registry
info:
  title: Íslensk mannanöfn
  description: ''
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    Liveness:
      type: object
      properties:
        ok:
          type: boolean
      required:
        - ok
    Version:
      type: object
      properties:
        version:
          type: string
      required:
        - version
    IcelandicName:
      type: object
      properties: {}
    UpdateIcelandicNameBodyDto:
      type: object
      properties: {}
    CreateIcelandicNameBodyDto:
      type: object
      properties: {}
