openapi: 3.0.0
paths:
  /liveness:
    get:
      operationId: InfraController_liveness
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Liveness'
      tags:
        - internal
  /version:
    get:
      operationId: InfraController_version
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      tags:
        - internal
  /health/check:
    get:
      operationId: HealthController_check
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
  /v1/notifications/templates:
    get:
      operationId: NotificationsController_getNotificationTemplates
      summary: Fetches all notification templates
      parameters:
        - name: locale
          required: false
          in: query
          description: locale
          example: en
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HnippTemplate'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
      tags:
        - notifications
  /v1/notifications/template/{templateId}:
    get:
      operationId: NotificationsController_getNotificationTemplate
      summary: Fetches a single notification template
      parameters:
        - name: templateId
          required: true
          in: path
          description: ID of the template
          example: HNIPP.POSTHOLF.NEW_DOCUMENT
          schema:
            type: string
        - name: locale
          required: false
          in: query
          description: locale
          example: en
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HnippTemplate'
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
      tags:
        - notifications
  /notifications:
    get:
      operationId: NotificationsController_findMany
      summary: Returns a paginated list of notifications for a national id
      parameters:
        - name: X-Query-National-Id
          required: true
          in: header
          schema:
            type: string
        - name: limit
          required: false
          in: query
          description: Limits the number of results in a request.
          schema:
            default: 10
            type: number
        - name: before
          required: false
          in: query
          description: >-
            The value of `startCursor` from the previous response pageInfo to
            query the previous page of `limit` number of data items.
          schema:
            type: string
        - name: after
          required: false
          in: query
          description: >-
            The value of `endCursor` from the response to query the next page of
            `limit` number of data items.
          schema:
            type: string
        - name: locale
          required: false
          in: query
          description: locale
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationDto'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
      tags:
        - notifications
  /v1/notifications:
    post:
      operationId: NotificationsController_createHnippNotification
      summary: Creates a new notification and adds to queue
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHnippNotificationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNotificationResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '409':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
      tags:
        - notifications
  /v1/me/notifications:
    get:
      operationId: MeNotificationsController_findMany
      summary: Returns a paginated list of current user notifications
      parameters:
        - name: limit
          required: false
          in: query
          description: Limits the number of results in a request.
          schema:
            default: 10
            type: number
        - name: before
          required: false
          in: query
          description: >-
            The value of `startCursor` from the previous response pageInfo to
            query the previous page of `limit` number of data items.
          schema:
            type: string
        - name: after
          required: false
          in: query
          description: >-
            The value of `endCursor` from the response to query the next page of
            `limit` number of data items.
          schema:
            type: string
        - name: locale
          required: false
          in: query
          description: locale
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationDto'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
      tags:
        - user-notification
      security:
        - oauth2:
            - '@island.is/documents'
  /v1/me/notifications/unread-count:
    get:
      operationId: MeNotificationsController_getUnreadNotificationsCount
      summary: Returns a count of unread notifications for the current user
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnreadNotificationsCountDto'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
      tags:
        - user-notification
      security:
        - oauth2:
            - '@island.is/documents'
  /v1/me/notifications/unseen-count:
    get:
      operationId: MeNotificationsController_getUnseenNotificationsCount
      summary: Returns a count of unseen notifications for the current user
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnseenNotificationsCountDto'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
      tags:
        - user-notification
      security:
        - oauth2:
            - '@island.is/documents'
  /v1/me/notifications/{id}:
    get:
      operationId: MeNotificationsController_findOne
      summary: Returns current user specific notification
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
        - name: locale
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderedNotificationDto'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
      tags:
        - user-notification
      security:
        - oauth2:
            - '@island.is/documents'
    patch:
      operationId: MeNotificationsController_update
      summary: Updates current user specific notification
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
        - name: locale
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderedNotificationDto'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
      tags:
        - user-notification
      security:
        - oauth2:
            - '@island.is/documents'
  /v1/me/notifications/mark-all-as-seen:
    post:
      operationId: MeNotificationsController_markAllAsSeen
      summary: Updates all of  current user notifications as seen
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
      tags:
        - user-notification
      security:
        - oauth2:
            - '@island.is/documents'
  /v1/me/notifications/mark-all-as-read:
    post:
      operationId: MeNotificationsController_markAllAsRead
      summary: Updates all of  current user notifications as read
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpProblemResponse'
      tags:
        - user-notification
      security:
        - oauth2:
            - '@island.is/documents'
info:
  title: Notification Service
  description: >-
    Creates and stores notifications AND sends as mobile push notifications and
    emails
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          scopes:
            openid: ''
            profile: ''
            '@island.is/documents': ''
          authorizationUrl: https://identity-server.dev01.devland.is/connect/authorize
          tokenUrl: https://identity-server.dev01.devland.is/connect/token
      description: OAuth2 authentication scheme.
  schemas:
    Liveness:
      type: object
      properties:
        ok:
          type: boolean
      required:
        - ok
    Version:
      type: object
      properties:
        version:
          type: string
      required:
        - version
    HnippTemplate:
      type: object
      properties:
        templateId:
          type: string
          example: HNIPP.POSTHOLF.NEW_DOCUMENT
        title:
          type: string
          example: New document
        externalBody:
          type: string
          example: New document from {{organization}}
        internalBody:
          type: string
          example: Some extra text ...
        clickActionUrl:
          type: string
          example: https://island.is/minarsidur/postholf
        args:
          example:
            - arg1
            - arg2
          type: array
          items:
            type: string
      required:
        - templateId
        - title
        - externalBody
        - internalBody
        - clickActionUrl
        - args
    HttpProblemResponse:
      type: object
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type
        title:
          type: string
          description: A short, human-readable summary of the problem type
        status:
          type: number
          description: The HTTP status code
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
      required:
        - type
        - title
    RenderedNotificationDto:
      type: object
      properties:
        id:
          type: number
          example: 123
        messageId:
          type: string
          example: message-uuid
        senderId:
          type: string
          example: '1234567890'
        title:
          type: string
          example: Catchy notification title
        externalBody:
          type: string
          example: Compelling nofication body
        internalBody:
          type: string
          example: Extra body text for further viewing
        clickActionUrl:
          type: string
          example: https://island.is/minarsidur/postholf
        created:
          format: date-time
          type: string
          example: '2025-05-06T09:38:06.867Z'
        updated:
          format: date-time
          type: string
          example: '2025-05-06T09:38:06.867Z'
        read:
          type: boolean
          example: false
        seen:
          type: boolean
          example: false
      required:
        - id
        - messageId
        - senderId
        - title
        - externalBody
        - created
        - updated
        - read
        - seen
    PageInfoDto:
      type: object
      properties:
        hasNextPage:
          type: boolean
          example: true
        hasPreviousPage:
          type: boolean
          example: false
        startCursor:
          type: string
          example: WyIwM2JmMWUwOS1hNWEwLTQyNDMtOTAxOC1mY2FhYjg4NTVkMTYiXQ==
        endCursor:
          type: string
          example: WyJmODY1MDAzMS03YTFkLTRhOTAtOWI2OC00ODg1YjlkZDZjZDgiXQ==
      required:
        - hasNextPage
        - hasPreviousPage
        - startCursor
        - endCursor
    PaginatedNotificationDto:
      type: object
      properties:
        totalCount:
          type: number
          example: 100
        data:
          example:
            - {}
          type: array
          items:
            $ref: '#/components/schemas/RenderedNotificationDto'
        pageInfo:
          example: {}
          allOf:
            - $ref: '#/components/schemas/PageInfoDto'
      required:
        - totalCount
        - data
        - pageInfo
    HnippNotificationOriginalRecipientDto:
      type: object
      properties:
        nationalId:
          type: string
          example: '1234567890'
        name:
          type: string
        subjectId:
          type: string
      required:
        - nationalId
        - name
        - subjectId
    ArgumentDto:
      type: object
      properties:
        key:
          type: string
          example: key
        value:
          type: string
          example: value
      required:
        - key
        - value
    CreateHnippNotificationDto:
      type: object
      properties:
        recipient:
          type: string
          example: '1234567890'
        senderId:
          type: string
          example: '1234567890'
        onBehalfOf:
          $ref: '#/components/schemas/HnippNotificationOriginalRecipientDto'
        templateId:
          type: string
          example: HNIPP.POSTHOLF.NEW_DOCUMENT
        args:
          example:
            - key: organization
              value: Hnipp Test Crew
            - key: documentId
              value: abcd-abcd-abcd-abcd
          type: array
          items:
            $ref: '#/components/schemas/ArgumentDto'
      required:
        - recipient
        - templateId
        - args
    CreateNotificationResponse:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    UnreadNotificationsCountDto:
      type: object
      properties:
        unreadCount:
          type: number
          example: 42
      required:
        - unreadCount
    UnseenNotificationsCountDto:
      type: object
      properties:
        unseenCount:
          type: number
          example: 42
      required:
        - unseenCount
    UpdateNotificationDto:
      type: object
      properties:
        read:
          type: boolean
          example: true
        seen:
          type: boolean
          example: true
