openapi: 3.0.0
paths:
  /liveness:
    get:
      operationId: InfraController_liveness
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Liveness'
      tags:
        - internal
  /version:
    get:
      operationId: InfraController_version
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      tags:
        - internal
  /health/check:
    get:
      operationId: HealthController_check
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
  /organizations:
    post:
      operationId: OrganizationsController_create
      summary: Create an organization
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationDto'
      responses:
        '201':
          description: Create an organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
      tags:
        - organizations
    get:
      operationId: OrganizationsController_findAll
      summary: Get all Organizations
      parameters: []
      responses:
        '200':
          description: Get all Organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsResponseDto'
      tags:
        - organizations
  /organizations/admin/{nationalId}:
    get:
      operationId: OrganizationsController_findAdmin
      summary: Get organization admin
      parameters:
        - name: nationalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Get organization admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAdminDto'
      tags:
        - organizations
  /organizations/{id}:
    get:
      operationId: OrganizationsController_findOne
      summary: Get an organization by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Get an organization by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
      tags:
        - organizations
  /forms/{organizationNationalId}:
    post:
      operationId: FormsController_create
      summary: Create new form
      parameters:
        - name: organizationNationalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Create new form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormResponseDto'
      tags:
        - forms
  /forms/organization/{nationalId}:
    get:
      operationId: FormsController_findAll
      summary: Get all forms belonging to organization
      parameters:
        - name: nationalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Get all forms belonging to organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormResponseDto'
      tags:
        - forms
  /forms/{id}:
    get:
      operationId: FormsController_findOne
      summary: Get form by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Get form by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormResponseDto'
      tags:
        - forms
    put:
      operationId: FormsController_updateForm
      summary: Update form
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFormDto'
      responses:
        '200':
          description: Update form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFormResponse'
      tags:
        - forms
    delete:
      operationId: FormsController_delete
      summary: Delete form
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Delete form
      tags:
        - forms
  /forms/changePublished/{id}:
    put:
      operationId: FormsController_changePublishedForm
      summary: Change published form
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Change published form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormResponseDto'
      tags:
        - forms
  /forms/publish/{id}:
    put:
      operationId: FormsController_publish
      summary: Publish form
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Publish form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormResponseDto'
      tags:
        - forms
  /sections:
    post:
      operationId: SectionsController_create
      summary: Creates a new section
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSectionDto'
      responses:
        '201':
          description: Creates a new section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionDto'
      tags:
        - sections
    put:
      operationId: SectionsController_updateDisplayOrder
      summary: Update display order of sections
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSectionsDisplayOrderDto'
      responses:
        '204':
          description: Update display order of sections
      tags:
        - sections
  /sections/{id}:
    put:
      operationId: SectionsController_update
      summary: Updates a section
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSectionDto'
      responses:
        '204':
          description: Updates a section
      tags:
        - sections
    delete:
      operationId: SectionsController_delete
      summary: Delete section by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Delete section by id
      tags:
        - sections
  /screens:
    post:
      operationId: ScreensController_create
      summary: Creates a new screen
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScreenDto'
      responses:
        '201':
          description: Creates a new screen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenDto'
      tags:
        - screens
    put:
      operationId: ScreensController_updateDisplayOrder
      summary: Update display order of screens
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScreensDisplayOrderDto'
      responses:
        '204':
          description: Update display order of screens
      tags:
        - screens
  /screens/{id}:
    put:
      operationId: ScreensController_update
      summary: Update screen
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScreenDto'
      responses:
        '204':
          description: Update screen
      tags:
        - screens
    delete:
      operationId: ScreensController_delete
      summary: Delete screen by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Delete screen by id
      tags:
        - screens
  /fields:
    post:
      operationId: FieldsController_create
      summary: Create a field
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFieldDto'
      responses:
        '201':
          description: Create a field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldDto'
      tags:
        - fields
    put:
      operationId: FieldsController_updateDisplayOrder
      summary: Update display order of fields
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFieldsDisplayOrderDto'
      responses:
        '204':
          description: Update display order of fields
      tags:
        - fields
  /fields/{id}:
    put:
      operationId: FieldsController_update
      summary: Update field
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFieldDto'
      responses:
        '204':
          description: Update field
      tags:
        - fields
    delete:
      operationId: FieldsController_delete
      summary: Delete field by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Delete field by id
      tags:
        - fields
  /listItems:
    post:
      operationId: ListItemsController_create
      summary: Create a list item
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateListItemDto'
      responses:
        '201':
          description: Create a list item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItemDto'
      tags:
        - list items
    put:
      operationId: ListItemsController_updateDisplayOrder
      summary: Update display order of list items
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateListItemsDisplayOrderDto'
      responses:
        '204':
          description: Update display order of list items
      tags:
        - list items
  /listItems/{id}:
    put:
      operationId: ListItemsController_update
      summary: Update list item
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateListItemDto'
      responses:
        '204':
          description: Update list item
      tags:
        - list items
    delete:
      operationId: ListItemsController_delete
      summary: Delete list item
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Delete of list items
      tags:
        - list items
  /applications/{id}:
    get:
      operationId: ApplicationsController_getApplication
      summary: Get an application by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Get an application by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
      tags:
        - applications
    put:
      operationId: ApplicationsController_update
      summary: Update application dependencies
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationDto'
      responses:
        '204':
          description: Update application dependencies
      tags:
        - applications
  /applications/{slug}:
    post:
      operationId: ApplicationsController_create
      summary: Create new application
      parameters:
        - name: slug
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationDto'
      responses:
        '201':
          description: Create new application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
      tags:
        - applications
  /applications/submit/{id}:
    post:
      operationId: ApplicationsController_submit
      summary: Submit application
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Submit application
      tags:
        - applications
  /applications/submitScreen{screenId}:
    post:
      operationId: ApplicationsController_submitScreen
      summary: validate and save input values of a screen
      parameters:
        - name: screenId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDto'
      responses:
        '201':
          description: validate and save input values of a screen
      tags:
        - applications
  /applications/organization/{organizationId}:
    get:
      operationId: ApplicationsController_findAllByOrganization
      summary: Get all applications belonging to organization
      parameters:
        - name: organizationId
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: true
          in: query
          schema:
            type: number
        - name: limit
          required: true
          in: query
          schema:
            type: number
        - name: isTest
          required: true
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Get all applications belonging to organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListDto'
      tags:
        - applications
  /formApplicantTypes:
    post:
      operationId: FormApplicantTypesController_create
      summary: Add form applicant type
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFormApplicantTypeDto'
      responses:
        '201':
          description: Add form applicant type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormApplicantTypeDto'
      tags:
        - form applicant types
  /formApplicantTypes/{id}:
    put:
      operationId: FormApplicantTypesController_update
      summary: Update form applicant
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFormApplicantTypeDto'
      responses:
        '204':
          description: Update form applicant
      tags:
        - form applicant types
    delete:
      operationId: FormApplicantTypesController_delete
      summary: Delete form applicant
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Delete form applicant
      tags:
        - form applicant types
  /formCertificationTypes:
    post:
      operationId: FormCertificationTypesController_create
      summary: Add form certification type
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFormCertificationTypeDto'
      responses:
        '201':
          description: Add form certification type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormCertificationTypeDto'
      tags:
        - form certification types
  /formCertificationTypes/{id}:
    delete:
      operationId: FormCertificationTypesController_delete
      summary: Remove form certification type
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Remove form certification type
      tags:
        - form certification types
  /formUrls:
    post:
      operationId: FormUrlsController_create
      summary: Add form url
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFormUrlDto'
      responses:
        '201':
          description: Add form url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormUrlDto'
      tags:
        - form urls
  /formUrls/{id}:
    delete:
      operationId: FormUrlsController_delete
      summary: Remove form url
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Remove form url
      tags:
        - form urls
  /organizationPermissions:
    post:
      operationId: OrganizationPermissionsController_create
      summary: Add organization permission
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationPermissionDto'
      responses:
        '201':
          description: Add organization permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationPermissionDto'
      tags:
        - organization permissions
    delete:
      operationId: OrganizationPermissionsController_delete
      summary: Remove organization permission
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationPermissionDto'
      responses:
        '204':
          description: Remove organization permission
      tags:
        - organization permissions
  /organizationUrls:
    post:
      operationId: OrganizationUrlsController_create
      summary: Add organization url
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationUrlDto'
      responses:
        '201':
          description: Add organization url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUrlDto'
      tags:
        - organization urls
  /organizationUrls/{id}:
    put:
      operationId: OrganizationUrlsController_update
      summary: Update an organization url
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationUrlDto'
      responses:
        '204':
          description: Update an organization url
      tags:
        - organization urls
    delete:
      operationId: OrganizationUrlsController_delete
      summary: Remove organization url
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Remove organization url
      tags:
        - organization urls
info:
  title: Form System API
  description: This is an API for formbuilder and form-rendering (application) system
  version: '1.0'
  contact: {}
tags: []
servers:
  - url: http://localhost:3434
components:
  schemas:
    Liveness:
      type: object
      properties:
        ok:
          type: boolean
      required:
        - ok
    Version:
      type: object
      properties:
        version:
          type: string
      required:
        - version
    LanguageType:
      type: object
      properties:
        is:
          type: string
          default: ''
        en:
          type: string
          default: ''
      required:
        - is
        - en
    CreateOrganizationDto:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LanguageType'
        nationalId:
          type: string
      required:
        - name
        - nationalId
    Dependency:
      type: object
      properties:
        parentProp:
          type: string
        childProps:
          type: array
          items:
            type: string
        isSelected:
          type: boolean
      required:
        - parentProp
        - childProps
        - isSelected
    FormCertificationTypeDto:
      type: object
      properties:
        id:
          type: string
        certificationTypeId:
          type: string
      required:
        - id
        - certificationTypeId
    FormApplicantTypeDto:
      type: object
      properties:
        id:
          type: string
        applicantTypeId:
          type: string
        name:
          $ref: '#/components/schemas/LanguageType'
      required:
        - id
        - applicantTypeId
        - name
    FormUrlDto:
      type: object
      properties:
        id:
          type: string
        organizationUrlId:
          type: string
        url:
          type: string
        isXroad:
          type: boolean
        isTest:
          type: boolean
        type:
          type: string
        method:
          type: string
      required:
        - id
        - organizationUrlId
        - url
        - isXroad
        - isTest
        - type
        - method
    FieldSettings:
      type: object
      properties:
        minValue:
          type: number
        maxValue:
          type: number
        minLength:
          type: number
        maxLength:
          type: number
        minDate:
          format: date-time
          type: string
        maxDate:
          format: date-time
          type: string
        minAmount:
          type: number
        maxAmount:
          type: number
        year:
          type: number
        hasLink:
          type: boolean
        url:
          type: string
        buttonText:
          $ref: '#/components/schemas/LanguageType'
        isLarge:
          type: boolean
        hasPropertyInput:
          type: boolean
        hasPropertyList:
          type: boolean
        listType:
          type: string
          enum:
            - CUSTOM
            - MUNICIPALITIES
            - COUNTRIES
            - POSTAL_CODES
            - MASTERS_TRADES
            - REGISTRATION_CATEGORIES_OF_ACTIVITIES
        fileTypes:
          type: string
        fileMaxSize:
          type: number
        maxFiles:
          type: number
        timeInterval:
          type: string
    ListItemDto:
      type: object
      properties:
        id:
          type: string
        label:
          $ref: '#/components/schemas/LanguageType'
        description:
          $ref: '#/components/schemas/LanguageType'
        value:
          type: string
        displayOrder:
          type: number
        isSelected:
          type: boolean
      required:
        - id
        - label
        - value
        - displayOrder
        - isSelected
    Month:
      type: object
      properties:
        month:
          type: number
        amount:
          type: number
        days:
          type: array
          items:
            type: number
    ValueType:
      type: object
      properties:
        text:
          type: string
        number:
          type: number
        date:
          format: date-time
          type: string
        listValue:
          type: string
        nationalId:
          type: string
        name:
          type: string
        address:
          type: string
        postalCode:
          type: string
        municipality:
          type: string
        jobTitle:
          type: string
        altName:
          type: string
        homestayNumber:
          type: string
        propertyNumber:
          type: string
        totalDays:
          type: number
        totalAmount:
          type: number
        year:
          type: number
        isNullReport:
          type: boolean
        months:
          type: array
          items:
            $ref: '#/components/schemas/Month'
        email:
          type: string
        iskNumber:
          type: string
        checkboxValue:
          type: boolean
        phoneNumber:
          type: string
        bankAccount:
          type: string
        time:
          type: string
        s3Key:
          type: string
        s3Url:
          type: string
        paymentCode:
          type: string
    ApplicationEventDto:
      type: object
      properties:
        created:
          format: date-time
          type: string
        eventType:
          type: string
        isFileEvent:
          type: boolean
    ValueDto:
      type: object
      properties:
        id:
          type: string
        order:
          type: number
        json:
          $ref: '#/components/schemas/ValueType'
        events:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationEventDto'
      required:
        - id
        - order
        - events
    FieldDto:
      type: object
      properties:
        id:
          type: string
        screenId:
          type: string
        name:
          $ref: '#/components/schemas/LanguageType'
        displayOrder:
          type: number
        description:
          $ref: '#/components/schemas/LanguageType'
        isPartOfMultiset:
          type: boolean
        isRequired:
          type: boolean
        isHidden:
          type: boolean
        fieldSettings:
          $ref: '#/components/schemas/FieldSettings'
        fieldType:
          type: string
        list:
          type: array
          items:
            $ref: '#/components/schemas/ListItemDto'
        values:
          type: array
          items:
            $ref: '#/components/schemas/ValueDto'
      required:
        - id
        - screenId
        - name
        - displayOrder
        - description
        - isPartOfMultiset
        - isRequired
        - isHidden
        - fieldType
    ScreenDto:
      type: object
      properties:
        id:
          type: string
        sectionId:
          type: string
        name:
          $ref: '#/components/schemas/LanguageType'
        displayOrder:
          type: number
        isHidden:
          type: boolean
        isCompleted:
          type: boolean
        multiset:
          type: number
        callRuleset:
          type: boolean
        fields:
          type: array
          items:
            $ref: '#/components/schemas/FieldDto'
      required:
        - id
        - sectionId
        - name
        - displayOrder
        - isHidden
        - isCompleted
        - multiset
        - callRuleset
    SectionDto:
      type: object
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/LanguageType'
        sectionType:
          type: string
        displayOrder:
          type: number
        waitingText:
          $ref: '#/components/schemas/LanguageType'
        isHidden:
          type: boolean
        isCompleted:
          type: boolean
        screens:
          type: array
          items:
            $ref: '#/components/schemas/ScreenDto'
      required:
        - id
        - name
        - sectionType
        - displayOrder
        - isHidden
        - isCompleted
    FormDto:
      type: object
      properties:
        id:
          type: string
        organizationId:
          type: string
        organizationNationalId:
          type: string
        organizationTitle:
          type: string
        organizationTitleEn:
          type: string
        organizationDisplayName:
          $ref: '#/components/schemas/LanguageType'
        name:
          $ref: '#/components/schemas/LanguageType'
        slug:
          type: string
        invalidationDate:
          format: date-time
          type: string
        created:
          format: date-time
          type: string
        modified:
          format: date-time
          type: string
        hasPayment:
          type: boolean
        beenPublished:
          type: boolean
        isTranslated:
          type: boolean
        applicationDaysToRemove:
          type: number
        derivedFrom:
          type: string
        status:
          type: string
        stopProgressOnValidatingScreen:
          type: boolean
        completedMessage:
          $ref: '#/components/schemas/LanguageType'
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
        certificationTypes:
          type: array
          items:
            $ref: '#/components/schemas/FormCertificationTypeDto'
        applicantTypes:
          type: array
          items:
            $ref: '#/components/schemas/FormApplicantTypeDto'
        urls:
          type: array
          items:
            $ref: '#/components/schemas/FormUrlDto'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/SectionDto'
        screens:
          type: array
          items:
            $ref: '#/components/schemas/ScreenDto'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/FieldDto'
      required:
        - id
        - organizationId
        - organizationNationalId
        - name
        - slug
        - created
        - modified
        - hasPayment
        - beenPublished
        - isTranslated
        - applicationDaysToRemove
        - derivedFrom
        - status
        - stopProgressOnValidatingScreen
    OrganizationDto:
      type: object
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/LanguageType'
        nationalId:
          type: string
        forms:
          type: array
          items:
            $ref: '#/components/schemas/FormDto'
      required:
        - id
        - name
        - nationalId
    OrganizationsResponseDto:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationDto'
      required:
        - organizations
    ListType:
      type: object
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/LanguageType'
        description:
          $ref: '#/components/schemas/LanguageType'
        isCommon:
          type: boolean
      required:
        - id
        - name
        - description
        - isCommon
    FieldType:
      type: object
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/LanguageType'
        description:
          $ref: '#/components/schemas/LanguageType'
        isCommon:
          type: boolean
        fieldSettings:
          $ref: '#/components/schemas/FieldSettings'
        values:
          type: array
          items:
            $ref: '#/components/schemas/ValueDto'
      required:
        - id
        - name
        - description
        - isCommon
    CertificationType:
      type: object
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/LanguageType'
        description:
          $ref: '#/components/schemas/LanguageType'
        isCommon:
          type: boolean
      required:
        - id
        - name
        - description
        - isCommon
    Option:
      type: object
      properties:
        value:
          type: string
        label:
          type: string
        isSelected:
          type: boolean
      required:
        - value
        - label
        - isSelected
    OrganizationAdminDto:
      type: object
      properties:
        organizationId:
          type: string
        selectedListTypes:
          type: array
          items:
            type: string
        selectedFieldTypes:
          type: array
          items:
            type: string
        selectedCertificationTypes:
          type: array
          items:
            type: string
        ListTypes:
          type: array
          items:
            $ref: '#/components/schemas/ListType'
        FieldTypes:
          type: array
          items:
            $ref: '#/components/schemas/FieldType'
        certificationTypes:
          type: array
          items:
            $ref: '#/components/schemas/CertificationType'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/Option'
    ApplicantType:
      type: object
      properties:
        id:
          type: string
        description:
          $ref: '#/components/schemas/LanguageType'
        name:
          $ref: '#/components/schemas/LanguageType'
        nameSuggestions:
          type: array
          items:
            $ref: '#/components/schemas/LanguageType'
      required:
        - id
        - description
    OrganizationUrlDto:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        isXroad:
          type: boolean
        isTest:
          type: boolean
        type:
          type: string
        method:
          type: string
      required:
        - id
        - url
        - isXroad
        - isTest
        - type
        - method
    FormResponseDto:
      type: object
      properties:
        form:
          $ref: '#/components/schemas/FormDto'
        fieldTypes:
          type: array
          items:
            $ref: '#/components/schemas/FieldType'
        certificationTypes:
          type: array
          items:
            $ref: '#/components/schemas/CertificationType'
        applicantTypes:
          type: array
          items:
            $ref: '#/components/schemas/ApplicantType'
        listTypes:
          type: array
          items:
            $ref: '#/components/schemas/ListType'
        urls:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUrlDto'
        forms:
          type: array
          items:
            $ref: '#/components/schemas/FormDto'
        organizationNationalIds:
          type: array
          items:
            type: string
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/Option'
    UpdateFormDto:
      type: object
      properties:
        organizationId:
          type: string
        name:
          $ref: '#/components/schemas/LanguageType'
        organizationDisplayName:
          $ref: '#/components/schemas/LanguageType'
        slug:
          type: string
        invalidationDate:
          format: date-time
          type: string
        hasPayment:
          type: boolean
        beenPublished:
          type: boolean
        isTranslated:
          type: boolean
        applicationDaysToRemove:
          type: number
        stopProgressOnValidatingScreen:
          type: boolean
        completedMessage:
          $ref: '#/components/schemas/LanguageType'
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
    UpdateFormError:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    UpdateFormResponse:
      type: object
      properties:
        updateSuccess:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UpdateFormError'
    CreateSectionDto:
      type: object
      properties:
        formId:
          type: string
        displayOrder:
          type: number
      required:
        - formId
        - displayOrder
    UpdateSectionDto:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LanguageType'
        waitingText:
          $ref: '#/components/schemas/LanguageType'
    SectionDisplayOrderDto:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    UpdateSectionsDisplayOrderDto:
      type: object
      properties:
        sectionsDisplayOrderDto:
          type: array
          items:
            $ref: '#/components/schemas/SectionDisplayOrderDto'
      required:
        - sectionsDisplayOrderDto
    CreateScreenDto:
      type: object
      properties:
        sectionId:
          type: string
        displayOrder:
          type: number
      required:
        - sectionId
        - displayOrder
    UpdateScreenDto:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LanguageType'
        multiset:
          type: number
        callRuleset:
          type: boolean
    ScreenDisplayOrderDto:
      type: object
      properties:
        id:
          type: string
        sectionId:
          type: string
      required:
        - id
        - sectionId
    UpdateScreensDisplayOrderDto:
      type: object
      properties:
        screensDisplayOrderDto:
          type: array
          items:
            $ref: '#/components/schemas/ScreenDisplayOrderDto'
      required:
        - screensDisplayOrderDto
    CreateFieldDto:
      type: object
      properties:
        screenId:
          type: string
        fieldType:
          type: string
        displayOrder:
          type: number
      required:
        - screenId
        - fieldType
        - displayOrder
    UpdateFieldDto:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LanguageType'
        description:
          $ref: '#/components/schemas/LanguageType'
        isPartOfMultiset:
          type: boolean
        isRequired:
          type: boolean
        fieldSettings:
          $ref: '#/components/schemas/FieldSettings'
        fieldType:
          type: string
    FieldDisplayOrderDto:
      type: object
      properties:
        id:
          type: string
        screenId:
          type: string
      required:
        - id
        - screenId
    UpdateFieldsDisplayOrderDto:
      type: object
      properties:
        fieldsDisplayOrderDto:
          type: array
          items:
            $ref: '#/components/schemas/FieldDisplayOrderDto'
      required:
        - fieldsDisplayOrderDto
    CreateListItemDto:
      type: object
      properties:
        fieldId:
          type: string
        displayOrder:
          type: number
      required:
        - fieldId
        - displayOrder
    UpdateListItemDto:
      type: object
      properties:
        label:
          $ref: '#/components/schemas/LanguageType'
        description:
          $ref: '#/components/schemas/LanguageType'
        value:
          type: string
        isSelected:
          type: boolean
    ListItemDisplayOrderDto:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    UpdateListItemsDisplayOrderDto:
      type: object
      properties:
        listItemsDisplayOrderDto:
          type: array
          items:
            $ref: '#/components/schemas/ListItemDisplayOrderDto'
      required:
        - listItemsDisplayOrderDto
    ApplicationDto:
      type: object
      properties:
        id:
          type: string
        organizationName:
          $ref: '#/components/schemas/LanguageType'
        formId:
          type: string
        formName:
          $ref: '#/components/schemas/LanguageType'
        isTest:
          type: boolean
        slug:
          type: string
        created:
          format: date-time
          type: string
        modified:
          format: date-time
          type: string
        submittedAt:
          format: date-time
          type: string
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
        completed:
          type: array
          items:
            type: string
        status:
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationEventDto'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/SectionDto'
        files:
          type: array
          items:
            $ref: '#/components/schemas/ValueDto'
        certificationTypes:
          type: array
          items:
            $ref: '#/components/schemas/FormCertificationTypeDto'
        applicantTypes:
          type: array
          items:
            $ref: '#/components/schemas/FormApplicantTypeDto'
    CreateApplicationDto:
      type: object
      properties:
        isTest:
          type: boolean
      required:
        - isTest
    UpdateApplicationDto:
      type: object
      properties:
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
        completed:
          type: array
          items:
            type: string
    ApplicationListDto:
      type: object
      properties:
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationDto'
        total:
          type: number
    CreateFormApplicantTypeDto:
      type: object
      properties:
        formId:
          type: string
        applicantTypeId:
          type: string
      required:
        - formId
        - applicantTypeId
    UpdateFormApplicantTypeDto:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LanguageType'
      required:
        - name
    CreateFormCertificationTypeDto:
      type: object
      properties:
        formId:
          type: string
        certificationTypeId:
          type: string
      required:
        - formId
        - certificationTypeId
    CreateFormUrlDto:
      type: object
      properties:
        formId:
          type: string
        organizationUrlId:
          type: string
      required:
        - formId
        - organizationUrlId
    UpdateOrganizationPermissionDto:
      type: object
      properties:
        organizationId:
          type: string
        permission:
          type: string
      required:
        - organizationId
        - permission
    OrganizationPermissionDto:
      type: object
      properties:
        permission:
          type: string
      required:
        - permission
    CreateOrganizationUrlDto:
      type: object
      properties:
        organizationId:
          type: string
        type:
          type: string
      required:
        - organizationId
        - type
    UpdateOrganizationUrlDto:
      type: object
      properties:
        url:
          type: string
        isXroad:
          type: boolean
        method:
          type: string
